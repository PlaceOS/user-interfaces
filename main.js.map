{"version":3,"file":"main.js","mappings":"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AM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,MAAMliN,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKjN,EAAUgN,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_class","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r3","room_tile_component_1","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","_r2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r4","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_2","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","filtered_events","ev","bkn","meeting_id","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","_ignore_cancel","_checkCancel","interval","startWith","_ref27","_ref29","_ref30","_auto_release$resourc","is_home","auto_release","_iterator","_step","check_block","_iterator2","_step2","booking","diff","time","time_after","time_before","_createForOfIteratorHelper","n","done","startOfMinute","addMinutes","checked_in","rejected","closeAll","differenceInMinutes","format","confirm_text","cancel_text","push","checkinBooking","f","finish","t1","_x2","triggerPoll","parse","stopPolling","clearInterval","setAsDeleted","_toggleType","clear","_x3","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_loop","assetgroup","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","request_r1","item_r5","_r8","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","_r11","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","rejected_ids","conflict","items","EMPTY_FAVS","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","request","changes","AssetRequest","new_value","state","order","order_list","requested","_step4","_iterator4","AssetSelectModalComponent","Math","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","randomInt","_step3","new_order","_changed","_items$find","__","getHours","getMinutes","_iterator3","_ret","_loop2","reduce","t","c","_c$items$find","item_count","setValue","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","_data$asset_ids","_data$extension_data","_this$event","_data$extension_data2","_data$extension_data3","_data$extension_data4","event_id","asset_ids","amount","_status","status","linked_bookings","request_id","_booking","notes","ref_id","blob","category_id","toggleFav","countChange","active","activeChange","fav","available","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","day_r6","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r15","toggleCategory","category","ɵɵattribute","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","getOptions","min","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","_requested_items","counts","filtered_assets","_$assets","_this$selected_items","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_data","_this$_data$exact_tim","selected_ids","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","localeCompare","queryAssetCategories","zone_id","_ref9","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","groups_cache","queryAssetGroupsExtended","has","forkJoin","limit","setTimeout","delete","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","asset_type_id","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","_booking$asset_ids2","_removeAssetRequests","requests","_$asset_ids","removeBooking","differenceBetweenAssetRequests","new_assets","old_assets","changed","match","_validateAssetRequestsForResource","ical_uid","from_booking","location_name","location_id","reset_state","force_create","booking_list","has_state","unchanged","changed_requests","changed_assets","filtered","used_ids","_step3$value","processed_requests","booking_id","_ref11","approved","unique","_ref15","_ref17","req","_ref20","_available_groups$fin","idx","_assets$find","_request$items","createBooking","user_email","r","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","purchase_orders","_purchase_orders$find","queryAvailableAssets","_booking$asset_ids","removeAssetRequests","validateAssetRequestsForResource","booking_details_modal_component_1","async_handler_class_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r9","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","ɵɵpureFunction1","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","_this$booking7","_this$booking8","_this$booking9","is_today","_this$booking10","_this$booking11","_this$booking12","_this$booking13","is_all_day","dur","formatDuration","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r18","request_r16","_r20","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_r22","_r24","hide_map","has_assets","_this$booking6","ts","booking_start","booking_end","_this$booking14","_this$booking15","_toggleCheckedIn","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","booking_status","can_edit","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","booking_rules","building_rules","available_resources","merge","timer","_this$_org$building","restrictions","_this$form$getRawValu","organisation","user_name","_asset$zone","_asset$groups","_options$features","_asset$zone2","_asset$zone3","is_restricted","rulesForResource","hidden","groups","grp","bookable","assigned_to","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone4","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","_this3$_org$building","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","phone","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","unavailable","group_name","_asset$zone5","_asset$zone6","_unavailable$map","_getNearbyResources","t2","t3","call","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","use_region","map_metadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","listChildMetadata","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x4","_x5","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$title","_b_valid_asset_cache","_b_valid_cache_expiry","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","getTime","removeEmptyFields","addHours","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","_item$items","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r12","DeskFiltersComponent_ng_container_12_mat_form_field_1_mat_option_5_Template","lvl_r16","_r18","ctx_r17","DeskFiltersComponent_ng_container_12_mat_form_field_3_mat_option_3_Template","DeskFiltersComponent_ng_container_12_mat_form_field_1_Template","DeskFiltersComponent_ng_container_12_mat_form_field_3_Template","hide_levels","reg_r22","setRegion","DeskFiltersComponent_ng_container_13_mat_form_field_1_mat_option_2_Template","region","regions","level_r28","DeskFiltersComponent_ng_container_13_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r26","_r30","ctx_r29","DeskFiltersComponent_ng_container_13_mat_form_field_3_mat_optgroup_5_Template","region_levels","DeskFiltersComponent_ng_container_13_mat_form_field_1_Template","DeskFiltersComponent_ng_container_13_mat_form_field_3_Template","_r32","ctx_r31","feat_r34","_r36","ctx_r35","ctx_r33","DeskFiltersComponent_section_32_div_3_Template","_r38","ctx_r37","_bsheet_ref","can_close","active_buildings","active_levels","region_list","active_region","tags","setLevel","reg","allow_time_changes","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_ng_container_12_Template","DeskFiltersComponent_ng_container_13_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r4","DeskMapComponent_mat_form_field_1_mat_option_2_Template","level_r11","DeskMapComponent_ng_template_2_mat_optgroup_2_mat_option_1_Template","bld_r9","DeskMapComponent_ng_template_2_mat_optgroup_2_Template","DeskMapComponent","is_displayed","center","coordinates","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level2","_bld$location$split$m","parseFloat","_bld$location$split$m2","latitude","longitude","new_zoom","DeskMapComponent_mat_form_field_1_Template","DeskMapComponent_ng_template_2_Template","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","lvl_r1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","setZoom","resetMap","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","bld_r10","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r14","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r20","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r26","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r24","_r28","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r30","toggleFeature","ParkingSpaceFiltersComponent_section_40_div_3_Template","_r34","_form","lvl","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_section_40_Template","ParkingSpaceFiltersComponent_div_42_Template","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","setCustomZone","MapsPeopleService","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","order_r1","duplicateOrder","editOrder","removeOrder","optionList","item_r16","removeOrderItem","CateringListFieldComponent_div_1_div_19_span_3_Template","CateringListFieldComponent_div_1_div_19_button_9_Template","_r25","currency_code","CateringListFieldComponent_div_1_div_8_Template","CateringListFieldComponent_div_1_button_12_Template","CateringListFieldComponent_div_1_button_13_Template","CateringListFieldComponent_div_1_button_14_Template","show_order","CateringListFieldComponent_div_1_div_19_Template","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","option","opt","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","CateringOrdersService","CateringOrderListComponent_li_20_Template","CateringOrderListComponent_div_22_Template","CateringOrderListComponent_mat_progress_bar_24_Template","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","catering_vars_1","CateringOrderComponent_div_0_span_18_Template","CateringOrderComponent_div_0_span_21_Template","CateringOrderComponent_div_0_button_25_Template","CateringOrderComponent_div_0_span_28_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r13","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_ref2$","zone_ids","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","locations","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","mapspeople_service_1","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","slice","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","_arrMatches$","headers","row","_row$i","loadTextFileFromInputEvent","reject","jsonToCsv","seperator","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","degreesToRadians","degrees","PI","hexToRgb","hex","parseInt","interpolateColors","rgb1","rgb2","fraction","round","rgbToHex","componentToHex","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","calculateDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","shiftColorTowards","hex1","hex2","resultRgb","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","KeepAliveService","_system_id","_delay","_bindTo","module","GoogleMaps","Mapbox","_map_service","_map_token","_ready","_injected","_custom_zone","available$","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","mergeRoomConfig","settings_1","user_state_1","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","ENDPOINT","queryShortURLs","showShortURL","QR_STORE","_getShortUrlQRCode","response","cookie","apiKey","fetch","URL","createObjectURL","createShortURL","updateShortURL","getShortUrlQRCode","saveShortURL","patchShortURL","deleteShortURL","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","uploads_1","upload_permissions_modal_component_1","UploadsService","_upload_list","upload_list","in_progress_list","progress","UploadPermissionsModalComponent","uploadFile","is_public","permissions","pub","resolved","update_fn","_updateUploadHistory","done_list","upload","cloud_uploads_1","blobUtil","Observable","observer","arrayBufferToBlob","uploadFiles","file_name","public","upload_details","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","distance","suffix","semverString","version","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","authority","nativeElement","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","ɵɵInputFlags","None","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r8","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","ChatComponent_div_0_div_4_Template","show","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","map_renderer_component_1","maps_indoors_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","InteractiveMapComponent","MatRipple","MatTooltip","IconComponent","MapRendererComponent","MapsIndoorsComponent","AsyncPipe","MatDialogClose","MatProgressSpinner","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","DatePipe","SanitizePipe","UserControlsComponent","TranslatePipe","onConfirm","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r10","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_class2","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","direction","json_display_component_1","obj_r10","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r8","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","search_result_items","properties","roomId","floorName","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","IndoorMapsComponent","_api_service","default_zoom","live_data_status","selected_destination","actions_hashmap","user_latitude","user_longitude","route_error_message","_setLocationToBuilding","floor_mapping","get_location","custom_coordinates","_getUserLocation","_initMapView","_ngOnChanges","_mapsindoors","searchParams","renderSpaceStatus","mapActions","locate","searchElement","services","LocationsService","getLocations","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","lvl_map","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_mapsindoors2","getZoom","_getUserLocation2","geolocation","watchPosition","_updateGeolocation","_handleGeolocationError","getCurrentPosition","_userWithinRadius","coords","setCenter","enableHighAccuracy","d_lat","d_long","radius","lat_str","long_str","_this$_org$building2","_this$_org$building3","_this$_org$building4","_this$_org$building5","_this$_org$building$l","_this$_org$building$l2","long","updated_location","_updated_location$coo","_getRoute","_this$maps_service6","_this$directions_rend","destination","routeParameters","highlight","anchor","setFloor","_e$message","TypeError","origin_error","setRoute","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this$actions","accumulator","currentValue","_this$maps_service7","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_div_1_Template","IndoorMapsComponent_div_2_Template","onSearch","IndoorMapsComponent_ng_container_11_Template","zoomChange","mapInfo","labels","onLevelChange","InjectionToken","_mapspeople","_explore","centerChange","use_mapsindoors$","InteractiveMapComponent_ng_container_0_Template","InteractiveMapComponent_ng_template_2_Template","InteractiveMapComponent_div_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","MapCanvasComponent","ratio","svg_ratio","ratio$","zoom$","svg_ratio$","_handleMapChange","polygons$","_handleStateChange","_handleMapChange2","old_ratio","canvas_element","polygon_list","poly","_drawPolygon","polygon","points","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","draw_points","arc","draw_labels","acc","textAlign","textBaseline","font","fillText","_this$item$level","track_id","MapLocateModalComponent_div_6_Template","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","last_seen","updateRadius","ɵɵresolveWindow","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MapRendererComponent_ng_container_2_mat_spinner_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_4_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_Template","MapRendererComponent_div_3_ng_container_1_div_1_Template","MapRendererComponent_div_3_ng_container_1_Template","_on_changes","_extra_data","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$src","_this$_outlet_el","_this$_outlet_el3","simp_url","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","MapRendererComponent_ng_container_2_Template","MapRendererComponent_div_3_Template","MapRendererComponent_ng_template_4_Template","toggleDirections","MapsIndoorsComponent_button_2_mat_spinner_5_Template","viewing_directions","loading_directions","DEFAULT_ZOOM","zoneChange","show_directions","ignore_zoom","_floor_list","_added_floor_selector","_initialiseServices","_this$_services","_this$_services2","is_initialised","_centerOnZone","_focusOnLocation","_updateMapStyling","_services","_addFloorSelector","_split","_split2","_container","maps_indoors","_handleBuildingChange","_handleLevelChange","_handleZoomChange","_handleUserClick","dispatchEvent","Event","_toggleDirections","_item$properties","d_lng","travelMode","externalId","floors","_setFloorFromZone","defaultFloor","_handleLevelChange2","new_level","_event$properties","_event$properties2","_this$metadata","ignore_actions","_search2","_this$metadata2","_focusOnLocation2","_item$properties2","_item$properties3","_$properties","_bld$location$split","_bld$location$split2","MapsIndoorsComponent_button_2_Template","padLength","MediaDurationPipe","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","RegionSelectComponent","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","building_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_button_23_Template","UserControlsComponent_button_28_Template","disable_building_select","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r21","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r19","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","item_r30","request_r28","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","show_attendees","no_edit_message","act_r39","_r41","ctx_r40","EMPTY_ACTIONS","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_ng_container_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","generateEventForm","_zone_ids","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","_assertThisInitialize","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","_assertThisInitialized","_this$_org$building6","differenceInDays","previous","_this$_event$getValue","_newForm","_event$linked_booking","master","showEvent","_pattern","resetForm","_event$linked_booking2","_event$extension_data","catering_charge_code","_this$_event$getValue2","form_data","_event$linked_booking3","EventLinkModalComponent","_this6$event","_spaces$","_this6$event2","_this6$event3","_this6$event4","_value$organiser","_value$organiser2","_event$extension_data2","_value","changed_times","changed_spaces","is_owner","breakdown","overflow","processed_assets","creating_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_spaces$6","_this6$_org$building","recurring","checkSelectedSpacesAreAvailable","is_external","calendar","catering_notes","setup_time","breakdown_time","toJSON","old_system","visit_expected","host_override","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","_valid_asset_cache","_valid_cache_expiry","event_start","event_end","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","linked_assets","_$extension_data","_this$recurrence","_this$system","parseRecurrence","all_day_date","calendar_fn_1","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","ignore_period","short_list","_s$resource","inUseAt","attendee_list_component_1","event_card_component_1","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data3","_event$extension_data4","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get3","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","_this$_element$native","parentElement","left","ExploreDeskInfoComponent_ng_template_1_Template","_r1","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","can_book","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","_lvl$tags","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r6","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_s","_desks","_zones","_parking","_maps","map_styles","positions","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","_events$find","assigned","week_availablility","day_events","_updateParkingSpaces","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","results","ExploreSearchComponent","search_str","right_size","search_results","setFilter","checkClick","_this$_el","_this$_input_el","checkButtonPosition","_this$_input_el2","_this$_input_el3","window_width","innerWidth","button_rect","_button_el","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_maps_people_search","_$properties2","_$properties3","_$properties4","_$properties5","_$properties6","_$properties7","_points_of_interest","points_of_interest","poi","roled_contacts","mapspeople_items","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","ExploreSensorInfoComponent","ExploreSensorInfoComponent_ng_template_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_panning","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateStatus2","_arr","_i2","_arr2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","_options$disable2","disable_features","_options$disable3","_options$disable_acti","disable_actions","_options$disable4","_options$disable_labe","disable_labels","_options$disable6","style_mappings","_options$disable5","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","explore_sensor_info_component_1","map_canvas_component_1","getCenterPoint","_area_list","_count_key","_location","_label_location","_capacity","_draw","_points","_polygons$","bind_areas","bind_zone","parseData","zone_metadata","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","area_id","filled","temperature","people_count","people_count_sum","queue_size","polygons","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r10","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r16","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r22","time_r23","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","short","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","has_error","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_list_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","place_user_pipe_1","UserListFieldComponent","MatFormField","MatSuffix","MatOption","MatAutocomplete","MatAutocompleteTrigger","MatAutocompleteOrigin","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","PlaceUserPipe","UserSearchFieldComponent","MatPrefix","MatInput","SpaceListFieldComponent","i13","MatRadioGroup","MatRadioButton","i14","ImageListFieldComponent","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","url_r7","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","_clipboard","_uploads","upload_ids","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","resume","_uploadImages","uploadFileWithPermissions","uploadImages","_updateUploadHistory2","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","item_r2","addChipItem","removeChipItem","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","_r0","USER_LIST","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_6","SpaceListFieldComponent_div_15_Template","type_r10","SupportTicketModalComponent_main_6_div_26_mat_option_5_Template","support_request_types","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_div_26_Template","SupportTicketModalComponent_main_6_mat_error_32_Template","SupportTicketModalComponent_main_6_div_33_Template","desc_error","allow_images","issue_type","_submit","_this$support_request","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","extra_info_fn","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","location_name_time","location_icon","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r16","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","ACCEPTED_FILE_TYPES","DENIED_FILE_TYPES","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","yaml","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","_updateSettingOverrides","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","querySettings","encryption_level","EncryptionLevel","settings_string","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","bld_r13","SpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r17","SpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","SpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","SpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r23","SpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r29","SpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_3_mat_option_1_Template","bld_r27","SpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_3_Template","SpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","SpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","_r33","start_date","_r39","SpaceFiltersComponent_div_25_div_6_Template","SpaceFiltersComponent_div_25_div_7_Template","_r45","feat_r41","ctx_r43","ctx_r42","feature_display","SpaceFiltersComponent_section_36_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_36_ng_container_3_Template","_r48","ctx_r47","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_ng_container_13_Template","SpaceFiltersComponent_ng_container_14_Template","SpaceFiltersComponent_div_23_Template","SpaceFiltersComponent_div_24_Template","SpaceFiltersComponent_div_25_Template","SpaceFiltersComponent_section_36_Template","SpaceFiltersComponent_div_38_Template","tmp_14_0","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_Template","SpaceSelectMapComponent_ng_template_2_mat_optgroup_2_mat_option_1_Template","SpaceSelectMapComponent_ng_template_2_mat_optgroup_2_Template","SpaceSelectMapComponent","free_spaces","_split$map","_split$map2","SpaceSelectMapComponent_mat_form_field_1_Template","SpaceSelectMapComponent_ng_template_2_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","_this$_org2","is_email","_this$_org","_this$_org3","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","work_preferences","work_overrides","location_time","datetime","_this$work_overrides$","_this$work_preference","date_string","in_hours","in_hours_time","pref","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","type_r9","idx_r7","start_times","end_times","WFHSettingsModalComponent_div_0_div_31_mat_option_8_Template","WFHSettingsModalComponent_div_0_span_24_Template","WFHSettingsModalComponent_div_0_div_31_Template","option_name","available_weekdays","type_r19","weekdays","_this$options$find","_this$settings","_initWeekdays","_saveChanges","dow","updateUser","setDay","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/shorten.fn.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-canvas.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/map-renderer.component.ts","./libs/components/src/lib/maps-indoors.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <interactive-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </interactive-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <interactive-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </interactive-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) => {\n            const filtered_events = e.filter(\n                (ev) => !d.find((bkn) => `${ev.meeting_id}` === `${bkn.id}`)\n            );\n            return [...filtered_events, ...v, ...d, ...p, ...l].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) +\n                                    (auto_release.time_before || 0)\n                            )\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) +\n                        (auto_release.time_before || 0);\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0\n                            ),\n                            Date.now()\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0\n                        );\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} booking`,\n                                content: `You have indicated you are not in the office. \n                                Your booking \"<i>${\n                                    booking.title\n                                }</i>\" for ${format(\n                                    booking.date,\n                                    this._settings.time_format\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format\n                                )}.<br/><br/>\n                                Do you wish to keep this booking?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                            },\n                            this._dialog\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        })\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip(request)\"\n                                *ngIf=\"\n                                    end_time <= request.deliver_at ||\n                                    rejected_ids.includes(request.id) ||\n                                    request.conflict\n                                \"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    @Input() public rejected_ids: string[] = [];\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip(request: AssetRequest) {\n        return this.rejected_ids.includes(request.id) || request.conflict\n            ? 'Some of the items are not available for the selected date and time.'\n            : 'Delivery time is outside of the event time.\\nThis order will be ignored.';\n    }\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        console.log('Requests:', value);\n        this.asset_requests = (value || []).map(\n            (_) =>\n                new AssetRequest({\n                    ..._,\n                    event: this.options as any,\n                    state: _.state,\n                })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const order_list = this.asset_requests.filter((_) => _.id !== order.id);\n        const requested: Record<string, number> = {};\n        for (const order of order_list) {\n            for (const item of order.items) {\n                requested[item.id] =\n                    (requested[item.id] || 0) + item?.quantity || 0;\n            }\n        }\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n                requested,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    const list = [];\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_) => {\n                            let id = '';\n                            let count = 0;\n                            while (\n                                (!id || list.includes(id)) &&\n                                count < (item as any).assets.length\n                            ) {\n                                id = (item as any).assets[\n                                    randomInt((item as any).assets.length)\n                                ].id;\n                            }\n                            list.push(id);\n                            return id;\n                        });\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                conflict: false,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity\n                    ),\n                items: items.map((_) => ({ ..._ })),\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            for (const item of new_order.items) {\n                const total = orders.reduce(\n                    (t, c) =>\n                        (t +=\n                            c.items.find((_) => _.id === item.id)?.quantity ||\n                            0),\n                    0\n                );\n                if (total + item.quantity > (item as any).assets.length) {\n                    notifyError(\n                        `Not enough assets available to meet request [${item.name}].\n                        Another request for this asset has been made in this meeting.`,\n                        undefined,\n                        undefined,\n                        { duration: 5000 }\n                    );\n                    return;\n                }\n            }\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public readonly ref_id: string;\n    public readonly state: string;\n    public conflict = false;\n    public _changed = false;\n    public _booking: Booking | null;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        const booking = this.event?.linked_bookings?.find(\n            (_) => _.extension_data.request_id === this.id\n        );\n        this._booking = booking || data.booking || null;\n        this._changed = !!data._changed || !booking;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n        this.conflict = !!data.conflict;\n        this.ref_id = `${this.deliver_at_time}|${this.items\n            .map((_) => `${_.id}:${_.quantity}`)\n            .join('|')}`;\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>\n                            {{\n                                (item.available != null\n                                    ? item.available\n                                    : item.assets?.length) || 0\n                            }}\n                            Available\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"\n                            (item.available != null\n                                ? item.available\n                                : item.assets?.length) || 1\n                        \"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset - 1\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{\n                                            asset.available ||\n                                                asset.assets?.length ||\n                                                '0'\n                                        }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Input() public requested: Record<string, number> = {};\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    private _requested_items = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n        this._requested_items,\n    ]).pipe(\n        map(([counts, assets, requested]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n                if (requested[item.id] !== undefined) {\n                    (item as any).available = Math.max(\n                        (item.assets?.length || 0) - requested[item.id],\n                        0\n                    );\n                }\n            }\n            return assets.filter(\n                (_: any) =>\n                    (_.available != null && _.available > 0) ||\n                    (_.available == null && _.assets?.length > 0)\n            );\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n        if (changes.requested) {\n            this._requested_items.next(this.requested);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        [requested]=\"requested\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public requested = this._data.requested;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n            requested: Record<string, number>;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, unique } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets } as AssetGroup))\n                    )\n                )\n            )\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        })\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            return products.map((product) => ({\n                ...product,\n                assets: product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                !ignore.includes(booking.id) &&\n                                (booking.asset_id === asset.id ||\n                                    booking.asset_ids?.includes(asset.id))\n                        )\n                ),\n            }));\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport function differenceBetweenAssetRequests(\n    new_assets: AssetRequest[],\n    old_assets: AssetRequest[],\n    reset_state: boolean = false\n): string[] {\n    if ((!new_assets || new_assets?.length <= 0) && old_assets?.length)\n        return [];\n    if (!old_assets) return [];\n    const changed: string[] = [];\n    for (const request of new_assets) {\n        const match = old_assets.find((_) => _.id === request.id);\n        if (!match || match.ref_id !== request.ref_id) {\n            changed.push(request.id);\n        }\n    }\n    return changed;\n}\n\nexport async function validateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[] = [],\n    force_create = false\n): Promise<() => Promise<void>> {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration)\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings =\n        id && ical_uid\n            ? await queryBookings({\n                  period_start: getUnixTime(startOfDay(date)),\n                  period_end: getUnixTime(endOfDay(date)),\n                  type: 'asset-request',\n                  email: host,\n                  event_id: from_booking ? '' : id,\n                  booking_id: from_booking ? id : '',\n                  ical_uid,\n              }).toPromise()\n            : [];\n    const booking_list: [string, AssetRequest][] = bookings.map((_) => [\n        _.id,\n        new AssetRequest(_.extension_data.request),\n    ]);\n    new_assets?.forEach((_) => (_.conflict = false));\n    let changed = force_create\n        ? new_assets.map((_) => _.id)\n        : differenceBetweenAssetRequests(\n              new_assets,\n              booking_list.map(([_, r]) => r),\n              reset_state\n          );\n    if (reset_state) {\n        const has_state = bookings.filter((_) => _.approved || _.rejected);\n        changed = unique([\n            ...changed,\n            ...has_state.map((_) => _.extension_data.request_id),\n        ]);\n    }\n    const unchanged = booking_list.filter(\n        ([_, request]) => !changed.includes(request.id)\n    );\n    const changed_requests = booking_list.filter(([_, { id }]) =>\n        changed.includes(id)\n    );\n    const changed_assets = new_assets.filter(({ id }) => changed.includes(id));\n    const filtered = requests.filter(\n        (req) =>\n            !req.rejected &&\n            (!bookings.find((b) => b.id === req.id) ||\n                unchanged.find(([id]) => req.event_id === id))\n    );\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    for (const [_, request] of unchanged) {\n        used_ids = [\n            ...used_ids,\n            ...flatten(request.items.map((_) => _.item_ids)),\n        ];\n    }\n    const available_groups = await queryGroupAvailability(\n        {\n            period_start: getUnixTime(all_day ? startOfDay(date) : date),\n            period_end: getUnixTime(\n                all_day\n                    ? endOfDay(addMinutes(date, duration))\n                    : addMinutes(date, duration)\n            ),\n            type: 'asset-request',\n        },\n        bookings.map((_) => _.id)\n    ).toPromise();\n    console.log('Used IDs:', used_ids);\n    console.log('Changed Assets:', changed_assets);\n    console.log('Requests:', requests);\n    console.log('Bookings:', bookings);\n    console.log('Filtered:', filtered);\n    console.log('Unchanged:', unchanged);\n    console.log('Available Groups:', available_groups);\n    const processed_requests = changed_assets.map((request) => {\n        // Handle duplicate asset ids\n        let asset_ids = flatten(\n            (request.items as any).map(({ id, item_ids, quantity }) => {\n                const assets = available_groups.find(\n                    (_) => _.id === id\n                )?.assets;\n                if (!assets) return item_ids;\n                const list = [];\n                return new Array(quantity).fill(0).map((_, idx) => {\n                    const item =\n                        used_ids.includes(item_ids[idx]) ||\n                        list.includes(item_ids[idx]) ||\n                        !item_ids[idx]\n                            ? assets?.find(({ id }) => {\n                                  return (\n                                      !used_ids.includes(id) &&\n                                      !list.includes(id)\n                                  );\n                              })?.id\n                            : item_ids[idx];\n                    if (!item) {\n                        request.conflict = true;\n                        throw 'Unable to find available asset for request';\n                    }\n                    list.push(item);\n                    return item;\n                });\n            })\n        );\n        // Grab any existing bookings for the asset for the parent event/booking\n        const booking = bookings.find((_) =>\n            _.asset_ids.find((id) =>\n                request.items?.find((i) => i.item_ids.includes(id))\n            )\n        );\n        used_ids = [...used_ids, ...asset_ids];\n        return createBooking(\n            new Booking({\n                type: 'asset-request',\n                booking_type: 'asset-request',\n                date,\n                duration,\n                all_day,\n                description: location_name,\n                user_email: host,\n                asset_id: asset_ids[0],\n                asset_ids,\n                asset_name: request.items.map((_) => _.name).join(', '),\n                title: request.items.map((_) => _.name).join(', '),\n                approved:\n                    !reset_state && booking?.approved && !request._changed,\n                rejected:\n                    !reset_state && booking?.rejected && !request._changed,\n                extension_data: {\n                    parent_id: id,\n                    request_id: request.id,\n                    location_id,\n                    request: new AssetRequest({ ...request, event: null }),\n                },\n                zones: zones || [],\n            }),\n            { ical_uid, event_id: from_booking ? '' : id }\n        );\n    });\n    return async () => {\n        await Promise.all(\n            changed_requests.map(([id]) => removeBooking(id).toPromise())\n        );\n        await Promise.all(processed_requests.map((r) => r.toPromise()));\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                rules[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n                limit: 1000,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[\n                                    asset.zone?.id || this._org.building.id\n                                ] || []\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                ) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'group-event'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    private _b_valid_asset_cache = [];\n    private _b_valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._b_valid_cache_expiry > Date.now() &&\n            this._b_valid_asset_cache.length\n        ) {\n            return this._b_valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._b_valid_asset_cache = (this.extension_data.assets || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._b_valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._b_valid_asset_cache;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0)\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf()\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n        phone: new FormControl(booking.extension_data.phone),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    return id ? updateBooking(id, data) : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0]\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise())\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise();\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <label for=\"location\" i18n>Location</label>\n                <ng-container *ngIf=\"!use_region\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngIf=\"use_region\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option [value]=\"\">Any Level</mat-option>\n                            <mat-optgroup\n                                *ngFor=\"let bld of region_levels | async\"\n                                [label]=\"bld.name\"\n                            >\n                                <mat-option\n                                    [value]=\"level.id\"\n                                    *ngFor=\"let level of bld.levels\"\n                                >\n                                    {{ level.display_name || level.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full no-subscript\"\n                *ngIf=\"!use_region; else region_level_view\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <ng-template #region_level_view>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"level\"\n                        (ngModelChange)=\"setLevel($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Any Level\"\n                        i18n-placeholder\n                    >\n                        <mat-optgroup\n                            *ngFor=\"let bld of region_levels | async\"\n                            [label]=\"bld.name\"\n                        >\n                            <mat-option\n                                [value]=\"level\"\n                                *ngFor=\"let level of bld.levels\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-optgroup>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels;\n        })\n    );\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <interactive-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></interactive-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            *ngIf=\"!disabled\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            for (const item of items) {\n                (item as any).options = [\n                    ...item.options.map((_) => ({ ..._ })),\n                ];\n                for (const option of item.options) {\n                    const opt = item.option_list.find(\n                        (_) => _.id === option.id\n                    );\n                    option.active = !!opt;\n                }\n            }\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-36\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) =>\n                    (d.details instanceof Array ? d.details : []).map(\n                        (_) => new CateringItem(_)\n                    )\n                ),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div time class=\"w-36 text-sm\">\n                {{ order.event?.date | date: 'MMM d' }},\n                {{ order.event?.date | date: time_format }}\n                <br />\n                {{ order.event?.date_end | date: 'MMM d' }},\n                {{ order.event?.date_end | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space?.display_name ||\n                        order.event?.space?.name ||\n                        ''\n                }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"\n                        !(\n                            order.event?.space?.display_name ||\n                            order.event?.space?.name\n                        )\n                    \"\n                >\n                    No Location\n                </span>\n            </div>\n            <div class=\"w-56\">\n                {{ order.event?.organiser?.name || order.event?.host || '' }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"!(order.event?.organiser?.name || order.event?.host)\"\n                >\n                    Unknown Host\n                </span>\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '' }}\n                <span class=\"opacity-30\" *ngIf=\"!order.invoice_number\">\n                    No Invoice\n                </span>\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\nexport * from './lib/uploads.service';\nexport * from './lib/shorten.fn';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    if (!(ruleset_list instanceof Array)) return DEFAULT_RULES;\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { MapsPeopleService } from './mapspeople.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|')\n                    )\n                    .join(seperator)\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n\n// Calculate the distance between geographical cooridinates\nexport function calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n//////////////////////////////////////////\n//////   Colour Conversion Utils   ///////\n//////////////////////////////////////////\n\nexport function hexToRgb(hex: string): RGB {\n    let r = parseInt(hex.slice(1, 3), 16);\n    let g = parseInt(hex.slice(3, 5), 16);\n    let b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n}\n\nexport type RGB = [number, number, number];\n\nexport function interpolateColors(rgb1: RGB, rgb2: RGB, fraction: number): RGB {\n    let r = rgb1[0] + (rgb2[0] - rgb1[0]) * fraction;\n    let g = rgb1[1] + (rgb2[1] - rgb1[1]) * fraction;\n    let b = rgb1[2] + (rgb2[2] - rgb1[2]) * fraction;\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n    function componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function shiftColorTowards(\n    hex1: string,\n    hex2: string,\n    fraction: number\n) {\n    const rgb1 = hexToRgb(hex1);\n    const rgb2 = hexToRgb(hex2);\n    const resultRgb = interpolateColors(rgb1, rgb2, fraction);\n    return rgbToHex(resultRgb[0], resultRgb[1], resultRgb[2]);\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.31.0/mapsindoors-4.31.0.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import {\n    apiKey,\n    del,\n    get,\n    patch,\n    post,\n    put,\n    query,\n    token,\n} from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst ENDPOINT = '/api/engine/v2/short_url';\n\nexport interface ShortURL {\n    id: string;\n    name: string;\n    description: string;\n    uri: string;\n\n    user_id: string;\n    user_name: string;\n    user_email: string;\n\n    redirect_count: number;\n\n    enabled: boolean;\n    valid_from: number;\n    valid_to: number;\n\n    created_at: number;\n    updated_at: number;\n}\n\nexport function queryShortURLs(q: Record<string, any> = {}) {\n    return query<ShortURL>({\n        query_params: q,\n        fn: (item) => item as ShortURL,\n        endpoint: ENDPOINT,\n        path: '',\n    }).pipe(map((_) => _.data));\n}\n\nexport function showShortURL(id: string): Observable<ShortURL> {\n    return get(`${ENDPOINT}/${id}`).pipe(map((_) => _ as ShortURL));\n}\n\nconst QR_STORE = new Map<string, string>();\n\nexport async function getShortUrlQRCode(\n    id: string,\n    format: 'svg' | 'png' = 'svg'\n): Promise<string> {\n    const key = `${id}.${format}`;\n    if (QR_STORE.has(key)) return QR_STORE.get(key);\n    const tkn = token();\n    document.cookie = `${\n        tkn === 'x-api-key'\n            ? 'api-key=' + encodeURIComponent(apiKey())\n            : 'bearer_token=' + encodeURIComponent(tkn)\n    };max-age=60;path=/api/;samesite=strict;${\n        location.protocol === 'https:' ? 'secure;' : ''\n    }`;\n    const response = await fetch(`${ENDPOINT}/${id}/qr_code.${format}`);\n    const blob = await response.blob();\n    const url = URL.createObjectURL(blob);\n    QR_STORE.set(key, url);\n    return url;\n}\n\nexport function createShortURL(data: ShortURL): Observable<ShortURL> {\n    return post(ENDPOINT, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function updateShortURL(\n    id: string,\n    data: ShortURL\n): Observable<ShortURL> {\n    return put(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function saveShortURL(data: ShortURL): Observable<ShortURL> {\n    return data.id ? updateShortURL(data.id, data) : createShortURL(data);\n}\n\nexport function patchShortURL(\n    id: string,\n    data: Partial<ShortURL>\n): Observable<ShortURL> {\n    return patch(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function deleteShortURL(id: string): Observable<void> {\n    return del(`${ENDPOINT}/${id}`).pipe(map((_) => null));\n}\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"0c430bd\",\n    \"hash\": \"0c430bd\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"0c430bd\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1716445555262\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-renderer.component';\nexport * from './lib/maps-indoors.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\nimport { MapRendererComponent } from './map-renderer.component';\nimport { MapsIndoorsComponent } from './maps-indoors.component';\nimport { MapCanvasComponent } from './map-canvas.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapRendererComponent,\n    MapsIndoorsComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    MapCanvasComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                console.log('Binding:', this._org.binding('remote_logger'));\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            })\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            })\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n        console.log('Binding:', this._org.binding('remote_logger'));\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\nfunction calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        ></div>\n        <div\n            class=\"absolute inset-0 flex items-center justify-center\"\n            *ngIf=\"loading\"\n        >\n            <mat-spinner [diameter]=\"48\"></mat-spinner>\n        </div>\n        <div\n            class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center\"\n            *ngIf=\"geolocation_error_message\"\n        >\n            <img\n                src=\"assets/icons/not-found.svg\"\n                alt=\"graphic of magnifying glass\"\n                width=\"200px\"\n                class=\"items-center\"\n            />\n            <p class=\"opacity-60 text-sm text-center mt-10\">\n                {{ geolocation_error_message | translate }}\n            </p>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"w-full even:bg-base-200 hover:bg-base-300 rounded border border-base-200\"\n                        *ngFor=\"let item of search_result_items | slice: 0:10\"\n                    >\n                        <button\n                            class=\"flex items-center w-full p-2 space-x-2 text-left\"\n                            (click)=\"getRoute(item); search_result_items = []\"\n                        >\n                            <div class=\"flex flex-col flex-1\">\n                                <div>{{ item.properties.name }}</div>\n                                <div class=\"opacity-30 text-xs\">\n                                    {{ item.properties.roomId }}, Level\n                                    {{ item.properties.floorName }}\n                                </div>\n                            </div>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n    /** Mark location of a specific item */\n    @Input() public locate: string;\n    /** Default zoom level for the map */\n    @Input() public default_zoom: number = 19;\n\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[] = [];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction } = {};\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._setLocationToBuilding();\n    };\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public floor_mapping: { [id: string]: string } = {};\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: MapsPeopleService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        if (this.custom_coordinates) this.coordinates = this.custom_coordinates;\n        const get_location = () => {\n            this._getUserLocation();\n            document.removeEventListener('click', get_location);\n        };\n        document.addEventListener('click', get_location);\n        await this._initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        if (change.locate && this.locate && mapsindoors) {\n            const searchParams = { q: this.searchElement.nativeElement.value };\n            const locations =\n                await mapsindoors?.services.LocationsService.getLocations(\n                    searchParams\n                );\n            if (locations.length) this.getRoute(locations[0]);\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    public ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) found_action.callback(e);\n        });\n    }\n\n    private _initMapView() {\n        if (!this._api_service.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: this.default_zoom || 19,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            log('MapsIndoors', 'Using Google Maps API');\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            console.log('View Options:', view_options);\n            log('MapsIndoors', 'Using Mapbox API');\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn'\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n        this.mapFloorsToIndex();\n        this._setLocationToBuilding();\n    }\n\n    public initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._api_service.map_token\n                  );\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider\n        );\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    public async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        console.log('Pairs:', pairs, building);\n        this.floor_mapping =\n            pairs?.reduce((lvl_map, [key, value]) => {\n                lvl_map[key] = value;\n                return lvl_map;\n            }, {}) || {};\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this._org.buildings.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (!e || !this.floor_mapping) return;\n            const level_id: string = this.floor_mapping[e];\n            this._state.setLevel(level_id);\n        });\n    }\n\n    public onSearch() {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        mapsindoors?.services.LocationsService.getLocations(searchParams).then(\n            (locations: any[]) => {\n                console.log(\n                    'Locations:',\n                    locations,\n                    this.map_instance.getZoom()\n                );\n                this.search_result_items = locations;\n            }\n        );\n    }\n\n    private async _getUserLocation(): Promise<void> {\n        if (!('geolocation' in navigator)) {\n            log(\n                'MapsIndoors',\n                \"User's geolocation not available.\",\n                undefined,\n                'warn'\n            );\n            return this._setLocationToBuilding();\n        }\n        if (this.coordinates) {\n            console.log('Using custom coordinates:', this.coordinates);\n            this.user_latitude = this.coordinates.latitude;\n            this.user_longitude = this.coordinates.longitude;\n            return;\n        } else {\n            navigator.geolocation.watchPosition(\n                (_) => this._updateGeolocation(_),\n                (_) => this._handleGeolocationError(_)\n            );\n            const options = { timeout: 10000, enableHighAccuracy: true };\n            navigator.geolocation.getCurrentPosition(\n                (position: GeolocationPosition) => {\n                    if (\n                        !this._userWithinRadius([\n                            position.coords.latitude,\n                            position.coords.longitude,\n                        ])\n                    ) {\n                        // Only use geolocation if user is within 1km of building\n                        return this._setLocationToBuilding();\n                    }\n                    this._updateGeolocation(position);\n                    this.map_instance.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    });\n                },\n                () => this._setLocationToBuilding(),\n                options\n            );\n        }\n    }\n\n    private _userWithinRadius(\n        [d_lat, d_long]: [number, number],\n        radius: number = 1\n    ) {\n        const [lat_str, long_str] =\n            this._org.building?.location.split(',') || [];\n        if (lat_str && long_str) {\n            const lat = parseFloat(lat_str);\n            const long = parseFloat(long_str);\n            const distance = calculateDistance(lat, long, d_lat, d_long);\n            if (distance >= radius) return false;\n        }\n        return true;\n    }\n\n    private _setLocationToBuilding() {\n        log('MapsIndoors', 'Settings location to building:', [\n            this._org.building?.display_name || this._org.building?.name,\n            this._org.building?.location,\n        ]);\n        const [lat, long] = this._org.building?.location.split(',');\n        if (!this.map_instance) return;\n        this.map_instance.setCenter({\n            lat: parseFloat(lat),\n            lng: parseFloat(long),\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (!updated_location?.coords) return;\n        log(\n            'MapsIndoors',\n            'Settings location to user:',\n            updated_location.coords,\n            'warn'\n        );\n        const { latitude, longitude } = updated_location.coords;\n        if (\n            latitude !== this.user_latitude ||\n            longitude !== this.user_longitude\n        ) {\n            this.user_latitude = latitude;\n            this.user_longitude = longitude;\n            this.getRoute(this.selected_destination);\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError(`Error retrieving your geolocation. [${error.message}]`);\n    }\n\n    public async getRoute(location: any) {\n        this.maps_service?.highlight([]);\n        if (!this.directions_service || !location) return;\n        console.log('Directions Service:', this.directions_service);\n        log('MapsIndoors', 'Getting route to location:', [\n            location,\n            this.user_latitude,\n            this.user_longitude,\n        ]);\n        this.selected_destination = location;\n        const destination = {\n            lat: location.properties.anchor.coordinates[1],\n            lng: location.properties.anchor.coordinates[0],\n            floor: location.properties.floor,\n        };\n        const level_id: string = (this.floor_mapping || {})[\n            location.properties.floor\n        ];\n        if (level_id) this._state.setLevel(level_id);\n\n        if (\n            !this._userWithinRadius(\n                [this.user_latitude, this.user_longitude],\n                1000\n            )\n        ) {\n            this.map_instance.setZoom(19);\n            this.map_instance.setCenter(destination);\n            this.maps_service.setFloor(destination.floor);\n            this.maps_service.highlight([location.id]);\n            return;\n        }\n\n        if (!this.user_latitude || !this.user_longitude) {\n            return notifyError('Unable to find a route.');\n        }\n\n        const origin: any = {\n            lat: this.user_latitude,\n            lng: this.user_longitude,\n        };\n\n        const routeParameters = {\n            origin: origin,\n            destination: destination,\n        };\n\n        console.log('Route Parameters:', routeParameters);\n\n        const result = await this.directions_service\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn'\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        console.log('Route:', result);\n        this.directions_renderer?.setRoute(result);\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (!this.styles) return;\n        const promises: Promise<void>[] = [];\n        for (const key in this.styles) {\n            const colour = this.styles[key]['fill'] as string;\n            if (key) {\n                const updated_key = key.substring(1);\n                promises.push(this._setPolygonFill(updated_key, colour));\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    public async mapActions() {\n        return this.actions?.reduce((accumulator, currentValue) => {\n            accumulator[currentValue.id] = currentValue;\n            return accumulator;\n        }, {});\n    }\n\n    private _setPolygonFill(location_id: string, colour: string) {\n        return this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    InjectionToken,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, log } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { ExploreStateService } from 'libs/explore/src/lib/explore-state.service';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nexport interface MapOptions {\n    disable_zoom?: boolean;\n    disable_pan?: boolean;\n    controls?: boolean;\n}\n\nexport interface MapMetadata {\n    styles?: ViewerStyles;\n    features?: ViewerFeature[];\n    labels?: ViewerLabel[];\n    actions?: ViewAction[];\n}\n\n@Component({\n    selector: 'interactive-map',\n    template: `\n        <ng-container\n            *ngIf=\"!(use_mapsindoors$ | async); else mapsindoors_template\"\n        >\n            <map-renderer\n                [src]=\"src\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [reset]=\"reset\"\n                [styles]=\"styles || metadata?.styles\"\n                [features]=\"features || metadata?.features\"\n                [actions]=\"actions || metadata?.actions\"\n                [labels]=\"labels || metadata?.labels\"\n                (mapInfo)=\"mapInfo.next($event)\"\n            >\n                <ng-content></ng-content>\n            </map-renderer>\n        </ng-container>\n        <ng-template #mapsindoors_template>\n            <maps-indoors\n                [zone]=\"location\"\n                (zoneChange)=\"onLevelChange($event)\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [options]=\"options\"\n                [reset]=\"reset\"\n                [focus]=\"focus\"\n                [metadata]=\"metadata\"\n            >\n                <ng-content></ng-content>\n            </maps-indoors>\n        </ng-template>\n        <div\n            zoom\n            *ngIf=\"options?.controls\"\n            class=\"absolute bottom-16 right-1 border border-base-200 divide-y divide-base-200 shadow flex flex-col bg-base-100 text-base-content rounded overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom In\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * 1.1\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom Out\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * (10 / 11)\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Reset Zoom and Position\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"reset = reset + 1\"\n            >\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class InteractiveMapComponent extends AsyncHandler {\n    @Input() public src: string;\n    @Input() public zoom = 1;\n    @Input() public center: any = { x: 0.5, y: 0.5 };\n    @Input() public reset = 0;\n    @Input() public metadata: MapMetadata = {};\n    @Input() public styles: any;\n    @Input() public features: any[];\n    @Input() public labels: any[];\n    @Input() public actions: any[];\n    @Input() public options: MapOptions = {};\n    @Input() public focus: string;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public centerChange = new EventEmitter<any>();\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public readonly use_mapsindoors$ = this._mapspeople.available$;\n\n    public get location() {\n        return this._org.levels.find((_) => _.map_id === this.src);\n    }\n\n    constructor(\n        private _mapspeople: MapsPeopleService,\n        private _org: OrganisationService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes.actions ||\n            changes.labels ||\n            changes.styles ||\n            changes.features\n        ) {\n            this.metadata = {\n                actions: this.actions || [],\n                labels: this.labels || [],\n                styles: this.styles || {},\n                features: this.features || [],\n            };\n        }\n    }\n\n    public onLevelChange(zone: any) {\n        log(\n            'Map',\n            'Level changed to:',\n            zone?.display_name || zone?.name || zone\n        );\n        this._explore.setLevel(zone);\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler, shiftColorTowards } from '@placeos/common';\n\nexport interface Polygon {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** List of x, y coordinates from 0 to 1 */\n    points: [number, number][];\n}\n\nexport interface MapPolygonData {\n    draw_labels?: boolean;\n    draw_points?: boolean;\n    polygons$: Observable<Polygon[]>;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-canvas]',\n    template: `\n        <canvas\n            #canvas\n            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n            [style.width]=\"width * svg_ratio * zoom + '%'\"\n            [style.height]=\"width * svg_ratio * ratio * zoom + '%'\"\n        ></canvas>\n    `,\n    styles: [],\n})\nexport class MapCanvasComponent extends AsyncHandler implements OnInit {\n    public zoom = 1;\n    public ratio = 1;\n    public svg_ratio = 1;\n    public width = 10000;\n\n    @ViewChild('canvas', { static: true })\n    private canvas_element: ElementRef<HTMLCanvasElement>;\n\n    public get ratioed_height(): number {\n        return +(this.width * this.ratio).toFixed(2);\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: MapPolygonData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'state',\n            combineLatest([\n                this._data.ratio$,\n                this._data.zoom$,\n                this._data.svg_ratio$,\n            ]).subscribe(([ratio, zoom, sr]) =>\n                this._handleMapChange(ratio, zoom, sr)\n            )\n        );\n        this.subscription(\n            'polygons',\n            this._data.polygons$.subscribe((list) =>\n                this._handleStateChange(list)\n            )\n        );\n    }\n\n    private async _handleMapChange(\n        ratio: number,\n        zoom: number,\n        svg_ratio: number\n    ) {\n        const old_ratio = this.ratio;\n        this.zoom = zoom;\n        this.ratio = ratio;\n        this.svg_ratio = svg_ratio;\n        const width = this.width / 10;\n        const height = (this.width * this.ratio) / 10;\n\n        if (old_ratio === ratio) return;\n\n        const canvas = this.canvas_element.nativeElement;\n        canvas.width = width;\n        canvas.height = height;\n\n        const polygons = await this._data.polygons$.pipe(take(1)).toPromise();\n        this._handleStateChange(polygons);\n    }\n\n    private _handleStateChange(polygon_list: Polygon[]): void {\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        polygon_list.forEach((poly) => this._drawPolygon(poly));\n    }\n\n    private _drawPolygon(polygon: Polygon) {\n        const points = polygon.points;\n        if (!points?.length) return;\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        const width = canvas.width;\n        const height = canvas.height;\n        // Draw polygon\n        ctx.fillStyle = polygon.color + '80';\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.fill();\n        // Draw Outline\n        ctx.strokeStyle = shiftColorTowards(polygon.color, '#888888', 0.5);\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.stroke();\n        // Draw Points\n        if (this._data.draw_points !== false) {\n            ctx.fillStyle = '#fff';\n            ctx.strokeStyle = polygon.color;\n            ctx.lineWidth = 4;\n            points.forEach(([x, y]) => {\n                ctx.beginPath();\n                ctx.arc(x * width, y * height, 8, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n        }\n        // Draw Text\n        if (this._data.draw_labels !== false) {\n            const center = points.reduce(\n                (acc, [x, y]) => [acc[0] + x, acc[1] + y],\n                [0, 0]\n            );\n            center[0] /= points.length;\n            center[1] /= points.length;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#FFF';\n            ctx.font = '32px sans-serif';\n            ctx.fillText(\n                polygon.name,\n                center[0] * width + 1,\n                center[1] * height + 2\n            );\n            ctx.fillStyle = '#000';\n            ctx.fillText(polygon.name, center[0] * width, center[1] * height);\n        }\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [focus]=\"item?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { get } from 'http';\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `map-renderer`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class MapRendererComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout(\n                'create_view',\n                () => this.createView().catch((e) => console.warn(e)),\n                300\n            );\n        }\n        const simp_url = this.src?.toLowerCase() || '';\n        if (!simp_url.includes('svg') && !simp_url.includes('upload')) return;\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            const viewer = getViewer(this.viewer);\n            this.mapInfo.emit(viewer.mappings);\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapMetadata } from './interactive-map.component';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    calculateDistance,\n    log,\n    notifyError,\n    notifyWarn,\n    randomString,\n} from '@placeos/common';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\nimport { take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\nconst DEFAULT_ZOOM = 18.5;\n\ninterface MapsIndoorServices {\n    mapsindoors: any;\n    view: any;\n    map: any;\n    directions: any;\n    directions_renderer: any;\n}\n\n@Component({\n    selector: 'maps-indoors',\n    template: `\n        <div #map_container class=\"absolute inset-0 z-0\"></div>\n        <button\n            *ngIf=\"focus && !show_directions && options?.controls\"\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-base-100 text-base-content shadow z-10 border-base-200 space-x-2\"\n            (click)=\"toggleDirections()\"\n        >\n            <app-icon>place</app-icon>\n            <div class=\"pr-2\">\n                {{ viewing_directions ? 'Hide' : 'Show' }} Directions\n            </div>\n            <mat-spinner diameter=\"24\" *ngIf=\"loading_directions\"></mat-spinner>\n        </button>\n    `,\n    styles: [``],\n})\nexport class MapsIndoorsComponent extends AsyncHandler implements OnInit {\n    @Input() public zone: BuildingLevel;\n    @Input() public metadata: MapMetadata;\n    @Input() public options: any;\n    @Input() public focus: string;\n    @Input() public zoom = DEFAULT_ZOOM;\n    @Input() public reset: number;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public zoneChange = new EventEmitter<BuildingLevel>();\n\n    public id: string;\n    public show_directions = false;\n    public viewing_directions = false;\n    public loading_directions = false;\n    public ignore_zoom = false;\n\n    private _services: MapsIndoorServices;\n    private _floor_list: any[] = [];\n\n    @ViewChild('map_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _maps_people: MapsPeopleService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.id = randomString(8);\n        this._initialised.next(false);\n        this._initialiseServices();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (!this.is_initialised) {\n            return this.timeout('on_changes', () => this.ngOnChanges(changes));\n        }\n        if (changes.zone && this.zone) {\n            this._centerOnZone();\n        }\n        if (changes.focus && this.focus) {\n            this._focusOnLocation();\n        }\n        if (changes.metadata) {\n            this._updateMapStyling();\n        }\n        if (changes.zoom && this.zoom && !this.ignore_zoom) {\n            this._services?.map?.setZoom(this.zoom);\n        }\n        if (changes.reset) {\n            this._services?.map?.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        if (changes.options) {\n            this._addFloorSelector();\n        }\n    }\n\n    private _initialiseServices() {\n        if (!this._maps_people.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initialiseServices(), 1000);\n            return;\n        }\n        const [lat, long] = (\n            this._org.building?.location || `-33.8567844,151.2152967`\n        ).split(',');\n        const view_options: Record<string, any> = {\n            element: this._container.nativeElement,\n            center: { lat: parseFloat(lat), lng: parseFloat(long) },\n            zoom: DEFAULT_ZOOM,\n            maxZoom: 24,\n        };\n        let view_instance = null;\n        switch (this._maps_people.map_service) {\n            case MapService.GoogleMaps:\n                log('MapsIndoors', 'Using Google Maps API');\n                view_instance = new mapsindoors.mapView.GoogleMapsView(\n                    view_options\n                );\n                break;\n            case MapService.Mapbox:\n                view_options.accessToken = this._maps_people.map_token;\n                log('MapsIndoors', 'Using Mapbox API');\n                view_instance = new mapsindoors.mapView.MapboxView(\n                    view_options\n                );\n                break;\n        }\n        if (!view_instance) {\n            notifyWarn('Failed to initialise map view.');\n            return;\n        }\n        const provider =\n            this._maps_people.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._maps_people.map_token\n                  );\n        const maps_indoors = new mapsindoors.MapsIndoors({\n            mapView: view_instance,\n        });\n        this._services = {\n            mapsindoors: maps_indoors,\n            view: view_instance,\n            map: view_instance.getMap(),\n            directions: new mapsindoors.services.DirectionsService(provider),\n            directions_renderer: new mapsindoors.directions.DirectionsRenderer({\n                mapsIndoors: maps_indoors,\n            }),\n        };\n        this._initialised.next(true);\n        if (this.zone) this._centerOnZone();\n        this._addFloorSelector();\n        // Add Events listenders\n        this._services.mapsindoors.addListener('building_changed', (e) =>\n            this._handleBuildingChange(e)\n        );\n        this._services.mapsindoors.addListener('floor_changed', (e) =>\n            this._handleLevelChange(e)\n        );\n        this._services.mapsindoors.addListener('zoom_changed', (e) =>\n            this._handleZoomChange(e)\n        );\n        this._services.mapsindoors.addListener('click', (e) =>\n            this._handleUserClick(e)\n        );\n        this.timeout(\n            'resize',\n            () => window.dispatchEvent(new Event('resize')),\n            100\n        );\n        this.timeout('focus', () => this._focusOnLocation());\n        this.timeout('init_zoom', () => this._handleZoomChange(DEFAULT_ZOOM));\n    }\n\n    public async toggleDirections() {\n        if (this.viewing_directions) {\n            this._services.directions_renderer.setRoute(null);\n            this._focusOnLocation();\n            this.viewing_directions = false;\n            return;\n        }\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError('Failed to find location.');\n            return;\n        }\n        this.loading_directions = true;\n        const item = items[0];\n        const [d_lng, d_lat] = item.properties?.anchor?.coordinates || [0, 0];\n        const options = { timeout: 10000, enableHighAccuracy: true };\n        navigator.geolocation.getCurrentPosition(\n            async (position: GeolocationPosition) => {\n                const distance = calculateDistance(\n                    d_lat,\n                    d_lng,\n                    position.coords.latitude,\n                    position.coords.longitude\n                );\n                const routeParameters = {\n                    origin: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    destination: { lat: d_lat, lng: d_lng },\n                    travelMode: distance < 2 ? 'WALKING' : 'DRIVING',\n                };\n                console.log('Route Parameters:', routeParameters, distance);\n                const result = await this._services.directions\n                    .getRoute(routeParameters)\n                    .catch((e) => {\n                        log(\n                            'MapsIndoors',\n                            'Error fetching route: ',\n                            e.message || e,\n                            'warn'\n                        );\n                        const origin_error =\n                            e instanceof TypeError &&\n                            e.message?.includes('origin');\n                        this.loading_directions = false;\n                        if (!origin_error) return;\n                        notifyError(\n                            'Error: Origin location is outside of map area.'\n                        );\n                    });\n                if (!result) return;\n                console.log('Route:', result);\n                this._services.directions_renderer.setRoute(result);\n                this.viewing_directions = true;\n                this.loading_directions = false;\n            },\n            () => notifyError('Failed to get your current location.'),\n            options\n        );\n    }\n\n    private _handleZoomChange(level: number) {\n        this.timeout(\n            'zoom_change',\n            () => {\n                this.ignore_zoom = true;\n                this.zoom = level;\n                this.zoomChange.emit(level);\n                this.timeout(\n                    'reset_ignore_zoom',\n                    () => (this.ignore_zoom = false),\n                    50\n                );\n            },\n            100\n        );\n    }\n\n    private _handleBuildingChange(building: any) {\n        const id = building.externalId || building.id;\n        log('MapsIndoors', `Building switched to \"${id}\"`);\n        const floors = building.floors || {};\n        this._floor_list = Object.keys(floors).map((key) => ({\n            index: key,\n            ...floors[key],\n        }));\n        if (!this._services) return;\n        const bld = this._org.buildings.find(\n            (_) => _.id === id || _.map_id === id\n        );\n        this.timeout('set_floor', () => {\n            const has_set_floor = this._setFloorFromZone();\n            if (!has_set_floor && building.defaultFloor) {\n                this._handleLevelChange(building.defaultFloor);\n            }\n        });\n        if (!bld) return;\n        this._org.building = bld;\n    }\n\n    private async _handleLevelChange(index: any) {\n        log('MapsIndoors', `Level switched to \"${index}\"`);\n        const floor = this._floor_list.find((_) => _.index === index);\n        const id = floor?.externalId || floor?.id;\n        if (!this._services) return;\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        if (!levels) return;\n        const new_level = levels.find((_) => _.map_id === id || _.id === id);\n        if (!new_level) return;\n        this.zone = new_level;\n        this.zoneChange.emit(new_level);\n    }\n\n    private _handleUserClick(event: any) {\n        log('MapsIndoors', `Click occurred`, event);\n        const id =\n            event.properties?.externalId ||\n            event.properties?.roomId ||\n            event.id;\n        const actions = this.metadata?.actions || [];\n        const ignore_actions = ['mousedown', 'touchstart', 'enter', 'leave'];\n        for (const action of actions) {\n            if (\n                (action.id === id || action.id === '*') &&\n                !ignore_actions.includes(action.action as any)\n            ) {\n                action.callback(event);\n                break;\n            }\n        }\n    }\n\n    private async _search(query: string): Promise<any[]> {\n        if (!this._services) return;\n        return mapsindoors?.services.LocationsService.getLocations({\n            q: query,\n        });\n    }\n\n    private _updateMapStyling() {\n        if (!this._services) return;\n        const styles = this.metadata?.styles || {};\n        for (const id in styles) {\n            if (!styles[id].fill) continue;\n            this._services.mapsindoors.setDisplayRule(id, {\n                polygonVisible: true,\n                polygonFillOpacity: 0.6,\n                polygonZoomFrom: 16,\n                polygonZoomTo: 22,\n                visible: true,\n                polygonFillColor: styles[id].fill,\n            });\n        }\n    }\n\n    private async _focusOnLocation() {\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError('Failed to find location.');\n            return;\n        }\n        const item =\n            items.find((_) => _.properties?.externalId === this.focus) ||\n            items[0];\n        const [lng, lat] = item.properties?.anchor?.coordinates || [0, 0];\n        this._services.map.setZoom(DEFAULT_ZOOM);\n        this._services.map.setCenter({ lat, lng });\n        this._services.mapsindoors.setFloor(item.properties?.floor);\n        this._services.mapsindoors.highlight([item.id]);\n    }\n\n    private _centerOnZone() {\n        if (!this._services || !this.zone) return;\n        this.timeout('set_center', () => {\n            const bld = this._org.buildings.find(\n                (bld) => bld.id === this.zone.parent_id\n            );\n            if (!bld) return;\n            const [lat, long] = bld?.location.split(',');\n            this._services.map.setZoom(DEFAULT_ZOOM);\n            this._services.map.setCenter({\n                lat: parseFloat(lat),\n                lng: parseFloat(long),\n            });\n            this._setFloorFromZone();\n        });\n    }\n\n    private _setFloorFromZone() {\n        if (!this.zone.map_id || !this._services) return false;\n        const map_id = this.zone.map_id;\n        const floor = this._floor_list.find(\n            (_) =>\n                _.index === map_id || _.externalId === map_id || _.id === map_id\n        );\n        if (!floor) return false;\n        this._services.mapsindoors.setFloor(floor.index);\n        return true;\n    }\n\n    private _added_floor_selector = false;\n\n    private _addFloorSelector() {\n        if (!this.options?.controls || this._added_floor_selector) return;\n        const element = document.createElement('div');\n        new mapsindoors.FloorSelector(element, this._services.mapsindoors);\n        if (this._maps_people.map_service === MapService.GoogleMaps) {\n            this._services.map.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(element);\n        } else {\n            this._services.map.addControl({\n                onAdd: () => element,\n                onRemove: () => {},\n            });\n        }\n        this._added_floor_selector = true;\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(length: number): string {\n        let str = `${padLength(Math.floor(length / 60) % 60)}:${padLength(\n            length % 60\n        )}`;\n        const hours = Math.floor(length / 60 / 60);\n        if (hours > 0) {\n            str = `${padLength(hours)}:${str}`;\n        }\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select && !use_region\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get use_region(): boolean {\n        return this._settings.get('app.use_region');\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div class=\"flex items-center border-b border-base-200 p-2\">\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        console.log('Valid Assets:', this.event.valid_assets);\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = this._org.building_list.pipe(\n        switchMap((list) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, 'booking_rules').toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                rules[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            const use_region = this._settings.get('app.use_region');\n            if (!zone_ids?.length) {\n                zone_ids = [\n                    (use_region\n                        ? this._org.building?.parent_id\n                        : this._org.building?.id) || this._org.building?.id,\n                ];\n            }\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day, organiser } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules[this._org.building?.id] || []\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        (bookings[idx] || []).filter(\n                            (_) => _.ical_uid !== ical_uid\n                        )\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules[this._org.building?.id] || []\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration]\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules[this._org.building?.id] || []\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1)\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this.timeout('set_view', () => this._view.next(value), 50);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id]\n                ) || []\n            ),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id]\n                ) || []\n            ),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest({ ..._, event })\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        if (form_data.id && form_data.id !== this._event.getValue()?.id) {\n            showEvent(form_data.id).subscribe((event) => {\n                this._event.next(event);\n                this._assets.setOptions({\n                    ignore: flatten(\n                        event.linked_bookings?.map(\n                            (_) => _.asset_ids || [_.asset_id]\n                        ) || []\n                    ),\n                });\n            });\n        }\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let value = this._form.getRawValue();\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = value;\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n                value = this._form.getRawValue();\n            }\n            let changed_times = false;\n            let changed_spaces = spaces.some(\n                (s) => !event.resources?.find((_) => _.id === s.id)\n            );\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource')\n                );\n                spaces.push(space);\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (!spaces.length && attendees.find((_) => _.is_external)) {\n                this._loading.next('');\n                const message =\n                    'External attendees require a space to be booked';\n                reject(message);\n                throw message;\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const processed_assets = (assets || []).map((_) =>\n                new AssetRequest(_).toJSON()\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            let creating_assets = false;\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    console.warn(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time'\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                } else if (creating_assets) {\n                    notifyError(\n                        `Unable to update all asset requests for event.\\n${e}`\n                    );\n                    return;\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n\n            if (assets?.length || event.extension_data.assets?.length) {\n                creating_assets = true;\n                const requests = await validateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.level?.parent_id\n                            ? [spaces[0]?.level?.parent_id]\n                            : [this._org.building?.id],\n                        reset_state: changed_times,\n                    },\n                    assets,\n                    changed_spaces || changed_times\n                ).catch(on_error);\n                if (!requests) throw 'Unable to validate asset requests';\n                await requests();\n                creating_assets = false;\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration]\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any)\n        );\n        const linked_assets = this.linked_bookings\n            .filter((_) => _.booking_type === 'asset-request')\n            .map((_) => _.extension_data?.request)\n            .filter((_) => !!_);\n        const asset_requests =\n            (linked_assets.length\n                ? linked_assets\n                : this.extension_data.assets) || [];\n        this.extension_data.assets = asset_requests.map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end\n        );\n    }\n\n    private _valid_asset_cache = [];\n    private _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        delete obj.linked_bookings;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    const id = data.update_master\n        ? data.recurring_event_id || data.id\n        : data.id;\n    delete (data as any)?.status;\n    return id ? updateEvent(id, { ...data, id }, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0]\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(\n                    ignore_period[0] || start,\n                    ignore_period[1] || duration\n                )\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false }\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        tap(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._explore.level,\n        this._explore.options,\n        this._org.active_building,\n    ]).pipe(\n        map(([lvl, { is_public }]) => {\n            if (!lvl || is_public) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem] no-subscript\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem] no-subscript\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels.pipe(\n        map((_) => _.filter((lvl) => !lvl.tags?.includes('parking')))\n    );\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <interactive-map\n            [src]=\"url | async\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n            [focus]=\"locate\"\n            [options]=\"{ controls: true }\"\n        ></interactive-map>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public locate = '';\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.locate = id;\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now())\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now())\n                      ),\n                      type: 'parking',\n                      zones: bld?.id,\n                  })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => {\n                const assigned =\n                    events.find((e) => e.asset_id === _.id)?.user_name ||\n                    _.assigned_to;\n                this._users[_.id] = assigned;\n                return !assigned;\n            })\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const features = [];\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                track_id: `parking:hover:${space.map_id}`,\n                location: `${space.map_id}`,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                z_index: 20,\n                data: { ...space, user: this._users[space.id], status },\n            });\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 1.1,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([])\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    } as SearchResult)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'maps_features',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n        this._maps_people_search,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    } as any)\n                            )\n                        )\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ];\n                results.sort((a, b) => a.name.localeCompare(b.name));\n                return results;\n            }\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n    private _panning = true;\n    private _last_action = '';\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = combineLatest([\n        this._state.spaces,\n        this._state.options,\n    ]).pipe(\n        filter(([_, { is_public }]) => !is_public),\n        map(([list]) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning && this._last_action === 'down') return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        if (space.bookable) this._statuses[space.id] = status || 'free';\n        else delete this._statuses[space.id];\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            if (!this._statuses[space.id]) continue;\n            const status = this._statuses[space.id];\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id] || 'not-bookable',\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300\n                        );\n                        this._last_action = 'down';\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this.bookSpace(space);\n                        this._last_action = 'up';\n                    },\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    is_public: boolean;\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        is_public: false,\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, initialised]) => initialised),\n        switchMap(([level]) =>\n            querySystems({\n                zone_id: level?.id || this._org.organisation.id,\n                limit: 50,\n            }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key) ||\n                    (key === 'zones-canvas' &&\n                        options.disable?.includes('zones'))\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: Partial<MapOptions>) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            is_public: false,\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            console.log('Place User:', user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\nexport interface SupportRequestType {\n    name: string;\n    email: string;\n}\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"support_request_types?.length\"\n                >\n                    <label i18n>Issue Type</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Issue Type\"\n                            formControlName=\"issue_type\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of support_request_types\"\n                                [value]=\"type?.name || type\"\n                            >\n                                {{ type.name || type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n>\n                        Issue Description<span>*</span>\n                    </label>\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        issue_type: new FormControl(''),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get support_request_types(): SupportRequestType[] {\n        return this._settings.get('app.support_issue_types') || [];\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images, issue_type } =\n                this.form.value;\n            const support_email =\n                this.support_request_types.find(\n                    (type) => type.name === issue_type\n                )?.email || this.support_email;\n            await mod.execute('send_mail', [\n                support_email,\n                `Support Ticket from Workplace Application${\n                    issue_type ? ' - ' + issue_type : ''\n                }`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst ACCEPTED_FILE_TYPES = ['text/csv', 'text/plain'];\nconst DENIED_FILE_TYPES = [\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input() public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file: File = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                if (\n                    !ACCEPTED_FILE_TYPES.includes(file.type) ||\n                    DENIED_FILE_TYPES.includes(file.type)\n                ) {\n                    notifyError('Only CSV files are supported');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => [],\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => ({}),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** Identifier of building in relation to mapping */\n    public readonly map_id: string;\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.map_id = raw_data.map_id || '';\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, filter, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(filter(([region, bld]) => !!bld))\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None\n                                    ) || { settings_string: '' }\n                                );\n                            } catch {\n                                return {};\n                            }\n                        })\n                    )\n                    .toPromise(),\n            ]);\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:flex-col sm:max-w-[20rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_ids\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_ids: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                                [multiple]=\"true\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_ids\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_ids: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                                [multiple]=\"true\"\n                            >\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    @Input() public hide_levels: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setRegion(region: Region) {\n        this._org.region = region;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full no-subscript\"\n                *ngIf=\"!use_region; else region_level_view\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <ng-template #region_level_view>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"level\"\n                        (ngModelChange)=\"setLevel($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Any Level\"\n                        i18n-placeholder\n                    >\n                        <mat-optgroup\n                            *ngFor=\"let bld of region_levels | async\"\n                            [label]=\"bld.name\"\n                        >\n                            <mat-option\n                                [value]=\"level\"\n                                *ngFor=\"let level of bld.levels\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-optgroup>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels;\n        })\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    public readonly styles = combineLatest([\n        this._event_form.spaces,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([spaces, free_spaces]) =>\n            spaces.reduce((styles, space) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_spaces.find((_) => _.id === space.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${space.map_id || space.id}`] = {\n                    fill:\n                        colours[`space-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        console.log('Set Level', level);\n        this.setOptions({ zone_ids: [level?.id] });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({\n                in: space_id,\n                zone_id: this._org?.organisation.id,\n            }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public location_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        return (\n            this.work_overrides[date_string]?.location ||\n            this.work_preferences.find((_) => _.day_of_week === day)\n                ?.location ||\n            'wfo'\n        );\n    }\n\n    public get location_name() {\n        return this.location_name_time(Date.now());\n    }\n\n    public location_name_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        const pref =\n            this.work_overrides[date_string] ||\n            this.work_preferences.find((_) => _.day_of_week === day);\n        if (!pref) return false;\n        const start = pref.start_time;\n        const end = pref.end_time;\n        const now = date.getHours() + date.getMinutes() / 60;\n        return start <= now && now < end;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser } from '@placeos/common';\nimport { addDays, format, set, setDay, startOfWeek } from 'date-fns';\nimport { WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[40rem] max-w-full\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-[20rem] max-w-[calc(100%-2rem)] mx-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"flex-1 w-1/2\">{{ option_name }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2 mx-auto\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>{{\n                            option === 'wfh' ? 'home' : 'domain'\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a {{ option === 'aol' ? 'leave' : 'working' }}\n                        <span *ngIf=\"option !== 'aol'\"\n                            >from\n                            {{ option === 'wfh' ? 'home' : 'office' }}</span\n                        >\n                        day<br />\n                        {{ option === 'aol' ? 'Unavailable' : 'Available' }} for\n                        {{ option === 'wfh' ? 'online' : '' }} meetings\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Office Day Defaults\n                </h3>\n                <div\n                    class=\"flex items-center space-x-2 w-full overflow-hidden even:bg-base-200 rounded p-2\"\n                    *ngFor=\"let idx of available_weekdays\"\n                >\n                    <label class=\"w-24 min-w-0 m-0\">{{\n                        days[idx] | date: 'EEEE'\n                    }}</label>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"start_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                    ></a-time-field>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"end_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                        [from]=\"start_times[idx]\"\n                    ></a-time-field>\n                    <mat-form-field\n                        class=\"flex-2 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            [(ngModel)]=\"settings[idx].location\"\n                            (ngModelChange)=\"changed = true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of options\"\n                                [value]=\"type.id\"\n                            >\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Working from office' },\n        { id: 'wfh', name: 'Working from home' },\n        { id: 'aol', name: 'Away on Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n    public start_times: number[] = [];\n    public end_times: number[] = [];\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    constructor(private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.option = user.location || 'wfo';\n        if (this.settings?.length < 7) {\n            this.settings = new Array(7).fill({}).map((_, idx) => ({\n                day_of_week: idx as any,\n                start_time: 9,\n                end_time: 17,\n                location: 'wfo',\n            }));\n        }\n        this.start_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.start_time);\n            const minutes = Math.round((_.start_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this.end_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.end_time);\n            const minutes = Math.round((_.end_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this._initWeekdays();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const dow = new Date().getDay();\n        const today = format(Date.now(), 'yyyy-MM-dd');\n        var overrides = {};\n        overrides[today] = {\n            day_of_week: dow,\n            start_time: 9,\n            end_time: 17,\n            location: this.option,\n        };\n        for (const day of this.settings) {\n            const start = new Date(this.start_times[day.day_of_week]);\n            const end = new Date(this.end_times[day.day_of_week]);\n            day.start_time = start.getHours() + start.getMinutes() / 60;\n            day.end_time = end.getHours() + end.getMinutes() / 60;\n            if (day.day_of_week === dow) {\n                overrides[today].start_time = day.start_time;\n                overrides[today].end_time = day.end_time;\n            }\n        }\n        const user = await showUser('current').toPromise();\n        await updateUser(user.id, {\n            ...user,\n            work_preferences: this.settings,\n            work_overrides: overrides,\n        }).toPromise();\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            location.reload();\n            this._dialog_ref.close();\n        }\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n}\n"],"x_google_ignoreList":[]}