{"version":3,"file":"main.js","mappings":"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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","ɵɵsanitizeUrl","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","_r6","user_r9","ɵɵi18n","MeetingFlowConfirmComponent_section_25_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r11","MeetingFlowConfirmComponent_section_26_ng_container_6_Template","_event_form","_sheet_ref","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_section_25_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_button_28_Template","all_day","spaces_1","date_fns_1","_toggleType","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","_objectSpread","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","_ref18","system_id","mod","execute","Booking","valueOf","locker_id","locker_name","extension_data","bookings","_ref20","_ref21","p","l","_ref22","_ref23","filters","_filters$shown_types","_filters$shown_types2","parse","interval","document","visibilityState","stopPolling","clearInterval","setAsDeleted","push","clear","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","count","_this$displayed","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","_ref3$","ignore","queryGroupAvailability","zone_id","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref5","_$assets","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","ical_uid","location_name","location_id","filtered","event_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","products","showGroupFull","purchase_orders","_loop2","_purchase_orders$find","_step3","_iterator3","_loop3","removeAssetRequests","updateAssetRequestsForResource","_x2","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","start","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","_c2","_r14","_r16","_booking","hide_map","ts","booking_start","booking_end","_this$booking9","_this$booking10","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","viewLocation","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_47_Template","BookingDetailsModalComponent_button_48_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_URLS","_confirmPost","_payments","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","restrictions","showMetadata","available_resources","merge","timer","getRawValue","restriction","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$user","_value$user2","_value$user2$id","_value","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","approved","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","group_name","_asset$zone4","_asset$zone5","t1","_getNearbyResources","t2","t3","idx","organisation","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","_ref13","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","rejected","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","booker","emitEvent","disable","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","showBooking","response_type","approveBooking","rejectBooking","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r2","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_5_0","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_5_Template","feat_r18","_r20","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","end_date","tmp_8_0","tmp_15_0","tmp_17_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_r8","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r29","ctx_r28","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r35","ctx_r34","onDone","ctx_r36","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","locker","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","available","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","_lockers","lockers_banks$","locker_bank_id","locker_bank","LockersService","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_14_0","tmp_16_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r18","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","lockers$","bank_list","level_id","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","zone_ids","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","level_list","lvl","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_11_0","tmp_13_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","hidden","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","tags","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","item_r15","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","CateringOrderItemComponent","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r25","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","_r37","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","_this$item","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","helpers_1","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","setHours","stringToMinutes","trigger","transition","opacity","animate","str","_timer","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","formatRecurrence","pattern","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","json","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","start1","end1","start2","end2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_disable_logging","notify","message","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","notifyWarn","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","breakdown","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","nativeElement","authority","ElementRef","Renderer2","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","clipboard_1","paginator_1","table_1","portal_1","core_3","icon_component_1","interactive_map_component_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","debug_console_component_1","scrolling_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","useValue","NgIf","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","DebugConsoleComponent","NgForOf","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","row_r9","CustomTableComponent_ng_container_1_div_3_ng_template_2_ng_container_0_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r19","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","Observable","viewQuery","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","CustomTooltipData","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","show","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","RedirectComponent","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent","parts","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_ngOnChanges","ngOnChanges","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r18","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","item_r16","EventDetailsModalComponent_ng_container_69_div_5_Template","_c22","EventDetailsModalComponent_div_72_div_3_Template","item_r21","EventDetailsModalComponent_ng_container_73_div_5_Template","_c27","_r23","show_attendees","_this$event$system","_this$event2$ext","_this$event3$linked_b","has_assets","linked_bookings","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","event_link_modal_component_1","helpers_2","asset_utilities_1","events_fn_2","_newForm","_assets","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","filterSpacesFromRules","booking_rules","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","availability_method","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_form$get","_form$get2","_ref19","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","recurrence","is_owner","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","_pattern","recurring","checkSelectedSpacesAreAvailable","calendar","old_system","host_override","removeEvent","_makeBooking2","toJSON","_checkSelectedSpacesAreAvailable","exclude","space_ids","exclude_range","_x10","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","event_start","event_end","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","recurring_master_id","from_bookings","master","mailbox","range_start","range_end","days_of_week","attachments","eventStatus","is_external","_this$recurrence","_this$system","EVENTS_ENDPOINT","createEvent","updateEvent","method","showEvent","approveEvent","rejectEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","_b$resources","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","blocks","blk","getNextFreeTimeSlot","addSeconds","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","addToDate","rulesForSpace","rulemap","_step4","_iterator4","_rulemap$zone","_step5","_iterator5","ruleset","checkRulesMatch","conditions","_host$groups","is_before","is_after","min_length","max_length","_rulesForSpace","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","_save","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","_desk_bookings","Desk","_bind","processBindingChange","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","actives","current_state","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this5$_options$getVa","_this5$_options$getVa2","_user","_yield$_this5$_setBoo","_setBookingTime","custom","setActions","_setBookingTime2","until","SetDatetimeModalComponent","ExploreStateService","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","pair_r2","ExploreMapViewComponent_div_16_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","map_styles","positions","map_positions","map_actions","map_labels","_options$disable","toggleZones","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_this$_org$levelWithI","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","locations","pos","priority","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","updateZoom","updateCenter","ExploreMapViewComponent_div_16_Template","tmp_7_0","show_legend","existing_event","week_events","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","openEventLinkModal","bookSpace","_positions","_styles","_actions","_labels","_message","limit","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","coordinates","properties","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","slide_toggle_1","overlay_1","bookings_module_1","MatSlideToggleModule","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","render_fn","FieldDateAdapter","_core_2$NativeDateAda","displayFormat","NativeDateAdapter","FIELD_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_super2","_from","_to","addYears","old_date","new_date","getHours","getMinutes","formatISO","DateAdapter","useClass","MAT_DATE_FORMATS","ɵɵreference","option_r2","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","_this$duration_option","DurationFieldComponent_mat_option_4_Template","user_search_field_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","calendar_fn_1","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","cloud_uploads_1","blobUtil","url_r7","copyLink","viewImage","removeImage","progress","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","uploadFile","observer","arrayBuffer","upload_details","formatted_size","humanReadableByteCount","upload","blob","arrayBufferToBlob","upload_list","uploadFiles","file_name","takeWhile","access_url","complete","readAsArrayBuffer","ImageListFieldComponent","_uploadImages","_clipboard","upload_ids","_upload_list","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploadImages","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","recurrence_modal_component_1","formattedValue","RecurrenceFieldComponent","getDay","RecurrenceModalComponent","day_of_week","setSimple","RecurrenceFieldComponent_mat_option_15_Template","openCustomRecurrenceModal","occurrences","ends_key","toggleDayOfWeek","Quill","RichTextInputComponent","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","_container_el","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","SpaceListFieldComponent","NewSpaceSelectModalComponent","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","barcode","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","query_params","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateMockDeskMetadata","generateParkingSpaces","PARKING_SPACES","assignee","assigned_name","map_regions","DESK_FEATURES","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","connected","input_list","output_list","env_sources","available_outputs","source","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","visible","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","region_list","active_region","region","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","loadRegionData","_this2$building","_updateSettingOverrides","_this$region","loadBuildingData","regions","_this$building2","_this$building3","_this$_organisation","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","queryZones","_auth$config","org_zone","_loadRegions","_this$_organisation2","Region","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this6$building3","geolocation","getCurrentPosition","_this6$building","_position$coords","coords","latitude","longitude","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this6$building2","tz_start","_this$building4","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","SpaceSelectItemComponent_div_0_div_6_Template","SpaceSelectItemComponent_div_0_button_7_Template","by_request","SpaceSelectItemComponent","SpaceSelectItemComponent_div_0_Template","SpaceSelectItemComponent_ng_template_1_Template","bld_r10","SpaceSelectModalComponent_mat_form_field_9_mat_option_2_Template","type_r14","SpaceSelectModalComponent_mat_form_field_10_mat_option_2_Template","space_types","space_r19","spaceSelected","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_a_space_select_item_1_Template","space_map","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_Template","SpaceSelectModalComponent_ng_container_12_ng_container_1_Template","space_r27","SpaceSelectModalComponent_div_13_ng_container_1_a_space_select_item_1_Template","SpaceSelectModalComponent_div_13_ng_container_1_Template","show_selected","SpaceSelectModalComponent","SpaceSelectModalComponent_mat_form_field_9_Template","SpaceSelectModalComponent_mat_form_field_10_Template","SpaceSelectModalComponent_ng_container_12_Template","SpaceSelectModalComponent_div_13_Template","SpaceSelectModalComponent_footer_14_Template","SpaceSelectModalComponent_ng_template_15_Template","SpaceSelectModalComponent_ng_template_17_Template","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r5","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_div_22_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r11","feat_r13","feature_display","SpaceFiltersComponent_section_48_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_48_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_section_48_Template","SpaceFiltersComponent_div_50_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","public","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","user_r4","today","current_hour","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","updateWidth","updateScroll","container_size","user_list_size","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_21_Template","FindAvailabilityModalComponent_div_23_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_2_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","preferred_beverage","accepted_terms_conditions","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","wfh_settings_modal_component_1","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","WFHSettingsModalComponent","MatCheckbox","i12","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            [src]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    *ngIf=\"space?.images?.length > 0\"\n                    src=\" space.images \"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: 'shortTime') +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: 'h:mm a (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Booking, queryBookings } from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return of([]);\n            const mod = getModule(system_id, 'Lockers');\n            return mod.execute('lockers_allocated_to_me').catch((_) => []);\n        }),\n        map((_) =>\n            _.map(\n                (i) =>\n                    new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        asset_id: i.locker_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    })\n            )\n        ),\n        catchError(() => of([])),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval(\n            'poll',\n            () => {\n                document.visibilityState === 'visible'\n                    ? this._poll.next(Date.now())\n                    : '';\n            },\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [src]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [src]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        const item = this.selected.find((_) => _.id === this.displayed?.id);\n        if (item) item.amount = count;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zone_id: bld.id || zone || '',\n                    zones: zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s))\n            );\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { addYears } from 'date-fns';\nimport { flatten } from '@placeos/common';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query), queryAssets(query)]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) => (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"!auto_checkin\"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <!-- <button mat-menu-item mat-dialog-close class=\"flex items-center space-x-2 text-base\" (click)=\"edit.emit()\">\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button> -->\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(\n            this.booking.id,\n            !this.booking.checked_in\n        ).toPromise();\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id: this._booking.extension_data.map_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = [\n    'book/desks',\n    'book/parking',\n    'book/new-desks',\n    'book/new-parking',\n];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = this.options.pipe(\n        debounceTime(300),\n        distinctUntilKeyChanged('type'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this.form.getRawValue() || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                value,\n                this._options.getValue().type\n            );\n        }\n        if (value.duration >= 12 * 60 || value.all_day) {\n            this.form.patchValue({\n                date: set(value.date, { hours: 11, minutes: 59 }).valueOf(),\n                duration: 12 * 60,\n            });\n            value = this.form.getRawValue();\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !!this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            );\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            await this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string, \n    resource_calendar: string, \n    event_id: string, \n    host_email: string\n};\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>,  q?: { event_id?: string, ical_uid?: string }) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>, q?: { event_id?: string, ical_uid?: string }) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data, q);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone as any as BuildingLevel),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n\n                            >Building<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                formControlName=\"date\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: user,\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$ = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.level_list.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l;\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [src]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"active = !active\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, AsyncHandler } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: 'shortTime' }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list.filter((order) => checkOrder(order, this._filters.getValue()))\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event).toPromise();\n        this._poll.next(Date.now());\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${encodeURIComponent(map[key])}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && await cache.checkForUpdate()) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!await cache.activateUpdate()) return;\n        notifyInfo('Newer version of the application is available', 'Refresh', () =>\n            location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push(['DTSTART', `${new Date(event.date).toISOString()}`]);\n    chunks.push([\n        'DTEND',\n        `${addMinutes(event.date, event.duration ?? 60).toISOString()}`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'outlook'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    breakdown: 15,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"078c43b\",\n    \"hash\": \"078c43b\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"078c43b\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1686122612344\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard  {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table [dataSource]=\"data_source\" matSort>\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column] }}</ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10 border-b border-gray-300 dark:border-neutral-400\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 border-b border-gray-200 dark:border-neutral-500\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (token()) {\n                    this.loading = false;\n                    this.clearInterval('has_token');\n                }\n            },\n            1000\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [src]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">{{ item.name }}</h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img class=\"h-full w-full\" [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ event?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"event.system?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                asset\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">\n                                        {{ item.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"edit.emit(space)\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit event</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"remove.emit()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div i18n>Delete event</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, getUnixTime, isBefore, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { filterSpacesFromRules } from './helpers';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\n\nconst BOOKING_URLS = [\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(zone_ids.map((id) => requestSpacesForZone(id)));\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, all_day } = this._form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            list = filterSpacesFromRules(\n                list,\n                { date, duration, space: null, host: currentUser() },\n                this._org.building.booking_rules\n            );\n            return (list || [])\n                .filter((_, idx) =>\n                    periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    )\n                )\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                if (all_day) {\n                    date = startOfDay(date).valueOf();\n                    duration = 24 * 60 - 1;\n                }\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterSpacesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                space: null,\n                                host: currentUser(),\n                            },\n                            this._org.building.booking_rules\n                        );\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff < 14\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._event.next(event);\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event,\n            ...event.extension_data,\n            date:\n                !event.id && isBefore(event.date || 0, Date.now())\n                    ? Date.now()\n                    : event.date,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!this._form) this.newForm();\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            console.log(\n                'Payments:',\n                this._payments.payment_module,\n                spaces.length\n            );\n            if (this._payments.payment_module && spaces.length) {\n                console.log('Make Payment...');\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n                console.log('Payment success.', receipt);\n            }\n            const d = value.all_day\n                ? startOfDay(value.date).valueOf()\n                : value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(async (e) => {\n                    if (!this.form.value.id) {\n                        await removeEvent(result.id).toPromise();\n                    }\n                    throw e;\n                });\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        const space_ids = (\n            await Promise.all(\n                spaces.map((_) => this._space_pipe.transform(_.id || _.email))\n            )\n        ).map((_) => _.id);\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        const availability_method = this.has_calendar\n            ? querySpaceAvailability\n            : queryResourceAvailability;\n        let availability: boolean[] = await availability_method(\n            spaces.map((_) => _.id),\n            date,\n            duration,\n            ignore\n        ).toPromise();\n        if (!availability.every((_) => _))\n            throw `${\n                availability.filter((_) => _).length\n            } space(s) are not available at the selected time`;\n        return true;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport interface LinkedBooking {\n    id: string;\n    asset_id: string;\n    asset_name: string;\n    user_id: string;\n    user_name: string;\n    description: string;\n    booking_type: string;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week.map((_) =>\n                    typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                ),\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(endOfDay(this.recurrence.end)),\n                days_of_week: this.recurrence.days_of_week.map(\n                    (_) => DAYS_OF_WEEK[_]\n                ),\n            };\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id ? updateEvent(data.id, data, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    _.filter(\n                        (b) =>\n                            b.resources?.find((s) => s.id === id) &&\n                            b.id !== ignore &&\n                            b.ical_uid !== ignore\n                    ).length === 0\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes,\n    addSeconds,\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_master_id: new FormControl(event.recurring_master_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    form.get('date').valueChanges.subscribe(() =>\n        form.get('duration').updateValueAndValidity()\n    );\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._options,\n        this._poll,\n    ]).pipe(\n        filter(([lvl]) => !!lvl),\n        debounceTime(600),\n        switchMap(([lvl, { date }]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(date || Date.now())),\n                period_end: getUnixTime(addMinutes(date || Date.now(), 60)),\n                type: 'desk',\n                zones: lvl.id,\n            }).pipe(catchError(() => of([] as Booking[])))\n        ),\n        tap((l) => {\n            this._users = {};\n            this._departments = {};\n            l.forEach((b) => {\n                const departments =\n                    this._settings.get('app.department_map') || {};\n                this._users[b.asset_id] = b.user_name;\n                this._departments[b.asset_id] =\n                    departments[b.extension_data.department] || '';\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence && !is_checked_in\n                        ? has_signs\n                            ? 'signs-of-life'\n                            : 'free'\n                        : !has_presence && !is_checked_in\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) => {\n                const actives = _.filter(\n                    (e) =>\n                        !(\n                            e.rejected ||\n                            e.deleted ||\n                            e.extension_data.current_state === 'ended' ||\n                            e.is_done\n                        )\n                );\n                this._in_use.next(actives.map((i) => i.asset_id));\n                this._checked_in.next(\n                    actives.filter((e) => e.checked_in).map((i) => i.asset_id)\n                );\n            })\n        );\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n        if (options.date) this._poll.next(Date.now());\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe(({ value }) =>\n                        this._status.next(\n                            value?.filter((_) => _.location === 'locker') || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        console.error(_);\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map((u) => ({\n                            id: u.email,\n                            type: (u as any).type || 'contact',\n                            name: u.name,\n                            description: u.email,\n                        }))\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        console.log(\n            'Init Search:',\n            mod,\n            this._org.binding('location_services')\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            *ngIf=\"space.images[0]\"\n                            [src]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (this._statuses[space.id] !== 'free' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        {{\n                            option.date\n                                ? (option.date\n                                      | date\n                                          : (option.id >= 24 * 60\n                                                ? 'mediumDate'\n                                                : 'h : mm a')) + ' ('\n                                : ''\n                        }}{{ option.name }}{{ option.date ? ')' : '' }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    humanReadableByteCount,\n    Upload,\n    uploadFiles,\n} from '@placeos/cloud-uploads';\nimport { AsyncHandler, notifyInfo, randomInt, unique } from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(file: File): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload: null,\n            };\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            upload_details.upload = upload;\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe(\n                    (state) => {\n                        if (upload.access_url)\n                            upload_details.link = upload.access_url;\n                        upload_details.progress = state.progress;\n                        observer.next(upload_details);\n                        if (state.status === 'error')\n                            observer.error({\n                                ...upload_details,\n                                error: state.error,\n                            });\n                        if (state.status === 'complete') observer.complete();\n                    },\n                    (e) => (upload_details.error = e)\n                );\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [style.background-image]=\"'url(' + url + ')'\"\n            >\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeItem(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(private _clipboard: Clipboard) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file).subscribe(update_fn, update_fn, () => {\n                this._updateUploadHistory();\n            });\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addYears } from 'date-fns';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    Last {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option>\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formattedValue() }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            this.value.start = this.date;\n            if (!this.value.pattern) {\n                this.value.days_of_week = [new Date(this.date).getDay()];\n            }\n        }\n    }\n\n    public readonly formattedValue = () => formatRecurrence(this.value);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            if (data) this.setValue({ ...data, _pattern: 'custom_display' });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 3).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"monthly\">\n                            month{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\">Repeat on</h2>\n            <div class=\"flex items-center space-x-2 mb-4\" name=\"repeat-on\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button value=\"never\">Never</mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button btn class=\"w-32\" matRipple [mat-dialog-close]=\"data\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 13,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [src]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces: Space[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        const ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: Space[]) => {\n            if (!spaces) spaces = ref.componentInstance.selected;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Space[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity, timeFormatString } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{ option.date | date: 'h : mm a' }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createAreaManagementModule, MockLocationServicesModule } from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)]\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        this.loadRegionData(item).then(() => {\n            if (\n                this.building?.parent_id !== item.id &&\n                this.buildingsForRegion(item).length\n            ) {\n                this.building = this.buildingsForRegion(item)[0];\n            } else this._updateSettingOverrides();\n        });\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld?.id);\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list\n            .filter(\n                (lvl) =>\n                    !!this.buildings.find((bld) => bld.id === lvl.parent_id)\n            )\n            .map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = localStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        } else {\n            const timezone = this.timezone;\n            for (const bld of this.buildings) {\n                if (bld.timezone === timezone) {\n                    this.building = bld;\n                    break;\n                }\n            }\n            if (this.building) return;\n            const tz_start = timezone.split('/')[0];\n            for (const bld of this.buildings) {\n                if (bld.timezone.startsWith(tz_start)) {\n                    this.building = bld;\n                    break;\n                }\n            }\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","\nexport class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button\n                btn\n                matRipple\n                class=\"w-32\"\n                [class.request]=\"space.by_request\"\n            >\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button icon mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button btn matRipple (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends AsyncHandler {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceCalendarAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh]\"\n            (window:resize)=\"updateWidth()\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                #container\n                class=\"flex flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-auto divide-x divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n                (scroll)=\"updateScroll()\"\n            >\n                <div\n                    users\n                    class=\"sticky left-0 min-h-full bg-white dark:bg-neutral-700 border-r border-gray-300 dark:border-neutral-500 z-30\"\n                >\n                    <div\n                        header\n                        class=\"h-10 w-[6rem] border-b border-gray-300 dark:border-neutral-500\"\n                    ></div>\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"user\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[user.email]\n                                    : []\n                            \"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                </div>\n                <div\n                    [attr.hour]=\"i\"\n                    class=\"min-w-[5rem] bg-gray-50 dark:bg-neutral-600 min-h-full pointer-events-none\"\n                    [attr.disabled]=\"today && i < current_hour\"\n                    *ngFor=\"let h of hours; let i = index\"\n                >\n                    <div\n                        header\n                        class=\"h-10 border-b border-gray-300 dark:border-neutral-500 p-2\"\n                    >\n                        {{ i % 12 ? i % 12 : '12' }}{{ i >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div\n                    selection\n                    class=\"absolute top-10 bottom-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                    [style.left]=\"selection_left + 'rem'\"\n                    [style.width]=\"selection_width + 'rem'\"\n                    (mousedown)=\"startMovePeriod($event)\"\n                    (touchstart)=\"startMovePeriod($event)\"\n                >\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                    ></div>\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                        (mousedown)=\"startMoveDuration($event)\"\n                        (touchstart)=\"startMoveDuration($event)\"\n                    ></div>\n                    <div\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ duration | duration }}\n                    </div>\n                    <div\n                        *ngIf=\"move_time\"\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ date | date: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [disabled='true'] {\n                background: rgba(0, 0, 0, 0.05) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset = 0;\n    public width = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n\n    public readonly availability = this.users.pipe(\n        debounceTime(300),\n        switchMap((users) => {\n            if (!users.length) return of([]);\n            return queryUserFreeBusy({\n                calendars: [this.host.email, ...users.map((_) => _.email)].join(\n                    ','\n                ),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5 + 6;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.updateWidth();\n                this.updateScroll();\n            },\n            300\n        );\n    }\n\n    public updateWidth() {\n        const container_size =\n            this._container_el.nativeElement.getBoundingClientRect().width;\n        const user_list_size = this._container_el.nativeElement\n            .querySelector('[users]')\n            .getBoundingClientRect().width;\n        this.width = Math.floor(container_size - user_list_size);\n        this._move_size =\n            this._container_el.nativeElement\n                .querySelector('[hour]')\n                .getBoundingClientRect().width * 24;\n    }\n\n    public updateScroll() {\n        this.offset = this._container_el.nativeElement.scrollLeft;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 0;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"overflow-hidden relative border-b border-gray-300 dark:border-neutral-500 h-full pointer-events-none\"\n            [style.width]=\"width + 'px'\"\n        >\n            <div\n                class=\"absolute w-[120rem] h-full inset-y-0\"\n                [style.left]=\"-offset + 'px'\"\n            >\n                <div\n                    event\n                    *ngFor=\"let event of availability\"\n                    class=\"absolute inset-y-0 bg-primary text-white p-2 overflow-hidden border border-white rounded\"\n                    [style.left]=\"event.start + '%'\"\n                    [style.width]=\"event.size + '%'\"\n                >\n                    <div class=\"text-xs\">Unavailable</div>\n                    <div class=\"text-xs max-w-full\">\n                        {{ event.date | date: 'shortTime' }} -\n                        {{\n                            event.date.valueOf() + event.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n    @Input() public offset = 0;\n    @Input() public width = 0;\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.extension_data?.status || data.status || 'pending';\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { showGuest } from \"./guests.fn\";\nimport { showStaff } from \"./staff.fn\";\nimport { User } from \"./user.class\";\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user'\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(({ id, email }) => id === user_id || email === user_id);\n        if (user) return user;\n        user = await showStaff(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}