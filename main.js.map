{"version":3,"file":"main.js","mappings":"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AG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI/L,EAAUkL,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKlL,EAAUiL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_class","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r3","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","_r2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r4","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","sd","ev","meeting_id","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","triggerPoll","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","item_r2","toggleCategory","category","ɵɵattribute","AssetFiltersComponent","search","search_value","categories","category_list","setSearch","c","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_mat_checkbox_8_Template","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","_r11","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","t","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","startOfMinute","endOfMinute","addMinutes","localeCompare","queryAssetCategories","zone_id","_ref9","_$assets","category_id","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","RULE_REQUESTS","Array","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","new_assets","old_assets","ical_uid","from_booking","location_name","location_id","filtered","event_id","booking_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","_r9","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","ɵɵpureFunction1","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","has","_this$booking7","_this$booking8","_this$booking9","is_today","format","_this$booking10","_this$booking11","_this$booking12","_this$booking13","is_all_day","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r15","BookingDetailsModalComponent_ng_container_36_div_5_Template","_c6","_c7","_booking","hide_map","has_assets","linked_bookings","_this$booking6","ts","booking_start","booking_end","_this$booking14","_this$booking15","_toggleCheckedIn","checkinBooking","notifySuccess","approved","rejected","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_interactive_map_38_Template","BookingDetailsModalComponent_button_49_Template","BookingDetailsModalComponent_button_50_Template","booking_status","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","unique","booking_rules","available_resources","merge","timer","restrictions","_this$form$getRawValu","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","removeEmptyFields","addHours","getTime","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","use_24hr","feat_r21","_r23","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level3","_this2$level2","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","optionList","item_r3","CateringListFieldComponent_div_1_div_20_span_3_Template","order_r1","removeOrderItem","currency_code","editOrder","removeOrder","show_order","CateringListFieldComponent_div_1_div_20_Template","deliver_at","item_count","CateringListFieldComponent","orders","currency","new_order","CateringOrder","custom_id","NewCateringOrderModalComponent","deliver_time","deliver_offset","time","offset","exact_time","getHours","getMinutes","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_20_Template","CateringOrderListComponent_div_22_Template","CateringOrderListComponent_mat_progress_bar_24_Template","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","at_time","at_timeChange","offsetChange","min_offset","max_offset","item_r9","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","_this$_data$","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","charge_code","notes","_this$event2","_this$event","_status","catering_vars_1","CateringOrderComponent_div_0_button_22_Template","show_items","event_start","event_end","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","_ref2$","checkOrder","updated_order","saveEvent","toJSON","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","inject_map_api_service_1","InjectMapApiService","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","is_initialised","is_initialised$","maps_key","script","google_key","KeepAliveService","_system_id","_delay","_bindTo","module","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_events","Subject","_event_history","_logging_bindings","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","head","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","blob","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r8","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","_r22","ChatComponent_div_0_div_4_Template","show","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","idx_r10","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_class2","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","diff","direction","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","IndoorMapsComponent_div_15_li_3_Template","search_result_items","IndoorMapsComponent","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","coordinates","levels_list","buildings_list","floor_mapping","custom_coordinates","_getUserLocation","initMapView","initDirections","handleLocationChange","_ngOnChanges","renderSpaceStatus","mapActions","mapFloorsToIndex","ngOnChanges","_this$mapsIndoors_ins","mapsIndoors_instance","addListener","found_action","actions_hashmap","map_view_options","lat","lng","maxZoom","map_view_instance","mapsindoors","mapView","GoogleMapsView","MapsIndoors","googleMaps_instance","getMap","externalDirectionsProvider","directions","GoogleMapsProvider","mapsIndoors_directions_service_instance","services","DirectionsService","mapsIndoors_directions_renderer_instance","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$mapsIndoors_ins2","_building$buildingInf","_this$mapsIndoors_ins3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","accumulator","getFloor","_this$mapsIndoors_ins4","_this$mapsIndoors_ins5","floorSelectorElement","FloorSelector","google","ControlPosition","RIGHT_TOP","found_building","_e$buildingInfo","_onSearch","_mapsindoors","searchParams","searchElement","LocationsService","getLocations","locations","onSearch","enableHighAccuracy","customPosition","coords","latitude","longitude","accuracy","geolocation","getCurrentPosition","_error$message","watchPosition","_updateGeolocation","_handleGeolocationError","updated_location","_updated_location$coo","_updated_location$coo2","_updated_location$coo3","_updated_location$coo4","destination","anchor","travelMode","directionsResult","_this6$mapsIndoors_di","setRoute","_error$message2","TypeError","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this7$actions","currentValue","_setPolygonFill2","_this$mapsIndoors_ins6","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_mat_spinner_1_Template","IndoorMapsComponent_div_2_Template","IndoorMapsComponent_div_15_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r21","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r19","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","item_r28","EventDetailsModalComponent_ng_container_69_div_5_Template","_c25","show_attendees","_r32","no_edit_message","_r34","act_r35","EMPTY_ACTIONS","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_interactive_map_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event3","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data4","_form$getRawValue","is_owner","breakdown","overflow","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","catering_notes","setup_time","breakdown_time","old_system","visit_expected","host_override","is_external","removeEvent","_makeBooking2","_updateVisitorList","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","all_day_date","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","_s$resource","attendee_list_component_1","event_card_component_1","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get3","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","_this$_element$native","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r1","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","_step4","_iterator4","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","use_mapsindoors$","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","roled_contacts","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_bookSpace","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","openEventLinkModal","bookSpace","_updateStatus2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r10","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r16","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r22","time_r23","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","i13","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","item_r17","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_uploadImages","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","addChipItem","removeChipItem","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","_r0","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","_updateSettingOverrides","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","feature_display","SpaceFiltersComponent_section_39_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_39_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_39_Template","SpaceFiltersComponent_div_41_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","_super2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/inject-map-api.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) => {\n            const sd = d.filter(\n                (_) => !e.find((ev) => `${ev.meeting_id}` === `${_.id}`)\n            );\n            return [...e, ...v, ...sd, ...p, ...l].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [source]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, Input } from '@angular/core';\nimport { Asset } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent {\n    @Input() public search = false;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(private _state: AssetStateService) {}\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: from_booking ? '' : id,\n        booking_id: from_booking ? id : '',\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: from_booking ? '' : id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-2 rounded-2xl text-white px-3 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-warning]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'pending'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) =>\n            createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise()\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { debounceTime, map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border border-base-300 shadow bg-base-100 rounded-xl overflow-hidden\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"\">\n                            Order for\n                            {{ order.deliver_at | date: 'mediumDate' }} at\n                            {{ order.deliver_at | date: time_format }}\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            for (const order of this.orders) {\n                (order as any).event = this.options;\n            }\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [\n                order.items,\n                {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                !!order.deliver_time,\n                order.deliver_offset,\n            ],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-48\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { SettingsService } from '@placeos/common';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                matTooltip=\"Deliver at exactly specified time. Note that changes to the booking will not be reflected in the order if this is set.\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"(filters | async)?.date\"\n                [step]=\"5\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public get min_offset() {\n        return Math.max(this._settings.get('app.catering.min_offset'), 0);\n    }\n\n    public get max_offset() {\n        const duration = this._state.getFilters().duration;\n        return Math.max(\n            15,\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n    }\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n    public exact_time = this._data[2] ?? false;\n    public offset: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: [CateringItem[], any, boolean, number]\n    ) {\n        const duration = this._data[1].duration;\n        this._order.setFilters(this._data[1]);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data[3] || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addMinutes, set, startOfMinute } from 'date-fns';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n\n    public get deliver_at() {\n        if (this.deliver_time) {\n            return startOfMinute(\n                addMinutes(\n                    set(this.event?.date || Date.now(), {\n                        hours: Math.floor(this.deliver_time),\n                        minutes: (this.deliver_time % 1) * 60,\n                    }),\n                    this.deliver_offset\n                )\n            ).valueOf();\n        }\n        return startOfMinute(\n            addMinutes(this.event?.date || Date.now(), this.deliver_offset)\n        ).valueOf();\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div time class=\"w-48\">\n                {{ order.event?.event_start * 1000 | date: time_format }}\n                <span> - </span>\n                {{ order.event?.event_end * 1000 | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event.toJSON()).toPromise();\n        this._poll.next(Date.now());\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                console.log(\n                    'Matched Ruleset:',\n                    details.resource.id,\n                    details,\n                    ruleset\n                );\n                return ruleset.rules;\n            }\n        }\n    }\n    console.log(\n        'No Matched Ruleset:',\n        details.resource.id,\n        details,\n        DEFAULT_RULES\n    );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { InjectMapApiService } from './inject-map-api.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(s1: number, e1: number, s2: number, e2: number) {\n    return (\n        s1 >= s2 && s1 < e2 || s2 >= s1 && s2 < e1 || // Check start time\n        e1 > s2 && e1 <= e2 || e2 > s1 && e2 <= e1 // Check end time\n    )\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InjectMapApiService {\n    private is_initialised: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(null);\n\n    public readonly is_initialised$: Observable<boolean> =\n        this.is_initialised.asObservable();\n\n    constructor(private _settings: SettingsService) {}\n\n    public injectMapsApiKeys() {\n        const maps_key = this._settings.get('app.maps_indoor_api_key');\n        if (maps_key) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${maps_key}`;\n            document.body.appendChild(script);\n        }\n\n        const google_key = this._settings.get('app.google_maps_api_key');\n        if (google_key) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google_key}`;\n            document.body.appendChild(script);\n        }\n\n        if (maps_key && google_key) {\n            this.is_initialised.next(true);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"e082edd\",\n    \"hash\": \"e082edd\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"e082edd\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1701736078750\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-success/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-info`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-base-300/50`,\n    error: `bg-error/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-neutral text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-neutral p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-base-100/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.bg-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.bg-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, HashMap, notifyError } from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport {\n    BuildingLevel,\n    Building,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        >\n            <mat-spinner\n                *ngIf=\"loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n            <div\n                *ngIf=\"geolocation_error_message\"\n                class=\"flex flex-col items-center z-50\"\n            >\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n                <p class=\"opacity-60 text-sm text-center mt-10\">\n                    {{ geolocation_error_message | translate }}\n                </p>\n            </div>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-0 left-0 bg-base-100 rounded-lg z-50\"\n        >\n            <div class=\"flex basis-1/2 px-4\">\n                <div class=\"flex flex-row items-center max-h-20\">\n                    <mat-form-field appearance=\"outline\" class=\"h-16 mt-4\">\n                        <input\n                            matInput\n                            #searchInput\n                            name=\"location-search\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                        />\n                    </mat-form-field>\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"flex text-black h-10 w-10 rounded-full bg-base-200 ml-5\"\n                        aria-label=\"search button\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\"\n                            >search</app-icon\n                        >\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"flex basis-1/2 overflow-y-auto \">\n                <div class=\"ml-6\">\n                    <ul>\n                        <div *ngIf=\"search_result_items\">\n                            <span class=\"font-medium text-lg\">Results</span>\n                            <li *ngFor=\"let item of search_result_items\">\n                                <div class=\"flex items-center mt-3 mb-3 h-10\">\n                                    <span class=\"flex mr-3 text-base\">\n                                        {{ item.properties.name }}</span\n                                    >\n                                    <button\n                                        icon\n                                        name=\"get-directions\"\n                                        matRipple\n                                        aria-label=\"get directions button\"\n                                        (click)=\"getRoute(item)\"\n                                        class=\"flex text-white h-7 w-7 rounded-md bg-secondary\"\n                                    >\n                                        <app-icon class=\"text-sm\"\n                                            >near_me</app-icon\n                                        >\n                                    </button>\n                                </div>\n                            </li>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public map_view_options: any;\n    public map_view_instance: any;\n    public mapsIndoors_instance: any;\n    public googleMaps_instance: any;\n    public mapsIndoors_directions_service_instance: any;\n    public mapsIndoors_directions_renderer_instance: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n    public floor_mapping: { [id: string]: string } = {};\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = await this.levels.pipe(take(1)).toPromise();\n        this.buildings_list = await this._org.building_list\n            .pipe(take(1))\n            .toPromise();\n\n        if (this.custom_coordinates) {\n            this.coordinates = this.custom_coordinates;\n        }\n        await this._getUserLocation();\n\n        await this.initMapView();\n        this.initDirections();\n\n        this.handleLocationChange();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    ngAfterViewInit() {\n        this.mapsIndoors_instance?.addListener(\n            'click',\n            (location: any, e: Event) => {\n                const found_action = this.actions_hashmap[location.id];\n                if (found_action) {\n                    found_action.callback(e);\n                }\n            }\n        );\n    }\n\n    initMapView(): Promise<void> {\n        // Hardcoded coordinates for mock map in Austin\n        // this.map_view_options = {\n        //     element: document.getElementById('maps-indoors'),\n        //     center: { lat: 30.3603774, lng: -97.7426772 },\n        //     zoom: 21,\n        //     maxZoom: 26,\n        // };\n\n        this.map_view_options = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 26,\n        };\n        this.map_view_instance = new mapsindoors.mapView.GoogleMapsView(\n            this.map_view_options\n        );\n\n        this.mapsIndoors_instance = new mapsindoors.MapsIndoors({\n            mapView: this.map_view_instance,\n        });\n        return (this.googleMaps_instance = this.map_view_instance.getMap());\n    }\n\n    initDirections() {\n        const externalDirectionsProvider =\n            new mapsindoors.directions.GoogleMapsProvider();\n        this.mapsIndoors_directions_service_instance =\n            new mapsindoors.services.DirectionsService(\n                externalDirectionsProvider\n            );\n        const directionsRendererOptions = {\n            mapsIndoors: this.mapsIndoors_instance,\n        };\n        this.mapsIndoors_directions_renderer_instance =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    async mapFloorsToIndex() {\n        const building = await this.mapsIndoors_instance?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        this.floor_mapping = pairs?.reduce((accumulator, [key, value]) => {\n            accumulator[key] = value;\n            return accumulator;\n        }, {});\n        const floor_index: string = await this.mapsIndoors_instance?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(\n            floorSelectorElement,\n            this.mapsIndoors_instance\n        );\n        this.googleMaps_instance.controls[\n            google.maps.ControlPosition.RIGHT_TOP\n        ].push(floorSelectorElement);\n\n        this.mapsIndoors_instance?.addListener('building_changed', (e: any) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.mapsIndoors_instance?.addListener('floor_changed', (e: string) => {\n            if (e && this.floor_mapping) {\n                const level_id: string = this.floor_mapping[e];\n                this._state.setLevel(level_id);\n            }\n        });\n    }\n\n    async onSearch(): Promise<any> {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        await mapsindoors?.services.LocationsService.getLocations(\n            searchParams\n        ).then((locations: any[]) => {\n            this.search_result_items = locations;\n        });\n    }\n\n    private _getUserLocation() {\n        const options = { timeout: 10000, enableHighAccuracy: true };\n\n        return new Promise<GeolocationPosition>(async (resolve, reject) => {\n            if ('geolocation' in navigator) {\n                if (this.coordinates) {\n                    const customPosition = {\n                        coords: {\n                            latitude: this.coordinates.latitude,\n                            longitude: this.coordinates.longitude,\n                            accuracy: 10,\n                        },\n                        timestamp: new Date().getTime(),\n                    };\n                    this.user_latitude = this.coordinates.latitude;\n                    this.user_longitude = this.coordinates.longitude;\n\n                    resolve(customPosition as GeolocationPosition);\n                }\n\n                if (!this.coordinates) {\n                    await navigator.geolocation.getCurrentPosition(\n                        (position: GeolocationPosition) => {\n                            this.user_latitude = position.coords.latitude;\n                            this.user_longitude = position.coords.longitude;\n                            resolve(position);\n                        },\n                        (error) => {\n                            this.geolocation_error_message =\n                                'Error: ' +\n                                error.message?.toString() +\n                                '. Please enable geolocation settings.';\n                            reject(error);\n                        },\n                        options\n                    );\n                    navigator.geolocation.watchPosition(\n                        (_) => this._updateGeolocation(_),\n                        (_) => this._handleGeolocationError(_)\n                    );\n                }\n            } else {\n                this.geolocation_error_message =\n                    'Error: geolocation is not supported.';\n                reject('Geolocation not supported');\n            }\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (updated_location) {\n            if (\n                updated_location.coords?.latitude !== this.user_latitude ||\n                updated_location.coords?.longitude !== this.user_longitude\n            ) {\n                this.user_latitude = updated_location.coords?.latitude;\n                this.user_longitude = updated_location.coords?.longitude;\n                this.getRoute(this.selected_destination);\n            }\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError('Error updating your geolocation.');\n    }\n\n    getRoute(location: any) {\n        this.selected_destination = location;\n        if (this.user_latitude && this.user_longitude) {\n            const originLocationCoordinate: any = {\n                lat: this.user_latitude,\n                lng: this.user_longitude,\n            };\n\n            //Hardcoded coordinates for mock map in Austin\n            // const originLocationCoordinate = {\n            //     lat: 30.3603774,\n            //     lng: -97.7426772,\n            // };\n\n            const destinationCoordinate = {\n                lat: location.properties.anchor.coordinates[1],\n                lng: location.properties.anchor.coordinates[0],\n                floor: location.properties.floor,\n            };\n\n            const routeParameters = {\n                origin: originLocationCoordinate,\n                destination: destinationCoordinate,\n                travelMode: 'WALKING',\n            };\n\n            this.mapsIndoors_directions_service_instance\n                .getRoute(routeParameters)\n                .then((directionsResult: any) => {\n                    this.mapsIndoors_directions_renderer_instance?.setRoute(\n                        directionsResult\n                    );\n                })\n                .catch((error: any) => {\n                    console.error('Error fetching route: ' + error);\n                    if (\n                        error instanceof TypeError &&\n                        error.message?.includes('origin')\n                    ) {\n                        notifyError(\n                            'Error: Cannot create route as origin location is outside of map area.'\n                        );\n                    }\n                });\n        } else {\n            notifyError('Error: unable to find a route.');\n        }\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (this.styles) {\n            const promises: Promise<void>[] = [];\n            for (const key in this.styles) {\n                const colour = this.styles[key]['fill'] as string;\n                if (key) {\n                    const updated_key = key.substring(1);\n                    promises.push(this._setPolygonFill(updated_key, colour));\n                }\n            }\n            return await Promise.all(promises);\n        }\n    }\n\n    async mapActions() {\n        return new Promise<HashMap<ViewAction>>((resolve, reject) => {\n            this.actions_hashmap = this.actions?.reduce(\n                (accumulator, currentValue) => {\n                    accumulator[currentValue.id] = currentValue;\n                    return accumulator;\n                },\n                {}\n            );\n            resolve(this.actions_hashmap);\n        });\n    }\n\n    private async _setPolygonFill(location_id: string, colour: string) {\n        await this.mapsIndoors_instance?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\"\n        >\n            <pre class=\"font-mono text-sm bg-neutral p-2\">{{\n                formatted_json\n            }}</pre>\n        </div>\n    `,\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div class=\"flex items-center border-b border-base-200 p-2\">\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.ext('catering')\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date: time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-1 rounded-2xl text-white pl-1 pr-2 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-warning]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'question_mark'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"\n                        event.duration > 24 * 60 ? no_edit_message : ''\n                    \"\n                    [disabled]=\"event.duration > 24 * 60\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { addMinutes, differenceInDays, getUnixTime } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, organiser } = this._form.getRawValue();\n            let start = date;\n            let end = addMinutes(date, duration).valueOf();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((space, idx) => {\n                    return periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces, this.booking_rules]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    notifyError('Unable to book the selected assets.');\n                    this._loading.next('');\n                }\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(on_error);\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration =\n            data.duration ||\n            differenceInMinutes(data.event_end * 1000, this.date) ||\n            30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60, this.duration);\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? addMinutes(date, Math.max(24 * 60, this.duration))\n            : addMinutes(date, this.duration);\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        const event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\nimport {\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.value.catering;\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n            [custom_coordinates]=\"{\n                latitude: 30.3603774 ,\n                longitude:  -97.7426772,\n            }\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.is_initialised$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter(\n                (_) =>\n                    !events.find((e) => e.asset_id === _.id) && !_.assigned_to\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, flatten, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = [\n                ...spaces\n                    .filter(\n                        (_) =>\n                            _.email.toLowerCase().includes(search) ||\n                            _.name.toLowerCase().includes(search) ||\n                            _.display_name.toLowerCase().includes(search)\n                    )\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'space',\n                        name: s.display_name || s.name,\n                        description: `Capacity: ${s.capacity} `,\n                    })),\n                ...flatten(\n                    roled_contacts.map((u) =>\n                        (u as any).roles.map(\n                            (role) =>\n                                ({\n                                    id: u.email,\n                                    type: role || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                    )\n                ).filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(search) ||\n                        _.description.toLowerCase().includes(search) ||\n                        _.type.toLowerCase().includes(search)\n                ),\n                ...contacts\n                    .map(\n                        (u) =>\n                            ({\n                                id: u.email,\n                                type: (u as any).type || 'contact',\n                                is_role: true,\n                                name: u.name,\n                                description: u.email,\n                            } as any)\n                    )\n                    .filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                ...users.map((u) => ({\n                    id: u.email,\n                    type: 'user',\n                    name: u.name,\n                    description: u.email,\n                })),\n                ...features\n                    .filter((_) => _.name.toLowerCase().includes(search))\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'feature',\n                        name: s.name,\n                        description: '',\n                        zone: (s as any).zone?.id,\n                    })),\n            ];\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: 'MMMM d, yyyy' }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"false\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-base-200 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-neutral:bg-base-100/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-neutral text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-neutral border-base-200 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-neutral hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) this._updateSettingOverrides();\n        });\n        this.active_region.subscribe((region) => {\n            if (region) this._updateSettingOverrides();\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        console.log('Building:', this.building);\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n        console.log('Building:', this.building);\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-base-100 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-base-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}