{"version":3,"file":"main.js","mappings":"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,MAAMtO,EAAUklO,EAAUqN,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKrN,EAAUoN,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAA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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_AppRoutingModule","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","_AppComponent","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","_AppModule","AppModule","bootstrap","SpacePipe","provideHttpClient","withInterceptorsFromDi","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","_NotFoundComponent","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","_SharedComponentModule","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_DeskBookingComponent","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r3","ctx_r1","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ɵɵpureFunction0","_c0","date","duration","_r1","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","tmp_4_0","allow_all_day","can_book_lockers","allow_assets","_DeskBookingFormComponent","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","_DeskBookingSuccessComponent","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_MeetingBookingComponent","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r4","display_name","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","building","buildings","_r5","findAvailableTime","hide_block","attendees","_r6","catering","ɵɵpureFunction3","_c1","resources","level","has_catering","details","MeetingBookingFormComponent_div_0_div_12_Template","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","MeetingBookingFormComponent_div_0_section_60_Template","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","_MeetingBookingFormComponent","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","_MeetingBookingSuccessComponent","system","button_toggle_1","bottom_sheet_1","ROUTES","_BookModule","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_BookingConfirmedComponent","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","_FeaturesFilterService","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","ɵɵtwoWayListener","feature_r6","$implicit","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","applyFilters","tmp_2_0","tmp_3_0","minDate","_FilterSpaceComponent","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","_FindSpaceItemComponent","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r4","handleBookEvent","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","map_r6","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r7","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_5_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","empty_state_r8","_r9","openRoomDetails","_FindSpaceComponent","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","load_state_r10","room_tile_component_1","_MapService","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","_RoomBookingComponent","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_RoomConfirmService","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_RoomConfirmComponent","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","ctx_r0","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r2","RoomDetailsComponent_section_21_div_3_Template","back","_r4","_RoomDetailsComponent","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","_RoomTileComponent","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r1","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","ctx_r2","isEvent","booking_card_r2","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","empty_state_r4","_UpcomingBookingsComponent","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","load_state_r5","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r3","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","s_r4","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_MeetingFlowConfirmComponent","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_1","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_ScheduleStateService","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","_$linked_bookings","isSameDay","toLowerCase","a","linked_bookings","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","group_events","_ref18","lockers","lockers$","_ref20","_ref21","system_id","mod","execute","my_lockers","_ref23","_ref24","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref25","_ref26","p","l","ge","filtered_events","ev","_ev$linked_bookings$","bkn","meeting_id","_ref27","_ref28","filters","_filters$shown_types","_filters$shown_types2","_ignore_cancel","_checkCancel","interval","startWith","_ref29","_ref31","_ref32","_auto_release$resourc","is_home","auto_release","time_before","_iterator","_step","check_block","_iterator2","_step2","booking","diff","time","close_after","wording","time_after","Math","min","_createForOfIteratorHelper","n","done","startOfMinute","addMinutes","checked_in","rejected","closeAll","differenceInMinutes","differenceInMilliseconds","getTime","format","confirm_text","cancel_text","close_delay","push","checkinBooking","f","finish","t1","_x2","triggerPoll","parse","stopPolling","clearInterval","setAsDeleted","_toggleType","clear","_x3","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_loop","assetgroup","_AssetGroupPipe","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","request_r2","item_r5","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","rejected_ids","conflict","items","EMPTY_FAVS","_AssetListFieldComponent","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","request","changes","AssetRequest","new_value","state","order","order_list","requested","_step4","_iterator4","AssetSelectModalComponent","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","randomInt","_step3","new_order","_changed","_items$find","__","getHours","getMinutes","_iterator3","_ret","_loop2","reduce","t","c","_c$items$find","item_count","setValue","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","_data$asset_ids","_data$extension_data","_this$event","_data$extension_data2","_data$extension_data3","_data$extension_data4","event_id","asset_ids","amount","_status","status","request_id","_booking","notes","ref_id","blob","category_id","toggleFav","countChange","active","activeChange","fav","available","_AssetDetailsComponent","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","empty_state_r3","_AssetFiltersDisplayComponent","AssetFiltersDisplayComponent","day_r4","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r6","toggleCategory","category","_AssetFiltersComponent","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","getOptions","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r2","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","empty_state_r5","_AssetListComponent","AssetListComponent","_asset_state","selected_items","onSelect","_requested_items","counts","filtered_assets","_$assets","_this$selected_items","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","load_state_r6","displayed","_AssetSelectModalComponent","_data","_this$_data$exact_tim","selected_ids","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_AssetStateService","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","localeCompare","queryAssetCategories","zone_id","_ref9","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","groups_cache","queryAssetGroupsExtended","has","forkJoin","limit","setTimeout","delete","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","asset_type_id","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","products","_booking$asset_ids2","_removeAssetRequests","requests","_$asset_ids","removeBooking","differenceBetweenAssetRequests","new_assets","old_assets","changed","match","_validateAssetRequestsForResource","ical_uid","from_booking","location_name","location_id","reset_state","force_create","booking_list","has_state","unchanged","changed_requests","changed_assets","filtered","used_ids","_step3$value","processed_requests","booking_id","_ref11","approved","unique","_ref15","_ref17","req","_ref19","_available_groups$fin","idx","_assets$find","_request$items","createBooking","user_email","r","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","purchase_orders","_purchase_orders$find","queryAvailableAssets","_booking$asset_ids","removeAssetRequests","validateAssetRequestsForResource","_AssetsModule","booking_details_modal_component_1","async_handler_class_1","group_event_details_modal_component_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","ɵɵpureFunction1","period","desk_icon_r3","raw_description","for_current_user","_BookingCardComponent","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","_this$booking7","removeHtmlTags","_this$booking8","_this$booking9","_this$booking10","is_today","_this$booking11","_this$booking12","_this$booking13","_this$booking14","is_all_day","dur","formatDuration","html","DOMParser","parseFromString","textContent","_ref$componentInstanc","_ref$componentInstanc2","_ref$componentInstanc3","GroupEventDetailsModalComponent","BookingDetailsModalComponent","concierge","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","desk_settings_modal_component_1","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","menu_r5","item_r8","request_r7","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_r10","setDeskHeight","_r11","_r12","_BookingDetailsModalComponent","hide_map","has_assets","_this$booking6","ts","booking_start","booking_end","_this$booking15","_this$booking16","_toggleCheckedIn","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","DeskSettingsModalComponent","_templateObject6","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","booking_status","can_edit","is_checked_in","desk_height_enabled","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_BookingFormService","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","booking_rules","building_rules","mapping","available_resources","merge","timer","_this$_org$building","restrictions","_this$form$getRawValu","organisation","user_name","_asset$zone","_asset$zone2","_asset$groups","_options$features","_asset$zone3","_asset$zone4","is_restricted","rulesForResource","hidden","groups","grp","bookable","assigned_to","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone5","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","_this3$_org$building","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","phone","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","unavailable","group_name","_asset$zone6","_asset$zone7","_unavailable$map","_getNearbyResources","t2","t3","call","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","active_bookings","allowed_bookings","current","_context5","use_region","map_metadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","listChildMetadata","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x4","_x5","_x6","PaymentsService","calendar_links_1","_BookingLinkModalComponent","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$title","_data$extension_data5","_b_valid_asset_cache","_b_valid_cache_expiry","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","permission","toUpperCase","guests","tags","induction","process_state","removeEmptyFields","_this$extension_data","addHours","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","_booking$extension_da5","endInFuture","company","featured","other_asset_type","attendance_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","_item$items","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","setBookingState","utm_source","queryBookingGuests","GuestUser","checkinBookingGuest","guest_id","bookingAddGuest","guest","bookingRemoveGuest","json","message","checkinBookingAttendee","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","events_module_1","spaces_module_1","users_module_1","_SharedBookingsModule","SharedSpacesModule","SharedUsersModule","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","_DeskConfirmModalComponent","DeskConfirmModalComponent","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r3","ctx_r3","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","placeholder_r6","_DeskListFieldComponent","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","_DeskQuestionsModalComponent","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","_DeskDetailsComponent","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","desk_filters_component_1","show_fav","_DeskFiltersDisplayComponent","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","region","regions","bld_r6","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","feat_r11","DeskFiltersComponent_section_36_div_3_Template","_DeskFiltersComponent","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","lvl","setLevel","reg","allow_time_changes","hide_levels","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","end_date","tmp_13_0","tmp_15_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_DeskListComponent","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","_DeskMapComponent","DeskMapComponent","is_displayed","center","coordinates","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_bld$location$split$m","parseFloat","_bld$location$split$m2","latitude","longitude","new_zoom","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","_DeskSelectModalComponent","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","_DeskSettingsModalComponent","sitting_height","standing_height","preset","new_height","_setDeskHeight","sys_id","module","toFixed","setPreset","updatePreset","formatLabel","desk_confirm_modal_component_1","_DesksService","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_p_13_Template","GroupEventCardComponent_button_0_div_17_Template","GroupEventCardComponent_button_0_div_18_Template","GroupEventCardComponent_button_0_div_19_Template","is_onsite","has_space","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_p_27_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent_ng_template_1_div_32_Template","GroupEventCardComponent_ng_template_1_div_33_Template","_GroupEventCardComponent","GroupEventCardComponent","_this$event2","_this$event3","_this$event$linked_ev","space_pipe","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","featured_card_r4","is_interested","is_going","GroupEventDetailsModalComponent_div_99_interactive_map_3_Template","GroupEventDetailsModalComponent_div_99_span_9_Template","GroupEventDetailsModalComponent_div_99_span_13_Template","GroupEventDetailsModalComponent_div_99_span_14_Template","showing_map","show_attendees","_GroupEventDetailsModalComponent","locate","_this$booking$extensi","_this$booking$linked_","_this$booking$attende","guest_details","_this$guest_details","_this$booking$linked_2","_this$booking$attende2","_this$booking$linked_3","_this$space","_this$booking$extensi2","_this$booking$extensi3","_this$space2","notifyInfo","_toggleInterest","toggleInterest","_toggleAttendance","toggleAttendance","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_12_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_div_84_Template","GroupEventDetailsModalComponent_div_85_Template","GroupEventDetailsModalComponent_span_97_Template","GroupEventDetailsModalComponent_div_99_Template","GroupEventDetailsModalComponent_div_100_Template","concierge_menu_r5","menu_r6","is_online","attendance","ɵɵsanitizeHtml","notifications_1","general_1","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","ɵɵelementContainer","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","_InviteVisitorFormComponent","InviteVisitorFormComponent","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","ɵɵstyleProp","size","_LockerGridComponent","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","_LockerListFieldComponent","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r2","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","_LockerBankListComponent","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","_LockerFiltersDisplayComponent","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r6","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r8","LockerFiltersComponent_section_39_div_3_Template","_LockerFiltersComponent","active_levels","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_18_0","tmp_20_0","explore_locker_bank_info_component_1","lvl_r1","_LockerMapComponent","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","_this2$level","LockerMapComponent_mat_option_7_Template","setZoom","resetMap","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","map_view_r4","_r8","_LockerSelectModalComponent","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","bank_view_r9","_LockersService","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_ParkingSpaceDetailsComponent","ParkingSpaceDetailsComponent","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","_ParkingSpaceFiltersDisplayComponent","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r13","toggleFeature","ParkingSpaceFiltersComponent_section_40_div_3_Template","_r14","_ParkingSpaceFiltersComponent","_form","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_section_40_Template","ParkingSpaceFiltersComponent_div_42_Template","tmp_10_0","tmp_12_0","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","_ParkingSpaceListComponent","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","_ParkingSpaceLocationPinComponent","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","_ParkingSpaceSelectMapComponent","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","setCustomZone","MapsPeopleService","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","_ParkingSpaceSelectModalComponent","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","_ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","_CateringImportMenuModalComponent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","load_state_r3","keycodes_1","invalid","touched","auto_r3","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","chipList_r7","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","saveChanges","dirty","option_r9","_CateringItemModalComponent","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","order_r4","duplicateOrder","editOrder","removeOrder","optionList","removeOrderItem","CateringListFieldComponent_div_1_div_19_span_3_Template","CateringListFieldComponent_div_1_div_19_button_9_Template","currency_code","CateringListFieldComponent_div_1_div_8_Template","CateringListFieldComponent_div_1_button_12_Template","CateringListFieldComponent_div_1_button_13_Template","CateringListFieldComponent_div_1_button_14_Template","show_order","CateringListFieldComponent_div_1_div_19_Template","_CateringListFieldComponent","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","option","opt","cateringitem","CateringListFieldComponent_div_1_Template","row_r2","row","setEnabled","isEnabled","data_r4","symbol","row_r6","addOption","editItem","show_children","menu_r7","row_r10","editOption","removeOption","CateringMenuComponent_ng_template_7_div_0_button_7_Template","CateringMenuComponent_ng_template_7_div_0_button_8_Template","CateringMenuComponent_ng_template_7_div_0_Template","_CateringMenuComponent","CateringMenuComponent","_catering","_orders","menu","deleteOption","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringOrdersService","CateringMenuComponent_ng_template_1_Template","CateringMenuComponent_ng_template_3_Template","CateringMenuComponent_ng_template_5_Template","CateringMenuComponent_ng_template_7_Template","ɵɵpureFunction5","_c5","active_template_r12","_c2","_c3","price_template_r13","_c4","actions_template_r14","child_template_r15","auto_r2","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r4","_CateringItemOptionModalComponent","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","_CateringOrderItemComponent","CateringOrderItemComponent","_this$item","order_id","item_key","CateringOrderItemComponent_ng_container_0_Template","catering_vars_1","data_r1","CateringOrderListComponent_ng_template_6_span_2_Template","CateringOrderListComponent_ng_template_8_span_3_Template","data_r5","status_r7","row_r8","updateStatus","colour","CateringOrderListComponent_ng_template_10_button_8_Template","tmp_11_0","data_r9","menu_r10","statuses","row_r12","CateringOrderListComponent_ng_template_12_ng_template_4_Template","notes_template_r13","row_r15","item_r14","CateringOrderListComponent_ng_template_14_ul_0_li_1_Template","CateringOrderListComponent_ng_template_14_ul_0_Template","_CateringOrderListComponent","CateringOrderListComponent","CATERING_STATUSES","CateringOrderListComponent_ng_template_2_Template","CateringOrderListComponent_ng_template_4_Template","CateringOrderListComponent_ng_template_6_Template","CateringOrderListComponent_ng_template_8_Template","CateringOrderListComponent_ng_template_10_Template","CateringOrderListComponent_ng_template_12_Template","CateringOrderListComponent_ng_template_14_Template","ɵɵpureFunction8","_c8","state_template_r16","time_template_r17","location_template_r18","host_template_r19","_c6","status_template_r20","_c7","actions_template_r21","child_template_r22","utilities_1","item_r2","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r5","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","order_details_r6","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","order_actions_r9","optionsFor","item_r11","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","CateringOrderModalComponent_ng_template_4_div_4_Template","_CateringOrderModalComponent","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","load_state_r12","tag_r3","opt_r6","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r5","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r8","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","multi_options_r9","CateringItemDetailsComponent_ng_container_0_p_14_Template","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","_CateringItemDetailsComponent","CateringItemDetailsComponent","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","empty_state_r10","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","_CateringItemFiltersComponent","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","_CateringItemListItemComponent","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","placeholder_r3","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","empty_state_r6","_CateringItemListComponent","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","load_state_r7","_CateringOrderStateService","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_NewCateringOrderModalComponent","_order","NewCateringOrderModalComponent_button_14_Template","opt_r4","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r2","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","multi_options_r7","_CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","events_fn_1","_CateringOrdersService","_ref2$","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_CateringStateService","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","_new_item$options","_SharedCateringModule","i_r2","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","_ChargeCodeListModalComponent","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","checkForUpdate","activateUpdate","hasNewVersion","setInterval","clearCacheCheck","_AsyncHandler","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","locations","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","mapspeople_service_1","PLACEOS_APP_ACCESS","_FeatureAvailableGuard","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","slice","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","_arrMatches$","headers","_row$i","loadTextFileFromInputEvent","reject","jsonToCsv","seperator","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","degreesToRadians","degrees","PI","hexToRgb","hex","parseInt","interpolateColors","rgb1","rgb2","fraction","round","rgbToHex","componentToHex","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","calculateDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","shiftColorTowards","hex1","hex2","resultRgb","_GoogleAnalyticsService","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","_HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_KeepAliveService","KeepAliveService","_system_id","_delay","_bindTo","GoogleMaps","Mapbox","_MapsPeopleService","_map_service","_map_token","_ready","_injected","_custom_zone","available$","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","_RemoteLoggingService","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","mergeRoomConfig","settings_1","user_state_1","_SettingsService","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","ENDPOINT","queryShortURLs","showShortURL","QR_STORE","_getShortUrlQRCode","response","cookie","apiKey","fetch","URL","createObjectURL","createShortURL","updateShortURL","getShortUrlQRCode","saveShortURL","patchShortURL","deleteShortURL","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","uploads_1","upload_permissions_modal_component_1","_UploadsService","UploadsService","_upload_list","upload_list","in_progress_list","progress","UploadPermissionsModalComponent","uploadFile","is_public","permissions","pub","resolved","update_fn","_updateUploadHistory","done_list","upload","cloud_uploads_1","blobUtil","Observable","observer","arrayBufferToBlob","uploadFiles","file_name","public","upload_details","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","_UserIdleTimeService","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","distance","suffix","semverString","version","_VorlonService","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","_AccessibilityTooltipComponent","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","_ActionIconComponent","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r8","rule_r7","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r9","set_r4","rule_types","show_rules","i_r5","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","_AttachedResourceConfigModalComponent","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","_AuthenticatedImageDirective","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","authority","nativeElement","ElementRef","_AuthorisedAdminGuard","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_AuthorisedUserGuard","_access","_this$_access","space_utilities_1","space_r5","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","_AvailableRoomsStateModalComponent","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","_BindingDirective","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r2","_BuildingSelectComponent","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","_BuildingPipe","BuildingPipe","marked_1","changelog","_ChangelogModalComponent","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","empty_state_r2","hint","message_r5","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","ChatComponent_div_0_div_4_Template","show","_ChatComponent","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_ChatService","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","map_renderer_component_1","maps_indoors_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","_ComponentsModule","useValue","UserAvatarComponent","NgIf","SafePipe","InteractiveMapComponent","MatRipple","MatTooltip","IconComponent","MapRendererComponent","MapsIndoorsComponent","AsyncPipe","MatDialogClose","MatProgressSpinner","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","DatePipe","SanitizePipe","UserControlsComponent","i9","MatSlider","MatSliderThumb","TranslatePipe","onConfirm","_ConfirmModalComponent","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r3","display_column","column_r2","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r7","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","cell_outlet_r8","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","index_outlet_r9","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r11","row_clicked","empty","_CustomTableComponent","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_CustomTooltipData","_CustomTooltipComponent","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","_DateFromPipe","DateFromPipe","direction","json_display_component_1","obj_r3","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r4","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_DebugConsoleComponent","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","_DurationPipe","DurationPipe","shorten","_FixedPipe","FixedPipe","_GlobalBannerComponent","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","_GlobalLoadingComponent","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","_HelpTooltipComponent","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","_IconComponent","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r1","ImageCarouselComponent_div_1_img_1_Template","ImageCarouselComponent_div_5_button_1_Template","_ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","_ImageViewerComponent","ImageViewerComponent","geolocation_error_message","getRoute","search_result_items","properties","roomId","floorName","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","_IndoorMapsComponent","IndoorMapsComponent","_api_service","default_zoom","live_data_status","selected_destination","actions_hashmap","user_latitude","user_longitude","route_error_message","_setLocationToBuilding","floor_mapping","get_location","custom_coordinates","_getUserLocation","_initMapView","_ngOnChanges","_mapsindoors","searchParams","renderSpaceStatus","mapActions","searchElement","services","LocationsService","getLocations","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","lvl_map","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_mapsindoors2","getZoom","_getUserLocation2","geolocation","watchPosition","_updateGeolocation","_handleGeolocationError","getCurrentPosition","_userWithinRadius","coords","setCenter","enableHighAccuracy","d_lat","d_long","radius","lat_str","long_str","_this$_org$building2","_this$_org$building3","_this$_org$building4","_this$_org$building5","_this$_org$building$l","_this$_org$building$l2","long","updated_location","_updated_location$coo","_getRoute","_this$maps_service6","_this$directions_rend","destination","routeParameters","highlight","anchor","setFloor","_e$message","TypeError","origin_error","setRoute","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this$actions","accumulator","currentValue","_this$maps_service7","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_div_1_Template","IndoorMapsComponent_div_2_Template","onSearch","IndoorMapsComponent_ng_container_11_Template","zoomChange","mapInfo","labels","onLevelChange","InjectionToken","_InteractiveMapComponent","_mapspeople","_explore","centerChange","use_mapsindoors$","InteractiveMapComponent_ng_container_0_Template","InteractiveMapComponent_ng_template_2_Template","InteractiveMapComponent_div_4_Template","mapsindoors_template_r5","_JsonDisplayComponent","_updateFormatting","formatted_json","lang_r2","setLocale","flag","_LanguageSelectComponent","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","_LevelPipe","LevelPipe","ALLOWED_NUMBERS","ALLOWED_DECIMALS","ALLOWED_LETTERS","ALLOWED_ALPHANUMERIC","_LimitInputDirective","LimitInputDirective","_el","restriction","custom_list","ctrlKey","metaKey","hostBindings","onKeyDown","logo","toPassword","login","username_r3","_LoginComponent","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","loading_state_r5","_MapCanvasComponent","MapCanvasComponent","ratio","svg_ratio","ratio$","zoom$","svg_ratio$","_handleMapChange","polygons$","_handleStateChange","_handleMapChange2","old_ratio","canvas_element","polygon_list","poly","_drawPolygon","polygon","points","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","draw_points","arc","draw_labels","acc","textAlign","textBaseline","font","fillText","_MapLocateModalComponent","_this$item$level","track_id","MapLocateModalComponent_div_6_Template","_MapPinComponent","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","_MapPolygonComponent","MapPolygonComponent","_cdr","padding","svg_scale","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","last_seen","updateRadius","ɵɵresolveWindow","MapRadiusComponent_ng_container_0_div_2_Template","_MapRadiusComponent","MapRadiusComponent","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MapRendererComponent_ng_container_2_mat_spinner_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r3","injectors","i_r4","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_4_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_Template","MapRendererComponent_div_3_ng_container_1_div_1_Template","MapRendererComponent_div_3_ng_container_1_Template","_MapRendererComponent","_on_changes","_extra_data","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$src","_this$_outlet_el","_this$_outlet_el3","simp_url","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","MapRendererComponent_ng_container_2_Template","MapRendererComponent_div_3_Template","MapRendererComponent_ng_template_4_Template","toggleDirections","MapsIndoorsComponent_button_2_mat_spinner_5_Template","viewing_directions","loading_directions","DEFAULT_ZOOM","RESOURCE_MAP","_MapsIndoorsComponent","zoneChange","show_directions","ignore_zoom","_floor_list","_added_floor_selector","hasOwnProperty","_initialiseServices","_this$_services","_this$_services2","is_initialised","_centerOnZone","_focusOnLocation","_updateMapStyling","_services","_addFloorSelector","_split","_split2","_container","maps_indoors","_handleBuildingChange","_handleLevelChange","_handleZoomChange","_handleUserClick","dispatchEvent","Event","_toggleDirections","_item$properties","d_lng","travelMode","externalId","floors","_setFloorFromZone","defaultFloor","_handleLevelChange2","new_level","_event$properties","_event$properties2","_this$metadata","ignore_actions","_search2","_updateMapStyling2","_this$metadata2","id_simple","_$properties","_$properties2","_setResource","extrusionHeight","extrusionVisible","_focusOnLocation2","_item$properties2","_item$properties3","_$properties3","_this9","_bld$location$split","_bld$location$split2","MapsIndoorsComponent_button_2_Template","padLength","_MediaDurationPipe","MediaDurationPipe","_MisconfiguredComponent","MisconfiguredComponent","_PopoutMenuComponent","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","_PrintableComponent","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","_RedirectComponent","RedirectComponent","_RegionSelectComponent","RegionSelectComponent","RegionSelectComponent_mat_radio_button_12_Template","_SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","_SanitizePipe","sanitize","selectAll","checked","data_view$","column_r4","setSort","SimpleTableComponent_button_2_app_icon_3_Template","selectable","sortable","active_columns","i_r7","active_row","column_r9","SimpleTableComponent_ng_container_3_div_2_div_3_span_2_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_ng_container_1_Template","tmp_8_0","SimpleTableComponent_ng_container_3_div_2_div_3_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_Template","j_r12","columnType","SimpleTableComponent_ng_container_3_div_3_ng_container_1_Template","child_template","ɵɵpureFunction4","SimpleTableComponent_ng_container_3_div_1_Template","SimpleTableComponent_ng_container_3_div_2_Template","SimpleTableComponent_ng_container_3_div_3_Template","empty_message","_r13","setPage","total_pages","total_count","_SimpleTableComponent","SimpleTableComponent","rowClicked","_data$","_filter$","_sort$","a_value","b_value","column","_selectAll","SimpleTableComponent_div_1_Template","SimpleTableComponent_button_2_Template","SimpleTableComponent_ng_container_3_Template","SimpleTableComponent_div_6_Template","SimpleTableComponent_div_8_Template","column_template","link_r1","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","error_msg_r3","links","_StatusOverlayComponent","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","load_state_r4","_StatusPillComponent","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","_ThumbnailPipe","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","_UnauthorisedComponent","_UploadPermissionsModalComponent","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","image_state_r2","_UserAvatarComponent","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","building_select","help_tooltip","openWfhModal","desk_height_tooltip_r4","desk_sitting_height","saveSetting","desk_standing_height","language_tooltip","newSupportTicket","reloadPage","_UserControlsComponent","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_ng_template_23_Template","UserControlsComponent_div_25_Template","UserControlsComponent_button_26_Template","UserControlsComponent_button_31_Template","disable_building_select","desk_height","has_new_version","focusInput","key_r3","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r4","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","_VirtualKeyboardComponent","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_7_div_5_Template","_AttendeeListComponent","AttendeeListComponent","hide_close","custom_title","AttendeeListComponent_button_2_Template","AttendeeListComponent_div_5_Template","AttendeeListComponent_div_7_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","_EventCardComponent","EventCardComponent","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","menu_r4","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r7","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r6","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","request_r9","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","no_edit_message","act_r15","EMPTY_ACTIONS","_EventDetailsModalComponent","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_ng_container_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","_EventFormService","generateEventForm","_zone_ids","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","_this$last_success","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","_this$_org$building6","differenceInDays","previous","_this$_event$getValue","_newForm","_event$linked_booking","master","showEvent","_pattern","resetForm","_event$linked_booking2","_event$extension_data","catering_charge_code","_this$_event$getValue2","form_data","_event$linked_booking3","EventLinkModalComponent","_this7$event","_spaces$","_this7$event2","_this7$event3","_this7$event4","_value$organiser","_value$organiser2","_ref22","_event$extension_data2","_value","changed_times","changed_spaces","is_owner","breakdown","overflow","processed_assets","creating_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_spaces$6","_this7$_org$building","recurring","checkSelectedSpacesAreAvailable","is_external","calendar","catering_notes","setup_time","breakdown_time","toJSON","old_system","visit_expected","host_override","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","_EventLinkModalComponent","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","_valid_asset_cache","_valid_cache_expiry","event_start","event_end","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","linked_assets","_$extension_data","_this$recurrence","_this$system","parseRecurrence","all_day_date","calendar_fn_1","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","isSpaceAvailable","system_ids","ignore_period","short_list","_s$resource","inUseAt","attendee_list_component_1","event_card_component_1","_SharedEventsModule","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","_SetupBreakdownModalComponent","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data3","_event$extension_data4","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get3","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","_ExploreBookQrComponent","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","_ExploreBookingModalComponent","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","_ExploreDeskInfoComponent","tries","_this$_element$native","parentElement","left","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","_ExploreDesksService","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","can_book","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_ExploreDeviceInfoComponent","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","device_tooltip_r4","explore_locker_bank_modal_component_1","in_use_count","_ExploreLockerBankInfoComponent","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3","_ExploreLockerBankModalComponent","_ExploreLockersService","ExploreLockersService","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r5","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","_ExploreMapControlComponent","ExploreMapControlComponent","_lvl$tags","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r3","ExploreMapViewComponent_div_8_div_3_Template","_ExploreMapViewComponent","ExploreMapViewComponent","_s","_desks","_zones","_parking","_maps","map_styles","positions","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","_ExploreParkingService","existing_event","week_events","active_spaces","_events$find","assigned","week_availablility","day_events","_updateParkingSpaces","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r2","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","results","_ExploreSearchComponent","ExploreSearchComponent","search_str","right_size","search_results","setFilter","checkClick","_this$_el","_this$_input_el","checkButtonPosition","_this$_input_el2","_this$_input_el3","window_width","innerWidth","button_rect","_button_el","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","auto_r5","origin_r4","staff_fn_1","organisation_1","_ExploreSearchService","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_maps_people_search","_$properties4","_$properties5","_$properties6","_$properties7","_points_of_interest","points_of_interest","poi","roled_contacts","mapspeople_items","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","_ExploreSensorInfoComponent","ExploreSensorInfoComponent","ExploreSensorInfoComponent_ng_template_3_Template","stats_r2","feature_r3","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","_ExploreSpaceInfoComponent","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","space_tooltip_r4","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_ExploreSpacesService","_panning","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateStatus2","_arr","_i2","_arr2","_ExploreStateService","_positions","_styles","_actions","_labels","_message","_options$disable_feat","_options$disable2","disable_features","_options$disable3","_options$disable_acti","disable_actions","_options$disable4","_options$disable_labe","disable_labels","_options$disable6","style_mappings","_options$disable5","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","explore_sensor_info_component_1","map_canvas_component_1","getCenterPoint","_ExploreZonesService","_area_list","_count_key","_location","_label_location","_capacity","_draw","_points","_polygons$","bind_areas","bind_zone","parseData","zone_metadata","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","area_id","filled","temperature","people_count","people_count_sum","queue_size","polygons","_ExploreZoomControlComponent","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","_SharedExploreModule","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","_SetDatetimeModalComponent","SetDatetimeModalComponent_main_6_Template","_ActionFieldComponent","ActionFieldComponent","show_tooltip","performAction","zone_r1","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r3","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r4","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r7","time_r8","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","_BookingRulesFormComponent","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","render_fn","_CounterComponent","CounterComponent","step","focused","ctrl_key","shift_key","CounterComponent_span_5_Template","day_r1","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","_DateCalendarComponent","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","_DateFieldComponent","DateFieldComponent","from_date","short","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","calendar_picker_r3","has_error","weekday_r1","selectDate","setHoveredDate","DateRangeCalendarComponent_button_14_div_1_Template","DateRangeCalendarComponent_button_14_div_2_Template","DateRangeCalendarComponent_button_14_div_3_Template","DateRangeCalendarComponent_button_14_div_4_Template","DateRangeCalendarComponent_button_14_div_8_Template","is_start","is_end","is_selected","end_after_start","_DateRangeCalendarComponent","DateRangeCalendarComponent","startChange","endChange","hovered_date","weekdays","month_days","_setWeekdays","_setMonthDays","previousMonth","nextMonth","DateRangeCalendarComponent_div_13_Template","DateRangeCalendarComponent_button_14_Template","setStartDate","setEndDate","start_date","_DateRangeFieldComponent","DateRangeFieldComponent","contentQueries","dirIndex","DateRangeFieldComponent_ng_template_14_Template","DurationFieldComponent_mat_option_4_ng_container_1_Template","_DurationFieldComponent","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_list_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","place_user_pipe_1","date_range_field_component_1","date_range_calendar_component_1","_FormFieldsModule","UserListFieldComponent","MatFormField","MatSuffix","MatOption","MatAutocomplete","MatAutocompleteTrigger","MatAutocompleteOrigin","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","PlaceUserPipe","UserSearchFieldComponent","MatPrefix","MatInput","SpaceListFieldComponent","i13","MatRadioGroup","MatRadioButton","i14","ImageListFieldComponent","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r1","_HostSelectFieldComponent","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","image_viewer_component_1","url_r3","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_div_10_mat_progress_spinner_1_Template","ImageListFieldComponent_div_10_app_icon_2_Template","ImageListFieldComponent_div_10_div_3_Template","view_space","_ImageListFieldComponent","_clipboard","_uploads","upload_ids","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","resume","_uploadImages","uploadFileWithPermissions","_file_input","uploadImages","_updateUploadHistory2","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_div_10_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_button_13_Template","ImageListFieldComponent_mat_chip_row_17_Template","addImage","chipList_r11","item_r3","addChipItem","removeChipItem","_ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","chipList_r5","USER_LIST","_PlaceUserPipe","formatted_value","_RecurrenceFieldComponent","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","_RecurrenceModalComponent","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","_RichTextInputComponent","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","_SpaceListFieldComponent","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_5","SpaceListFieldComponent_div_15_Template","bld_r1","type_r2","SupportTicketModalComponent_main_6_div_26_mat_option_5_Template","support_request_types","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_div_26_Template","SupportTicketModalComponent_main_6_mat_error_32_Template","SupportTicketModalComponent_main_6_div_33_Template","desc_error","allow_images","_SupportTicketModalComponent","issue_type","_submit","_this$support_request","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","extra_info_fn","_TimeFieldComponent","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","_UploadFileFieldComponent","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","_UploadListFieldComponent","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","location_name_time","location_icon","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r7","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","ACCEPTED_FILE_TYPES","DENIED_FILE_TYPES","_UserListFieldComponent","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","auto_r10","chipList_r9","search_valid_email","blurInput","stopPropagation","empty_fn","_UserSearchFieldComponent","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_5_Template","UserSearchFieldComponent_mat_option_8_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","auto_r7","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","_$route_params","_$route_params2","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","yaml","_OrganisationService","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","_updateSettingOverrides","_this$building","_this$buildings$","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","bld_list","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","driver_settings","querySettings","encryption_level","EncryptionLevel","None","settings_string","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","_this5$region","_iterator5","_step6","_iterator6","_this6$building","_this6$region","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","item_r4","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","_CardInputFieldComponent","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","success_state_r3","transaction_id","_PaymentModalComponent","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","_PaymentsModule","STRIPE_MODULE","_PaymentsService","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","_NewSpaceSelectModalComponent","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","_SpaceDetailsComponent","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r4","_SpaceFiltersDisplayComponent","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_2_Template","SpaceFiltersComponent_mat_form_field_15_mat_option_5_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_Template","SpaceFiltersComponent_div_28_div_6_Template","SpaceFiltersComponent_div_28_div_7_Template","feat_r14","feature_display","SpaceFiltersComponent_section_31_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_31_ng_container_3_Template","_SpaceFiltersComponent","using_mapspeople","viewing_map","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_form_field_15_Template","SpaceFiltersComponent_mat_form_field_17_Template","SpaceFiltersComponent_div_26_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_29_Template","SpaceFiltersComponent_section_31_Template","SpaceFiltersComponent_div_34_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","space_placeholder_r4","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","_SpaceListComponent","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","_SpaceLocationPinComponent","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_div_2_Template","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_Template","_SpaceSelectMapComponent","SpaceSelectMapComponent","free_spaces","_split$map","_split$map2","SpaceSelectMapComponent_mat_form_field_1_Template","support_url","configurations","SPACE_LIST","ATTEMPT_COUNT","EMPTY_SPACE","updateSpaceList","_SpacePipe","_this$_org2","is_email","_this$_org","_this$_org3","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","_SharedSpacesModule","SPACE_PIPE","_SpacesService","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","hour_r2","user_r5","offset_y","_FindAvailabilityModalComponent","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","_UserAvailabilityComponent","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","_NewUserModalComponent","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","_UserFormComponent","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","work_preferences","work_overrides","location_time","datetime","_this$work_overrides$","_this$work_preference","date_string","in_hours","in_hours_time","pref","_UserPipe","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","_SharedUsersModule","type_r5","idx_r4","start_times","end_times","WFHSettingsModalComponent_div_0_div_31_mat_option_8_Template","WFHSettingsModalComponent_div_0_span_24_Template","WFHSettingsModalComponent_div_0_div_31_Template","option_name","available_weekdays","_WFHSettingsModalComponent","_this$options$find","_this$settings","_initWeekdays","_saveChanges","dow","updateUser","setDay","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template","load_state_r9"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/group-event-card.component.ts","./libs/bookings/src/lib/group-event-details-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/shorten.fn.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/image-viewer.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/limit-input.directive.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-canvas.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/map-renderer.component.ts","./libs/components/src/lib/maps-indoors.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/simple-table.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/date-range-calendar.component.ts","./libs/form-fields/src/lib/date-range-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport { invalidateToken, isMock, setToken, token } from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({ declarations: [\n        AppComponent,\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    bootstrap: [AppComponent], imports: [BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        })], providers: [SpacePipe, provideHttpClient(withInterceptorsFromDi())] })\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <interactive-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </interactive-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <interactive-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </interactive-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMilliseconds,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: [\n            'event',\n            'desk',\n            'parking',\n            'visitor',\n            'locker',\n            'group-event',\n        ],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        )) &&\n                    !_.linked_bookings?.find(\n                        (b) => b.booking_type === 'group-event'\n                    )\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of group event bookings for the selected date */\n    public readonly group_events: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'group-event',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n        this.group_events,\n    ]).pipe(\n        map(([e, v, d, p, l, ge]) => {\n            const filtered_events = e.filter(\n                (ev) =>\n                    !d.find((bkn) => `${ev.meeting_id}` === `${bkn.id}`) &&\n                    ev.linked_bookings[0]?.booking_type !== 'group-event'\n            );\n            return [...filtered_events, ...v, ...d, ...p, ...l, ...ge].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                const time_before = Math.min(60, auto_release.time_before || 0);\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) + time_before\n                            )\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) + time_before;\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0\n                            ),\n                            Date.now()\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0\n                        );\n                        const close_after = differenceInMilliseconds(\n                            time.getTime() + 60 * 1000,\n                            Date.now()\n                        );\n                        const wording =\n                            type === 'parking' ? 'reservation' : 'booking';\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} ${wording}`,\n                                content: `You have indicated you are not in the office. \n                                Your  ${wording} for \"<i>${\n                                    booking.asset_name || booking.title\n                                }</i>\" at ${format(\n                                    booking.date,\n                                    this._settings.time_format\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format\n                                )}.<br/><br/>\n                                Do you wish to keep this ${wording}?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                                close_delay: close_after,\n                            },\n                            this._dialog\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        })\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip(request)\"\n                                *ngIf=\"\n                                    end_time <= request.deliver_at ||\n                                    rejected_ids.includes(request.id) ||\n                                    request.conflict\n                                \"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    @Input() public rejected_ids: string[] = [];\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip(request: AssetRequest) {\n        return this.rejected_ids.includes(request.id) || request.conflict\n            ? 'Some of the items are not available for the selected date and time.'\n            : 'Delivery time is outside of the event time.\\nThis order will be ignored.';\n    }\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        console.log('Requests:', value);\n        this.asset_requests = (value || []).map(\n            (_) =>\n                new AssetRequest({\n                    ..._,\n                    event: this.options as any,\n                    state: _.state,\n                })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const order_list = this.asset_requests.filter((_) => _.id !== order.id);\n        const requested: Record<string, number> = {};\n        for (const order of order_list) {\n            for (const item of order.items) {\n                requested[item.id] =\n                    (requested[item.id] || 0) + item?.quantity || 0;\n            }\n        }\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n                requested,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    const list = [];\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_) => {\n                            let id = '';\n                            let count = 0;\n                            while (\n                                (!id || list.includes(id)) &&\n                                count < (item as any).assets.length\n                            ) {\n                                id = (item as any).assets[\n                                    randomInt((item as any).assets.length)\n                                ].id;\n                            }\n                            list.push(id);\n                            return id;\n                        });\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                conflict: false,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity\n                    ),\n                items: items.map((_) => ({ ..._ })),\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            for (const item of new_order.items) {\n                const total = orders.reduce(\n                    (t, c) =>\n                        (t +=\n                            c.items.find((_) => _.id === item.id)?.quantity ||\n                            0),\n                    0\n                );\n                if (total + item.quantity > (item as any).assets.length) {\n                    notifyError(\n                        `Not enough assets available to meet request [${item.name}].\n                        Another request for this asset has been made in this meeting.`,\n                        undefined,\n                        undefined,\n                        { duration: 5000 }\n                    );\n                    return;\n                }\n            }\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public readonly ref_id: string;\n    public readonly state: string;\n    public conflict = false;\n    public _changed = false;\n    public _booking: Booking | null;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        const booking = this.event?.linked_bookings?.find(\n            (_) => _.extension_data.request_id === this.id\n        );\n        this._booking = booking || data.booking || null;\n        this._changed = !!data._changed || !booking;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n        this.conflict = !!data.conflict;\n        this.ref_id = `${this.deliver_at_time}|${this.items\n            .map((_) => `${_.id}:${_.quantity}`)\n            .join('|')}`;\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>\n                            {{\n                                (item.available != null\n                                    ? item.available\n                                    : item.assets?.length) || 0\n                            }}\n                            Available\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"\n                            (item.available != null\n                                ? item.available\n                                : item.assets?.length) || 1\n                        \"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset - 1\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{\n                                            asset.available ||\n                                                asset.assets?.length ||\n                                                '0'\n                                        }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Input() public requested: Record<string, number> = {};\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    private _requested_items = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n        this._requested_items,\n    ]).pipe(\n        map(([counts, assets, requested]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n                if (requested[item.id] !== undefined) {\n                    (item as any).available = Math.max(\n                        (item.assets?.length || 0) - requested[item.id],\n                        0\n                    );\n                }\n            }\n            return assets.filter(\n                (_: any) =>\n                    (_.available != null && _.available > 0) ||\n                    (_.available == null && _.assets?.length > 0)\n            );\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n        if (changes.requested) {\n            this._requested_items.next(this.requested);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        [requested]=\"requested\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public requested = this._data.requested;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n            requested: Record<string, number>;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, unique } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets } as AssetGroup))\n                    )\n                )\n            )\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        })\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            bookings = bookings.filter(\n                (_) => _.status !== 'declined' && _.status !== 'cancelled'\n            );\n            return products.map((product) => ({\n                ...product,\n                assets: product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                !ignore.includes(booking.id) &&\n                                (booking.asset_id === asset.id ||\n                                    booking.asset_ids?.includes(asset.id))\n                        )\n                ),\n            }));\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport function differenceBetweenAssetRequests(\n    new_assets: AssetRequest[],\n    old_assets: AssetRequest[],\n    reset_state: boolean = false\n): string[] {\n    if ((!new_assets || new_assets?.length <= 0) && old_assets?.length)\n        return [];\n    if (!old_assets) return [];\n    const changed: string[] = [];\n    for (const request of new_assets) {\n        const match = old_assets.find((_) => _.id === request.id);\n        if (!match || match.ref_id !== request.ref_id) {\n            changed.push(request.id);\n        }\n    }\n    return changed;\n}\n\nexport async function validateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[] = [],\n    force_create = false\n): Promise<() => Promise<void>> {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration)\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings =\n        id && ical_uid\n            ? await queryBookings({\n                  period_start: getUnixTime(startOfDay(date)),\n                  period_end: getUnixTime(endOfDay(date)),\n                  type: 'asset-request',\n                  email: host,\n                  event_id: from_booking ? '' : id,\n                  booking_id: from_booking ? id : '',\n                  ical_uid,\n              }).toPromise()\n            : [];\n    const booking_list: [string, AssetRequest][] = bookings.map((_) => [\n        _.id,\n        new AssetRequest(_.extension_data.request),\n    ]);\n    new_assets?.forEach((_) => (_.conflict = false));\n    let changed = force_create\n        ? new_assets.map((_) => _.id)\n        : differenceBetweenAssetRequests(\n              new_assets,\n              booking_list.map(([_, r]) => r),\n              reset_state\n          );\n    if (reset_state) {\n        const has_state = bookings.filter((_) => _.approved || _.rejected);\n        changed = unique([\n            ...changed,\n            ...has_state.map((_) => _.extension_data.request_id),\n        ]);\n    }\n    const unchanged = booking_list.filter(\n        ([_, request]) => !changed.includes(request.id)\n    );\n    const changed_requests = booking_list.filter(([_, { id }]) =>\n        changed.includes(id)\n    );\n    const changed_assets = new_assets.filter(({ id }) => changed.includes(id));\n    const filtered = requests.filter(\n        (req) =>\n            !req.rejected &&\n            (!bookings.find((b) => b.id === req.id) ||\n                unchanged.find(([id]) => req.event_id === id))\n    );\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    for (const [_, request] of unchanged) {\n        used_ids = [\n            ...used_ids,\n            ...flatten(request.items.map((_) => _.item_ids)),\n        ];\n    }\n    const available_groups = await queryGroupAvailability(\n        {\n            period_start: getUnixTime(all_day ? startOfDay(date) : date),\n            period_end: getUnixTime(\n                all_day\n                    ? endOfDay(addMinutes(date, duration))\n                    : addMinutes(date, duration)\n            ),\n            type: 'asset-request',\n        },\n        bookings.map((_) => _.id)\n    ).toPromise();\n    console.log('Used IDs:', used_ids);\n    console.log('Changed Assets:', changed_assets);\n    console.log('Requests:', requests);\n    console.log('Bookings:', bookings);\n    console.log('Filtered:', filtered);\n    console.log('Unchanged:', unchanged);\n    console.log('Available Groups:', available_groups);\n    const processed_requests = changed_assets.map((request) => {\n        // Handle duplicate asset ids\n        let asset_ids = flatten(\n            (request.items as any).map(({ id, item_ids, quantity }) => {\n                const assets = available_groups.find(\n                    (_) => _.id === id\n                )?.assets;\n                if (!assets) return item_ids;\n                const list = [];\n                return new Array(quantity).fill(0).map((_, idx) => {\n                    const item =\n                        used_ids.includes(item_ids[idx]) ||\n                        list.includes(item_ids[idx]) ||\n                        !item_ids[idx]\n                            ? assets?.find(({ id }) => {\n                                  return (\n                                      !used_ids.includes(id) &&\n                                      !list.includes(id)\n                                  );\n                              })?.id\n                            : item_ids[idx];\n                    if (!item) {\n                        request.conflict = true;\n                        throw 'Unable to find available asset for request';\n                    }\n                    list.push(item);\n                    return item;\n                });\n            })\n        );\n        // Grab any existing bookings for the asset for the parent event/booking\n        const booking = bookings.find((_) =>\n            _.asset_ids.find((id) =>\n                request.items?.find((i) => i.item_ids.includes(id))\n            )\n        );\n        used_ids = [...used_ids, ...asset_ids];\n        return createBooking(\n            new Booking({\n                type: 'asset-request',\n                booking_type: 'asset-request',\n                date,\n                duration,\n                all_day,\n                description: location_name,\n                user_email: host,\n                asset_id: asset_ids[0],\n                asset_ids,\n                asset_name: request.items.map((_) => _.name).join(', '),\n                title: request.items.map((_) => _.name).join(', '),\n                approved:\n                    !reset_state && booking?.approved && !request._changed,\n                rejected:\n                    !reset_state && booking?.rejected && !request._changed,\n                extension_data: {\n                    parent_id: id,\n                    request_id: request.id,\n                    location_id,\n                    request: new AssetRequest({ ...request, event: null }),\n                },\n                zones: zones || [],\n            }),\n            { ical_uid, event_id: from_booking ? '' : id }\n        );\n    });\n    return async () => {\n        await Promise.all(\n            changed_requests.map(([id]) => removeBooking(id).toPromise())\n        );\n        await Promise.all(processed_requests.map((r) => r.toPromise()));\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\nexport * from './lib/group-event-details-modal.component';\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{ raw_description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit()\n                )\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n                limit: 1000,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    []\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                ) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            event_id\n                ? { ical_uid: value.ical_uid, event_id: event_id }\n                : parent_id\n                ? { booking_id: parent_id }\n                : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'group-event'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n    guests?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** List of URLs for associated booking images */\n    public readonly images: string[];\n    /** List of user defined tags associated with the booking */\n    public readonly tags: string[];\n\n    public readonly permission: 'PRIVATE' | 'OPEN' | 'PUBLIC';\n    /** Default type */\n    public readonly access: boolean;\n    /** Whether asset has been inducted */\n    public readonly induction: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly process_state: string;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    private _b_valid_asset_cache = [];\n    private _b_valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._b_valid_cache_expiry > Date.now() &&\n            this._b_valid_asset_cache.length\n        ) {\n            return this._b_valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._b_valid_asset_cache = (this.extension_data.assets || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._b_valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._b_valid_asset_cache;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.permission = (data.permission || 'PRIVATE').toUpperCase() as any;\n        this.attendees = data.attendees || data.guests || data.members || [];\n        this.tags = data.tags || data.extension_data?.tags || [];\n        this.images = data.images || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        this.induction =\n            (data.induction ||\n                data.extension_data?.induction ||\n                data.process_state === 'inducted') ??\n            false;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0)\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf()\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.images = data.images || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        this.process_state = data.process_state || 'pending';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n        this.extension_data.tags = data.tags || [];\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.extension_data?.location || this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        event_id: new FormControl(booking.event_id || ''),\n        ical_uid: new FormControl(booking.extension_data.ical_uid || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        date_end: new FormControl(booking.date_end),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        featured: new FormControl(booking.extension_data?.featured || false),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        timezone: new FormControl(booking.timezone || ''),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n        location: new FormControl(booking.extension_data.location || ''),\n        attendance_type: new FormControl(\n            booking.extension_data.attendance_type || 'ANY'\n        ),\n        phone: new FormControl(booking.extension_data.phone || ''),\n        permission: new FormControl(booking.permission || 'PRIVATE'),\n        images: new FormControl(booking.images || []),\n        tags: new FormControl(booking.tags || []),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    return id ? updateBooking(id, data) : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\nexport function setBookingState(\n    id: string,\n    state: string,\n    utm_source?: string\n) {\n    const query = toQueryString({ state, utm_source });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_state${\n            query ? '?' + query : ''\n        }`,\n        {}\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * List the guests in a booking\n * @param id ID of the booking to reject\n */\nexport function queryBookingGuests(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/guests`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a guest in a booking\n * @param id ID of the booking to reject\n * @param guest_id ID of the guest to check in\n */\nexport function checkinBookingGuest(\n    id: string,\n    guest_id: string,\n    state: boolean = true\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(guest_id)}/check_in?state=${state}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function bookingAddGuest(id: string, guest: GuestUser) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/attendee`,\n        guest\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function bookingRemoveGuest(id: string, guest: GuestUser) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/attendee/${encodeURIComponent(guest.email)}`\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0]\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise())\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise();\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\">\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        placeholder=\"No selected preset\"\n                        [(ngModel)]=\"preset\"\n                        (ngModelChange)=\"setPreset($event)\"\n                    >\n                        <mat-option value=\"\">None</mat-option>\n                        <mat-option value=\"standing\">Standing</mat-option>\n                        <mat-option value=\"sitting\">Seated</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"height\"\n                            (ngModelChange)=\"updatePreset(height)\"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        this.height = sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public updatePreset(new_height: number) {\n        const sitting_height = this._settings.get('desk_sitting_height') || 71;\n        const standing_height =\n            this._settings.get('desk_standing_height') || 102;\n        if (new_height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (new_height === standing_height) {\n            this.preset = 'standing';\n        } else {\n            this.preset = null;\n        }\n    }\n\n    public setPreset(value: string) {\n        console.log('Set preset:', value);\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { GroupEventDetailsModalComponent } from '@placeos/bookings';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 min-h-28 w-full bg-base-200 overflow-hidden border-b border-base-200\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                    <p *ngIf=\"!raw_description.trim()\" class=\"opacity-30\">\n                        No description\n                    </p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div *ngIf=\"is_onsite && has_space\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div *ngIf=\"is_onsite && !has_space\" class=\"opacity-30\">\n                        Room to be confirmed\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full min-w-56 w-1/2 max-w-[20rem] bg-base-200 overflow-hidden border-r border-base-200\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30 text-left\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-3\">{{ raw_description }}</p>\n                            <p\n                                *ngIf=\"!raw_description.trim()\"\n                                class=\"opacity-30\"\n                            >\n                                No description\n                            </p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition: box-shadow 300ms, border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: any;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    public get is_onsite() {\n        return this.event?.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.event?.linked_event?.system_id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event?.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.event.linked_event?.system_id\n        );\n        this.raw_description = this.removeHtmlTags(this.event.description);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { booking: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    Booking,\n    bookingAddGuest,\n    bookingRemoveGuest,\n    checkinBookingGuest,\n} from '@placeos/bookings';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"booking.images?.length\"\n                    auth\n                    [source]=\"booking.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button\n                icon\n                mat-dialog-close\n                class=\"absolute top-1 right-1 overflow-hidden\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-30 z-0\"></div>\n                <app-icon class=\"z-10\">close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ booking.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"booking.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>Event by {{ booking.user_name }}</div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ booking.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ booking.date | date: time_format }} -\n                                {{\n                                    booking.date + booking.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ booking.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            [innerHTML]=\"booking.description | sanitize\"\n                        ></span>\n                        <span\n                            *ngIf=\"!booking.description.trim()\"\n                            class=\"opacity-30\"\n                        >\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                        <div class=\"border border-base-300 w-full\">\n                            <button\n                                matRipple\n                                class=\"relative w-full h-40 bg-base-200\"\n                                (click)=\"viewLocation()\"\n                            >\n                                <interactive-map\n                                    *ngIf=\"!showing_map\"\n                                    [src]=\"level?.map_id\"\n                                    [features]=\"features\"\n                                    [styles]=\"styles\"\n                                ></interactive-map>\n                            </button>\n                            <div class=\" p-4 space-y-2\">\n                                <div>\n                                    {{\n                                        (\n                                            booking.linked_event?.system_id\n                                            | space\n                                            | async\n                                        )?.display_name\n                                    }}\n                                    <span\n                                        *ngIf=\"\n                                            !(\n                                                booking.linked_event?.system_id\n                                                | space\n                                                | async\n                                            )?.display_name\n                                        \"\n                                        class=\"opacity-30\"\n                                    >\n                                        Remote Event\n                                    </span>\n                                </div>\n                                <div class=\"opacity-30 text-sm\">\n                                    <span *ngIf=\"building && level\">\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }},\n                                        {{ level?.display_name || level?.name }}\n                                    </span>\n                                    <span\n                                        *ngIf=\"!building || !level\"\n                                        class=\"opacity-30\"\n                                    >\n                                        No location set for this event\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [list]=\"booking.attendees\"\n                    [host]=\"booking.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public booking: Booking = this._data.booking;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.booking as any).featured ||\n            this.booking.extension_data?.featured\n        );\n    }\n\n    public get is_onsite() {\n        return this.booking.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.booking.linked_event?.system_id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.booking.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get attendance() {\n        return (\n            this.booking.attendees?.filter((_: any) => _.checked_in)?.length ||\n            0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.booking.linked_event?.system_id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.booking.attendees?.find((_) => _.email === user.email);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { booking: Booking; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.booking.linked_event?.system_id\n        );\n        const id = this.space?.map_id || this.booking.extension_data?.map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        this.level = this._org.levelWithID(this.booking.zones);\n        this.building =\n            this._org.buildings.find((_) =>\n                this.booking.zones.includes(_.id)\n            ) || this._org.building;\n        this.locate = this.booking.extension_data?.map_id || '';\n    }\n\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        console.log('User:', user, this.is_interested);\n        if (this.is_interested && user) {\n            await bookingRemoveGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = (\n                this.booking.attendees || []\n            ).filter((_: any) => _.email !== user.email);\n        } else {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinBookingGuest(\n            this.booking.id,\n            user.email,\n            !this.is_going\n        ).toPromise();\n        const guest = this.booking.attendees.find(\n            (_) => _.email === user.email\n        );\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <interactive-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></interactive-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            *ngIf=\"!disabled\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            for (const item of items) {\n                (item as any).options = [\n                    ...item.options.map((_) => ({ ..._ })),\n                ];\n                for (const option of item.options) {\n                    const opt = item.option_list.find(\n                        (_) => _.id === option.id\n                    );\n                    option.active = !!opt;\n                }\n            }\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\nimport { CateringItem } from './catering-item.class';\nimport { unique } from '@placeos/common';\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <simple-table\n            class=\"w-full min-w-[32rem] block text-sm\"\n            [data]=\"menu\"\n            [columns]=\"[\n                {\n                    key: 'active',\n                    name: ' ',\n                    content: active_template,\n                    size: '3.5rem',\n                    sortable: false\n                },\n                { key: 'name', name: 'Name' },\n                { key: 'category', name: 'Category' },\n                {\n                    key: 'unit_price',\n                    name: 'Price',\n                    content: price_template,\n                    size: '6rem'\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: actions_template,\n                    size: '6.5rem',\n                    sortable: false\n                }\n            ]\"\n            [filter]=\"filters?.search\"\n            [show_children]=\"show_children\"\n            [child_template]=\"child_template\"\n            [sortable]=\"true\"\n            empty_message=\"No Items in Menu\"\n        ></simple-table>\n        <ng-template #active_template let-row=\"row\">\n            <mat-checkbox\n                class=\"mx-auto\"\n                matTooltip=\"Allow Ordering Item for this zone\"\n                matTooltipPosition=\"right\"\n                [ngModel]=\"isEnabled(row)\"\n                (ngModelChange)=\"setEnabled(row, $event)\"\n            ></mat-checkbox>\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <div\n                class=\"px-2 py-1 font-mono text-xs flex items-center mx-auto bg-secondary text-secondary-content rounded\"\n            >\n                {{ data / 100 | currency: (symbol | async) }}\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <div class=\"p-2 flex items-center mx-auto space-x-2\">\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!can_edit\"\n                    [class.opacity-0]=\"!can_edit\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"addOption(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>add</app-icon>\n                            <div>Add Option</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"editItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>edit</app-icon>\n                            <div>Edit Item</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"removeItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <div>Remove Item</div>\n                        </div>\n                    </button>\n                </mat-menu>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!row.options?.length\"\n                    [matTooltip]=\"\n                        row.options?.length\n                            ? (show_children[row.id] ? 'Hide' : 'Show') +\n                              ' Menu Item Options'\n                            : ''\n                    \"\n                    (click)=\"show_children[row.id] = !show_children[row.id]\"\n                >\n                    <app-icon>\n                        {{\n                            show_children[row.id]\n                                ? 'keyboard_arrow_down'\n                                : 'chevron_right'\n                        }}\n                    </app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #child_template let-row=\"row\">\n            <div\n                class=\"flex p-2 items-center border-b border-solid border-base-200 relative space-x-2\"\n                *ngFor=\"let option of row.options\"\n            >\n                <div\n                    class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                ></div>\n                <div class=\"flex-1 pl-4 pr-2\">\n                    <div class=\"text\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.group }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Menu Item Option\"\n                    (click)=\"editOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"!mr-1\"\n                    matTooltip=\"Remove Menu Item Option\"\n                    (click)=\"removeOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon class=\"text-error\">delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    public show_children: Record<string, boolean> = {};\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n\n    public readonly addOption = (item) => this._catering.addOption(item);\n\n    public readonly editOption = (item, option) =>\n        this._catering.addOption(item, option);\n\n    public readonly removeOption = (item, option) =>\n        this._catering.deleteOption(item, option);\n\n    public readonly editItem = (item) => this._catering.addItem(item);\n\n    public readonly removeItem = (item) => this._catering.deleteItem(item);\n\n    public get filters() {\n        return this._orders.filters;\n    }\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(\n        private _catering: CateringStateService,\n        private _orders: CateringOrdersService\n    ) {}\n\n    public isEnabled(item: CateringItem) {\n        return !item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public setEnabled(item: CateringItem, state: boolean) {\n        let list = item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...item, hide_for_zones: list })\n        );\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-16 text-right h-14 relative\">\n                <div\n                    arm\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full -translate-x-px\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border-2 border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 items-center border-b border-base-200 border-solid py-4 space-x-4\"\n            >\n                <div class=\"\">\n                    <div\n                        class=\"p-1 rounded-full bg-base-300 w-10 h-10 flex items-center justify-center font-mono text-sm\"\n                    >\n                        {{ item?.amount || item?.quantity || 1 }}×\n                    </div>\n                </div>\n                <div class=\"flex-1\">{{ item?.name }}</div>\n                <div class=\"flex space-x-2 mr-2 px-4\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-warning-content rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div class=\"flex flex-col h-full w-full overflow-auto\">\n            <!-- <mat-progress-bar\n                [class.opacity-0]=\"!(loading | async)\"\n                class=\"w-full\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar> -->\n            <simple-table\n                class=\"min-w-[72rem] w-full block text-sm\"\n                [data]=\"order_list\"\n                [columns]=\"[\n                    {\n                        key: 'state',\n                        name: ' ',\n                        size: '4rem',\n                        sortable: false,\n                        content: state_template\n                    },\n                    {\n                        key: 'deliver_at',\n                        name: 'Time',\n                        content: time_template\n                    },\n                    {\n                        key: 'event',\n                        name: 'Location',\n                        content: location_template,\n                        sortable: false\n                    },\n                    {\n                        key: 'event',\n                        name: 'Host',\n                        content: host_template,\n                        sortable: false\n                    },\n                    { key: 'charge_code', name: 'Charge Code' },\n                    {\n                        key: 'invoice_number',\n                        name: 'Invoice No.',\n                        empty: 'No Invoice'\n                    },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '11rem'\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        size: '6.5rem',\n                        content: actions_template,\n                        sortable: false\n                    }\n                ]\"\n                [sortable]=\"true\"\n                [show_children]=\"show_children\"\n                [child_template]=\"child_template\"\n                empty_message=\"No Catering Orders\"\n            >\n            </simple-table>\n            <ng-template #state_template let-data=\"data\">\n                <div class=\"p-2\">\n                    <div\n                        class=\"rounded-full bg-base-200 p-2 text-2xl flex items-center justify-center\"\n                    >\n                        <app-icon>room_service</app-icon>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #time_template let-data=\"data\" let-row=\"row\">\n                <div class=\"p-4\">\n                    <div>Deliver at {{ data | date: time_format }}</div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ row?.event?.date | date: 'MMM d' }},\n                        {{ row?.event?.date | date: time_format }}\n                        -\n                        {{ row?.event?.date_end | date: 'MMM d' }},\n                        {{ row?.event?.date_end | date: time_format }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #location_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    {{ data?.space?.display_name || data?.space?.name || '' }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"\n                            !(data?.space?.display_name || data?.space?.name)\n                        \"\n                    >\n                        No Location\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #host_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <div>\n                        {{ data?.organiser?.name || data?.host || '' }}\n                        <span\n                            class=\"opacity-30\"\n                            *ngIf=\"!(data?.organiser?.name || data?.host)\"\n                        >\n                            Unknown Host\n                        </span>\n                    </div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ data?.organiser?.email || data?.host }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\" let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <button\n                        status\n                        matRipple\n                        class=\"rounded-3xl text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                        [style.background]=\"status(data)?.colour\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <div class=\"flex text-center capitalize mx-2\">\n                            {{ status(data)?.name }}\n                        </div>\n                        <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        *ngFor=\"let status of statuses\"\n                        class=\"flex items-center\"\n                        (click)=\"updateStatus(row, status.id)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"rounded-full h-4 w-4 mr-2\"\n                                [style.background-color]=\"status.colour\"\n                            ></div>\n                            <span class=\"mr-2 w-20\">{{ status.name }}</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #actions_template let-row=\"row\">\n                <div class=\"flex items-center space-x-2 p-2 mx-auto\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [hover]=\"true\"\n                        xPosition=\"end\"\n                        yPosition=\"top\"\n                        [content]=\"notes_template\"\n                        [disabled]=\"!row.notes\"\n                    >\n                        <app-icon>description</app-icon>\n                    </button>\n                    <ng-template #notes_template>\n                        <div\n                            class=\"p-2 rounded-lg bg-base-100 text-base-content max-w-[32rem] min-w-[8rem] shadow border border-base-200\"\n                        >\n                            <div class=\"mb-2\">Notes</div>\n                            <p class=\"text-sm px-4 py-2 bg-base-200 rounded\">\n                                {{ row.notes }}\n                            </p>\n                        </div>\n                    </ng-template>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"show_children[row.id] = !show_children[row.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_children[row.id]\n                                    ? 'keyboard_arrow_down'\n                                    : 'chevron_right'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template #child_template let-row=\"row\">\n                <ul\n                    *ngIf=\"row?.items.length\"\n                    class=\"list-none p-0 m-0 w-full relative z-0\"\n                >\n                    <li\n                        catering-order-item\n                        class=\"flex items-center\"\n                        *ngFor=\"let item of row.items; let i = index\"\n                        [order_id]=\"row?.id\"\n                        [item]=\"item\"\n                    ></li>\n                </ul>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent extends AsyncHandler {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    public readonly statuses = CATERING_STATUSES;\n    public readonly show_children: Record<string, boolean> = {};\n\n    public readonly updateStatus = async (order, s) => {\n        await this._orders.updateStatus(order, s);\n        this.timeout('status-change', () => ((order as any).status = s));\n    };\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public status(value: string) {\n        return CATERING_STATUSES.find((i) => i.id === value);\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) =>\n                    (d.details instanceof Array ? d.details : []).map(\n                        (_) => new CateringItem(_)\n                    )\n                ),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n        MatProgressSpinnerModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\nexport * from './lib/uploads.service';\nexport * from './lib/shorten.fn';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    if (!(ruleset_list instanceof Array)) return DEFAULT_RULES;\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { MapsPeopleService } from './mapspeople.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|')\n                    )\n                    .join(seperator)\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n\n// Calculate the distance between geographical cooridinates\nexport function calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n//////////////////////////////////////////\n//////   Colour Conversion Utils   ///////\n//////////////////////////////////////////\n\nexport function hexToRgb(hex: string): RGB {\n    let r = parseInt(hex.slice(1, 3), 16);\n    let g = parseInt(hex.slice(3, 5), 16);\n    let b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n}\n\nexport type RGB = [number, number, number];\n\nexport function interpolateColors(rgb1: RGB, rgb2: RGB, fraction: number): RGB {\n    let r = rgb1[0] + (rgb2[0] - rgb1[0]) * fraction;\n    let g = rgb1[1] + (rgb2[1] - rgb1[1]) * fraction;\n    let b = rgb1[2] + (rgb2[2] - rgb1[2]) * fraction;\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n    function componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function shiftColorTowards(\n    hex1: string,\n    hex2: string,\n    fraction: number\n) {\n    const rgb1 = hexToRgb(hex1);\n    const rgb2 = hexToRgb(hex2);\n    const resultRgb = interpolateColors(rgb1, rgb2, fraction);\n    return rgbToHex(resultRgb[0], resultRgb[1], resultRgb[2]);\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.35.0/mapsindoors-4.35.0.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import {\n    apiKey,\n    del,\n    get,\n    patch,\n    post,\n    put,\n    query,\n    token,\n} from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst ENDPOINT = '/api/engine/v2/short_url';\n\nexport interface ShortURL {\n    id: string;\n    name: string;\n    description: string;\n    uri: string;\n\n    user_id: string;\n    user_name: string;\n    user_email: string;\n\n    redirect_count: number;\n\n    enabled: boolean;\n    valid_from: number;\n    valid_to: number;\n\n    created_at: number;\n    updated_at: number;\n}\n\nexport function queryShortURLs(q: Record<string, any> = {}) {\n    return query<ShortURL>({\n        query_params: q,\n        fn: (item) => item as ShortURL,\n        endpoint: ENDPOINT,\n        path: '',\n    }).pipe(map((_) => _.data));\n}\n\nexport function showShortURL(id: string): Observable<ShortURL> {\n    return get(`${ENDPOINT}/${id}`).pipe(map((_) => _ as ShortURL));\n}\n\nconst QR_STORE = new Map<string, string>();\n\nexport async function getShortUrlQRCode(\n    id: string,\n    format: 'svg' | 'png' = 'svg'\n): Promise<string> {\n    const key = `${id}.${format}`;\n    if (QR_STORE.has(key)) return QR_STORE.get(key);\n    const tkn = token();\n    console.log('Token:', tkn);\n    document.cookie = `${\n        tkn === 'x-api-key'\n            ? 'api-key=' + encodeURIComponent(apiKey())\n            : 'bearer_token=' + encodeURIComponent(tkn)\n    };max-age=30;path=/api/engine/v2/short_url/;samesite=strict;${\n        location.protocol === 'https:' ? 'secure;' : ''\n    }`;\n    const response = await fetch(`${ENDPOINT}/${id}/qr_code.${format}`);\n    const blob = await response.blob();\n    const url = URL.createObjectURL(blob);\n    QR_STORE.set(key, url);\n    return url;\n}\n\nexport function createShortURL(data: ShortURL): Observable<ShortURL> {\n    return post(ENDPOINT, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function updateShortURL(\n    id: string,\n    data: ShortURL\n): Observable<ShortURL> {\n    return put(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function saveShortURL(data: ShortURL): Observable<ShortURL> {\n    return data.id ? updateShortURL(data.id, data) : createShortURL(data);\n}\n\nexport function patchShortURL(\n    id: string,\n    data: Partial<ShortURL>\n): Observable<ShortURL> {\n    return patch(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function deleteShortURL(id: string): Observable<void> {\n    return del(`${ENDPOINT}/${id}`).pipe(map((_) => null));\n}\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"65feb1c\",\n    \"hash\": \"65feb1c\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"65feb1c\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1721273591512\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-renderer.component';\nexport * from './lib/maps-indoors.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        console.log('Image Token:', tkn);\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport {\n    provideHttpClient,\n    withInterceptorsFromDi,\n} from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\nimport { MapRendererComponent } from './map-renderer.component';\nimport { MapsIndoorsComponent } from './maps-indoors.component';\nimport { MapCanvasComponent } from './map-canvas.component';\nimport { ImageViewerComponent } from './image-viewer.component';\nimport { SimpleTableComponent } from './simple-table.component';\nimport { LimitInputDirective } from './limit-input.directive';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapRendererComponent,\n    MapsIndoorsComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    MapCanvasComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n    ImageViewerComponent,\n    SimpleTableComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    BindingDirective,\n    AuthenticatedImageDirective,\n    LimitInputDirective,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n        provideHttpClient(withInterceptorsFromDi()),\n    ],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n    /** Delay before closing the modal */\n    close_delay?: number;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent extends AsyncHandler {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        if (this._data.close_delay) {\n            this.timeout(\n                'close',\n                () => this._dialog_ref.close(),\n                this._data.close_delay\n            );\n        }\n    }\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop && !this.hover,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                console.log('Binding:', this._org.binding('remote_logger'));\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            })\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            })\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n        console.log('Binding:', this._org.binding('remote_logger'));\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-viewer',\n    template: `\n        <div class=\"h-screen w-screen bg-base-200\">\n            <img\n                class=\"object-contain object-center w-full h-full\"\n                [src]=\"url\"\n            />\n            <button\n                class=\"absolute top-1 right-1 bg-base-100\"\n                icon\n                matRipple\n                mat-dialog-close\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ImageViewerComponent {\n    constructor(@Inject(MAT_DIALOG_DATA) public url: string) {}\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\nfunction calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        ></div>\n        <div\n            class=\"absolute inset-0 flex items-center justify-center\"\n            *ngIf=\"loading\"\n        >\n            <mat-spinner [diameter]=\"48\"></mat-spinner>\n        </div>\n        <div\n            class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center\"\n            *ngIf=\"geolocation_error_message\"\n        >\n            <img\n                src=\"assets/icons/not-found.svg\"\n                alt=\"graphic of magnifying glass\"\n                width=\"200px\"\n                class=\"items-center\"\n            />\n            <p class=\"opacity-60 text-sm text-center mt-10\">\n                {{ geolocation_error_message | translate }}\n            </p>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"w-full even:bg-base-200 hover:bg-base-300 rounded border border-base-200\"\n                        *ngFor=\"let item of search_result_items | slice: 0:10\"\n                    >\n                        <button\n                            class=\"flex items-center w-full p-2 space-x-2 text-left\"\n                            (click)=\"getRoute(item); search_result_items = []\"\n                        >\n                            <div class=\"flex flex-col flex-1\">\n                                <div>{{ item.properties.name }}</div>\n                                <div class=\"opacity-30 text-xs\">\n                                    {{ item.properties.roomId }}, Level\n                                    {{ item.properties.floorName }}\n                                </div>\n                            </div>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n    /** Mark location of a specific item */\n    @Input() public locate: string;\n    /** Default zoom level for the map */\n    @Input() public default_zoom: number = 19;\n\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[] = [];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction } = {};\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._setLocationToBuilding();\n    };\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public floor_mapping: { [id: string]: string } = {};\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: MapsPeopleService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        if (this.custom_coordinates) this.coordinates = this.custom_coordinates;\n        const get_location = () => {\n            this._getUserLocation();\n            document.removeEventListener('click', get_location);\n        };\n        document.addEventListener('click', get_location);\n        await this._initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        if (change.locate && this.locate && mapsindoors) {\n            const searchParams = { q: this.searchElement.nativeElement.value };\n            const locations =\n                await mapsindoors?.services.LocationsService.getLocations(\n                    searchParams\n                );\n            if (locations.length) this.getRoute(locations[0]);\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    public ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) found_action.callback(e);\n        });\n    }\n\n    private _initMapView() {\n        if (!this._api_service.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: this.default_zoom || 19,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            log('MapsIndoors', 'Using Google Maps API');\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            console.log('View Options:', view_options);\n            log('MapsIndoors', 'Using Mapbox API');\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn'\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n        this.mapFloorsToIndex();\n        this._setLocationToBuilding();\n    }\n\n    public initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._api_service.map_token\n                  );\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider\n        );\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    public async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        console.log('Pairs:', pairs, building);\n        this.floor_mapping =\n            pairs?.reduce((lvl_map, [key, value]) => {\n                lvl_map[key] = value;\n                return lvl_map;\n            }, {}) || {};\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this._org.buildings.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (!e || !this.floor_mapping) return;\n            const level_id: string = this.floor_mapping[e];\n            this._state.setLevel(level_id);\n        });\n    }\n\n    public onSearch() {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        mapsindoors?.services.LocationsService.getLocations(searchParams).then(\n            (locations: any[]) => {\n                console.log(\n                    'Locations:',\n                    locations,\n                    this.map_instance.getZoom()\n                );\n                this.search_result_items = locations;\n            }\n        );\n    }\n\n    private async _getUserLocation(): Promise<void> {\n        if (!('geolocation' in navigator)) {\n            log(\n                'MapsIndoors',\n                \"User's geolocation not available.\",\n                undefined,\n                'warn'\n            );\n            return this._setLocationToBuilding();\n        }\n        if (this.coordinates) {\n            console.log('Using custom coordinates:', this.coordinates);\n            this.user_latitude = this.coordinates.latitude;\n            this.user_longitude = this.coordinates.longitude;\n            return;\n        } else {\n            navigator.geolocation.watchPosition(\n                (_) => this._updateGeolocation(_),\n                (_) => this._handleGeolocationError(_)\n            );\n            const options = { timeout: 10000, enableHighAccuracy: true };\n            navigator.geolocation.getCurrentPosition(\n                (position: GeolocationPosition) => {\n                    if (\n                        !this._userWithinRadius([\n                            position.coords.latitude,\n                            position.coords.longitude,\n                        ])\n                    ) {\n                        // Only use geolocation if user is within 1km of building\n                        return this._setLocationToBuilding();\n                    }\n                    this._updateGeolocation(position);\n                    this.map_instance.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    });\n                },\n                () => this._setLocationToBuilding(),\n                options\n            );\n        }\n    }\n\n    private _userWithinRadius(\n        [d_lat, d_long]: [number, number],\n        radius: number = 1\n    ) {\n        const [lat_str, long_str] =\n            this._org.building?.location.split(',') || [];\n        if (lat_str && long_str) {\n            const lat = parseFloat(lat_str);\n            const long = parseFloat(long_str);\n            const distance = calculateDistance(lat, long, d_lat, d_long);\n            if (distance >= radius) return false;\n        }\n        return true;\n    }\n\n    private _setLocationToBuilding() {\n        log('MapsIndoors', 'Settings location to building:', [\n            this._org.building?.display_name || this._org.building?.name,\n            this._org.building?.location,\n        ]);\n        const [lat, long] = this._org.building?.location.split(',');\n        if (!this.map_instance) return;\n        this.map_instance.setCenter({\n            lat: parseFloat(lat),\n            lng: parseFloat(long),\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (!updated_location?.coords) return;\n        log(\n            'MapsIndoors',\n            'Settings location to user:',\n            updated_location.coords,\n            'warn'\n        );\n        const { latitude, longitude } = updated_location.coords;\n        if (\n            latitude !== this.user_latitude ||\n            longitude !== this.user_longitude\n        ) {\n            this.user_latitude = latitude;\n            this.user_longitude = longitude;\n            this.getRoute(this.selected_destination);\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError(`Error retrieving your geolocation. [${error.message}]`);\n    }\n\n    public async getRoute(location: any) {\n        this.maps_service?.highlight([]);\n        if (!this.directions_service || !location) return;\n        console.log('Directions Service:', this.directions_service);\n        log('MapsIndoors', 'Getting route to location:', [\n            location,\n            this.user_latitude,\n            this.user_longitude,\n        ]);\n        this.selected_destination = location;\n        const destination = {\n            lat: location.properties.anchor.coordinates[1],\n            lng: location.properties.anchor.coordinates[0],\n            floor: location.properties.floor,\n        };\n        const level_id: string = (this.floor_mapping || {})[\n            location.properties.floor\n        ];\n        if (level_id) this._state.setLevel(level_id);\n\n        if (\n            !this._userWithinRadius(\n                [this.user_latitude, this.user_longitude],\n                1000\n            )\n        ) {\n            this.map_instance.setZoom(19);\n            this.map_instance.setCenter(destination);\n            this.maps_service.setFloor(destination.floor);\n            this.maps_service.highlight([location.id]);\n            return;\n        }\n\n        if (!this.user_latitude || !this.user_longitude) {\n            return notifyError('Unable to find a route.');\n        }\n\n        const origin: any = {\n            lat: this.user_latitude,\n            lng: this.user_longitude,\n        };\n\n        const routeParameters = {\n            origin: origin,\n            destination: destination,\n        };\n\n        console.log('Route Parameters:', routeParameters);\n\n        const result = await this.directions_service\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn'\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        console.log('Route:', result);\n        this.directions_renderer?.setRoute(result);\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (!this.styles) return;\n        const promises: Promise<void>[] = [];\n        for (const key in this.styles) {\n            const colour = this.styles[key]['fill'] as string;\n            if (key) {\n                const updated_key = key.substring(1);\n                promises.push(this._setPolygonFill(updated_key, colour));\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    public async mapActions() {\n        return this.actions?.reduce((accumulator, currentValue) => {\n            accumulator[currentValue.id] = currentValue;\n            return accumulator;\n        }, {});\n    }\n\n    private _setPolygonFill(location_id: string, colour: string) {\n        return this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    InjectionToken,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, log } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { ExploreStateService } from 'libs/explore/src/lib/explore-state.service';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nexport interface MapOptions {\n    disable_zoom?: boolean;\n    disable_pan?: boolean;\n    controls?: boolean;\n}\n\nexport interface MapMetadata {\n    styles?: ViewerStyles;\n    features?: ViewerFeature[];\n    labels?: ViewerLabel[];\n    actions?: ViewAction[];\n}\n\n@Component({\n    selector: 'interactive-map',\n    template: `\n        <ng-container\n            *ngIf=\"!(use_mapsindoors$ | async); else mapsindoors_template\"\n        >\n            <map-renderer\n                [src]=\"src\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [reset]=\"reset\"\n                [styles]=\"styles || metadata?.styles\"\n                [features]=\"features || metadata?.features\"\n                [actions]=\"actions || metadata?.actions\"\n                [labels]=\"labels || metadata?.labels\"\n                (mapInfo)=\"mapInfo.next($event)\"\n            >\n                <ng-content></ng-content>\n            </map-renderer>\n        </ng-container>\n        <ng-template #mapsindoors_template>\n            <maps-indoors\n                [zone]=\"location\"\n                (zoneChange)=\"onLevelChange($event)\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [options]=\"options\"\n                [reset]=\"reset\"\n                [focus]=\"focus\"\n                [metadata]=\"metadata\"\n            >\n                <ng-content></ng-content>\n            </maps-indoors>\n        </ng-template>\n        <div\n            zoom\n            *ngIf=\"options?.controls\"\n            class=\"absolute bottom-16 right-1 border border-base-200 divide-y divide-base-200 shadow flex flex-col bg-base-100 text-base-content rounded overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom In\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * 1.1\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom Out\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * (10 / 11)\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Reset Zoom and Position\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"reset = reset + 1\"\n            >\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class InteractiveMapComponent extends AsyncHandler {\n    @Input() public src: string;\n    @Input() public zoom = 1;\n    @Input() public center: any = { x: 0.5, y: 0.5 };\n    @Input() public reset = 0;\n    @Input() public metadata: MapMetadata = {};\n    @Input() public styles: any;\n    @Input() public features: any[];\n    @Input() public labels: any[];\n    @Input() public actions: any[];\n    @Input() public options: MapOptions = {};\n    @Input() public focus: string;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public centerChange = new EventEmitter<any>();\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public readonly use_mapsindoors$ = this._mapspeople.available$;\n\n    public get location() {\n        return this._org.levels.find((_) => _.map_id === this.src);\n    }\n\n    constructor(\n        private _mapspeople: MapsPeopleService,\n        private _org: OrganisationService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes.actions ||\n            changes.labels ||\n            changes.styles ||\n            changes.features\n        ) {\n            this.metadata = {\n                actions: this.actions || [],\n                labels: this.labels || [],\n                styles: this.styles || {},\n                features: this.features || [],\n            };\n        }\n    }\n\n    public onLevelChange(zone: any) {\n        log(\n            'Map',\n            'Level changed to:',\n            zone?.display_name || zone?.name || zone\n        );\n        this._explore.setLevel(zone.id);\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\nconst ALLOWED_NUMBERS = '0123456789'.split('');\nconst ALLOWED_DECIMALS = '0123456789.'.split('');\nconst ALLOWED_LETTERS = 'abcdefghijklmnopqrstuvwxyz'.split('');\nconst ALLOWED_ALPHANUMERIC = 'abcdefghijklmnopqrstuvwxyz0123456789'.split('');\n\n@Directive({\n    selector: '[limitInput]',\n})\nexport class LimitInputDirective {\n    @Input() restriction:\n        | 'number'\n        | 'decimals'\n        | 'letters'\n        | 'alphanumeric'\n        | 'custom' = 'decimals';\n    @Input() custom_list: string[] = [];\n\n    constructor(private _el: ElementRef) {}\n\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\n        const e: KeyboardEvent = event;\n        const key = e.key;\n        if (\n            ['ArrowLeft', 'ArrowRight', 'Tab', 'Backspace', 'Home'].indexOf(\n                key\n            ) !== -1 ||\n            // Allow: Ctrl+A\n            (e.key === 'a' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+C\n            (e.key === 'c' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+V\n            (e.key === 'v' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+X\n            (e.key === 'x' && (e.ctrlKey || e.metaKey))\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        switch (this.restriction) {\n            case 'letters':\n                if (ALLOWED_LETTERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'alphanumeric':\n                if (ALLOWED_ALPHANUMERIC.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'custom':\n                if (this.custom_list.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'decimals':\n                if (ALLOWED_DECIMALS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'number':\n            default:\n                if (ALLOWED_NUMBERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler, shiftColorTowards } from '@placeos/common';\n\nexport interface Polygon {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** List of x, y coordinates from 0 to 1 */\n    points: [number, number][];\n}\n\nexport interface MapPolygonData {\n    draw_labels?: boolean;\n    draw_points?: boolean;\n    polygons$: Observable<Polygon[]>;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-canvas]',\n    template: `\n        <canvas\n            #canvas\n            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n            [style.width]=\"width * svg_ratio * zoom + '%'\"\n            [style.height]=\"width * svg_ratio * ratio * zoom + '%'\"\n        ></canvas>\n    `,\n    styles: [],\n})\nexport class MapCanvasComponent extends AsyncHandler implements OnInit {\n    public zoom = 1;\n    public ratio = 1;\n    public svg_ratio = 1;\n    public width = 10000;\n\n    @ViewChild('canvas', { static: true })\n    private canvas_element: ElementRef<HTMLCanvasElement>;\n\n    public get ratioed_height(): number {\n        return +(this.width * this.ratio).toFixed(2);\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: MapPolygonData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'state',\n            combineLatest([\n                this._data.ratio$,\n                this._data.zoom$,\n                this._data.svg_ratio$,\n            ]).subscribe(([ratio, zoom, sr]) =>\n                this._handleMapChange(ratio, zoom, sr)\n            )\n        );\n        this.subscription(\n            'polygons',\n            this._data.polygons$.subscribe((list) =>\n                this._handleStateChange(list)\n            )\n        );\n    }\n\n    private async _handleMapChange(\n        ratio: number,\n        zoom: number,\n        svg_ratio: number\n    ) {\n        const old_ratio = this.ratio;\n        this.zoom = zoom;\n        this.ratio = ratio;\n        this.svg_ratio = svg_ratio;\n        const width = this.width / 10;\n        const height = (this.width * this.ratio) / 10;\n\n        if (old_ratio === ratio) return;\n\n        const canvas = this.canvas_element.nativeElement;\n        canvas.width = width;\n        canvas.height = height;\n\n        const polygons = await this._data.polygons$.pipe(take(1)).toPromise();\n        this._handleStateChange(polygons);\n    }\n\n    private _handleStateChange(polygon_list: Polygon[]): void {\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        polygon_list.forEach((poly) => this._drawPolygon(poly));\n    }\n\n    private _drawPolygon(polygon: Polygon) {\n        const points = polygon.points;\n        if (!points?.length) return;\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        const width = canvas.width;\n        const height = canvas.height;\n        // Draw polygon\n        ctx.fillStyle = polygon.color + '80';\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.fill();\n        // Draw Outline\n        ctx.strokeStyle = shiftColorTowards(polygon.color, '#888888', 0.5);\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.stroke();\n        // Draw Points\n        if (this._data.draw_points !== false) {\n            ctx.fillStyle = '#fff';\n            ctx.strokeStyle = polygon.color;\n            ctx.lineWidth = 4;\n            points.forEach(([x, y]) => {\n                ctx.beginPath();\n                ctx.arc(x * width, y * height, 8, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n        }\n        // Draw Text\n        if (this._data.draw_labels !== false) {\n            const center = points.reduce(\n                (acc, [x, y]) => [acc[0] + x, acc[1] + y],\n                [0, 0]\n            );\n            center[0] /= points.length;\n            center[1] /= points.length;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#FFF';\n            ctx.font = '32px sans-serif';\n            ctx.fillText(\n                polygon.name,\n                center[0] * width + 1,\n                center[1] * height + 2\n            );\n            ctx.fillStyle = '#000';\n            ctx.fillText(polygon.name, center[0] * width, center[1] * height);\n        }\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [focus]=\"item?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { get } from 'http';\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `map-renderer`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class MapRendererComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n    /** Number of times to reset the map */\n    @Input() public reset = 0;\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n        if (\n            changes.reset &&\n            changes.reset.currentValue !== changes.reset.previousValue\n        ) {\n            this.zoom = 1;\n            this.center = { x: 0.5, y: 0.5 };\n            this.updateDisplay();\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout(\n                'create_view',\n                () => this.createView().catch((e) => console.warn(e)),\n                300\n            );\n        }\n        const simp_url = this.src?.toLowerCase() || '';\n        if (!simp_url.includes('svg') && !simp_url.includes('upload')) return;\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            console.log('Map Token:', tkn);\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            const viewer = getViewer(this.viewer);\n            this.mapInfo.emit(viewer.mappings);\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapMetadata } from './interactive-map.component';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    calculateDistance,\n    log,\n    notifyError,\n    notifyWarn,\n    randomString,\n} from '@placeos/common';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\nimport { take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\nconst DEFAULT_ZOOM = 18.5;\n\ninterface MapsIndoorServices {\n    mapsindoors: any;\n    view: any;\n    map: any;\n    directions: any;\n    directions_renderer: any;\n}\n\nconst RESOURCE_MAP: Record<string, any> = {};\n\n@Component({\n    selector: 'maps-indoors',\n    template: `\n        <div #map_container class=\"absolute inset-0 z-0\"></div>\n        <button\n            *ngIf=\"focus && !show_directions && options?.controls\"\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-base-100 text-base-content shadow z-10 border-base-200 space-x-2\"\n            (click)=\"toggleDirections()\"\n        >\n            <app-icon>place</app-icon>\n            <div class=\"pr-2\">\n                {{ viewing_directions ? 'Hide' : 'Show' }} Directions\n            </div>\n            <mat-spinner diameter=\"24\" *ngIf=\"loading_directions\"></mat-spinner>\n        </button>\n    `,\n    styles: [``],\n})\nexport class MapsIndoorsComponent extends AsyncHandler implements OnInit {\n    @Input() public zone: BuildingLevel;\n    @Input() public metadata: MapMetadata;\n    @Input() public options: any;\n    @Input() public focus: string;\n    @Input() public zoom = DEFAULT_ZOOM;\n    @Input() public reset: number;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public zoneChange = new EventEmitter<BuildingLevel>();\n\n    public id: string;\n    public show_directions = false;\n    public viewing_directions = false;\n    public loading_directions = false;\n    public ignore_zoom = false;\n\n    private _services: MapsIndoorServices;\n    private _floor_list: any[] = [];\n\n    @ViewChild('map_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _maps_people: MapsPeopleService,\n        private _org: OrganisationService\n    ) {\n        super();\n        const data =\n            sessionStorage.getItem('PLACEOS.mapsindoors.resources') || '{}';\n        const value = JSON.parse(data);\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                RESOURCE_MAP[key] = value[key];\n            }\n        }\n    }\n\n    public ngOnInit() {\n        this.id = randomString(8);\n        this._initialised.next(false);\n        this._initialiseServices();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (!this.is_initialised) {\n            return this.timeout('on_changes', () => this.ngOnChanges(changes));\n        }\n        if (changes.zone && this.zone) {\n            this._centerOnZone();\n        }\n        if (changes.focus && this.focus) {\n            this._focusOnLocation();\n        }\n        if (changes.metadata) {\n            this._updateMapStyling();\n        }\n        if (changes.zoom && this.zoom && !this.ignore_zoom) {\n            this._services?.map?.setZoom(this.zoom);\n        }\n        if (changes.reset) {\n            this._services?.map?.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        if (changes.options) {\n            this._addFloorSelector();\n        }\n    }\n\n    private _setResource(id: string, resource: any) {\n        RESOURCE_MAP[id] = resource;\n        this.timeout('set_resource', () => {\n            sessionStorage.setItem(\n                'PLACEOS.mapsindoors.resources',\n                JSON.stringify(RESOURCE_MAP)\n            );\n        });\n    }\n\n    private _initialiseServices() {\n        if (!this._maps_people.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initialiseServices(), 1000);\n            return;\n        }\n        const [lat, long] = (\n            this._org.building?.location || `-33.8567844,151.2152967`\n        ).split(',');\n        const view_options: Record<string, any> = {\n            element: this._container.nativeElement,\n            center: { lat: parseFloat(lat), lng: parseFloat(long) },\n            zoom: DEFAULT_ZOOM,\n            maxZoom: 24,\n        };\n        let view_instance = null;\n        switch (this._maps_people.map_service) {\n            case MapService.GoogleMaps:\n                log('MapsIndoors', 'Using Google Maps API');\n                view_instance = new mapsindoors.mapView.GoogleMapsView(\n                    view_options\n                );\n                break;\n            case MapService.Mapbox:\n                view_options.accessToken = this._maps_people.map_token;\n                log('MapsIndoors', 'Using Mapbox API');\n                view_instance = new mapsindoors.mapView.MapboxView(\n                    view_options\n                );\n                break;\n        }\n        if (!view_instance) {\n            notifyWarn('Failed to initialise map view.');\n            return;\n        }\n        const provider =\n            this._maps_people.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._maps_people.map_token\n                  );\n        const maps_indoors = new mapsindoors.MapsIndoors({\n            mapView: view_instance,\n        });\n        this._services = {\n            mapsindoors: maps_indoors,\n            view: view_instance,\n            map: view_instance.getMap(),\n            directions: new mapsindoors.services.DirectionsService(provider),\n            directions_renderer: new mapsindoors.directions.DirectionsRenderer({\n                mapsIndoors: maps_indoors,\n            }),\n        };\n        console.log('Resource:', this._services.mapsindoors);\n        this._initialised.next(true);\n        if (this.zone) {\n            this._services.map.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        this._addFloorSelector();\n        // Add Events listenders\n        this._services.mapsindoors.addListener('building_changed', (e) =>\n            this._handleBuildingChange(e)\n        );\n        this._services.mapsindoors.addListener('floor_changed', (e) =>\n            this._handleLevelChange(e)\n        );\n        this._services.mapsindoors.addListener('zoom_changed', (e) =>\n            this._handleZoomChange(e)\n        );\n        this._services.mapsindoors.addListener('click', (e) =>\n            this._handleUserClick(e)\n        );\n        this.timeout(\n            'resize',\n            () => window.dispatchEvent(new Event('resize')),\n            100\n        );\n        (window as any).maps_indoors = this._services;\n        this.timeout('focus', () => this._focusOnLocation());\n        this.timeout('init_zoom', () => this._handleZoomChange(DEFAULT_ZOOM));\n    }\n\n    public async toggleDirections() {\n        if (this.viewing_directions) {\n            this._services.directions_renderer.setRoute(null);\n            this._focusOnLocation();\n            this.viewing_directions = false;\n            return;\n        }\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError('Failed to find location.');\n            return;\n        }\n        this.loading_directions = true;\n        const item = items[0];\n        const [d_lng, d_lat] = item.properties?.anchor?.coordinates || [0, 0];\n        const options = { timeout: 10000, enableHighAccuracy: true };\n        navigator.geolocation.getCurrentPosition(\n            async (position: GeolocationPosition) => {\n                const distance = calculateDistance(\n                    d_lat,\n                    d_lng,\n                    position.coords.latitude,\n                    position.coords.longitude\n                );\n                const routeParameters = {\n                    origin: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    destination: { lat: d_lat, lng: d_lng },\n                    travelMode: distance < 2 ? 'WALKING' : 'DRIVING',\n                };\n                console.log('Route Parameters:', routeParameters, distance);\n                const result = await this._services.directions\n                    .getRoute(routeParameters)\n                    .catch((e) => {\n                        log(\n                            'MapsIndoors',\n                            'Error fetching route: ',\n                            e.message || e,\n                            'warn'\n                        );\n                        const origin_error =\n                            e instanceof TypeError &&\n                            e.message?.includes('origin');\n                        this.loading_directions = false;\n                        if (!origin_error) return;\n                        notifyError(\n                            'Error: Origin location is outside of map area.'\n                        );\n                    });\n                if (!result) return;\n                console.log('Route:', result);\n                this._services.directions_renderer.setRoute(result);\n                this.viewing_directions = true;\n                this.loading_directions = false;\n            },\n            () => notifyError('Failed to get your current location.'),\n            options\n        );\n    }\n\n    private _handleZoomChange(level: number) {\n        this.timeout(\n            'zoom_change',\n            () => {\n                this.ignore_zoom = true;\n                this.zoom = level;\n                this.zoomChange.emit(level);\n                this.timeout(\n                    'reset_ignore_zoom',\n                    () => (this.ignore_zoom = false),\n                    50\n                );\n            },\n            100\n        );\n    }\n\n    private _handleBuildingChange(building: any) {\n        const id = building.externalId || building.id;\n        log('MapsIndoors', `Building switched to \"${id}\"`);\n        const floors = building.floors || {};\n        this._floor_list = Object.keys(floors).map((key) => ({\n            index: key,\n            ...floors[key],\n        }));\n        log('MapsIndoors', 'Floor List:', this._floor_list);\n        if (!this._services) return;\n        const bld = this._org.buildings.find(\n            (_) => _.id === id || _.map_id === id\n        );\n        this.timeout('set_floor', () => {\n            const has_set_floor = this._setFloorFromZone();\n            if (!has_set_floor && building.defaultFloor) {\n                this._handleLevelChange(building.defaultFloor);\n            }\n        });\n        if (!bld) return;\n        this._org.building = bld;\n    }\n\n    private async _handleLevelChange(index: any) {\n        log('MapsIndoors', `Level switched to \"${index}\"`);\n        const floor = this._floor_list.find((_) => _.index === index);\n        const id = floor?.externalId || floor?.id;\n        if (!this._services) return;\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        if (!levels) return;\n        const new_level = levels.find((_) => _.map_id === id || _.id === id);\n        if (!new_level) return;\n        this.zone = new_level;\n        this.zoneChange.emit(new_level);\n    }\n\n    private _handleUserClick(event: any) {\n        log('MapsIndoors', `Click occurred`, event);\n        const id =\n            event.properties?.externalId ||\n            event.properties?.roomId ||\n            event.id;\n        const actions = this.metadata?.actions || [];\n        log('MapsIndoors', `Registered Actions`, actions);\n        const ignore_actions = ['mousedown', 'touchstart', 'enter', 'leave'];\n        for (const action of actions) {\n            if (\n                (action.id === id || action.id === '*') &&\n                !ignore_actions.includes(action.action as any)\n            ) {\n                action.callback(event);\n                break;\n            }\n        }\n    }\n\n    private async _search(query: string): Promise<any[]> {\n        if (!this._services) return;\n        return mapsindoors?.services.LocationsService.getLocations({\n            q: query,\n        });\n    }\n\n    private async _updateMapStyling() {\n        if (!this._services) return;\n        const styles = this.metadata?.styles || {};\n        for (const id in styles) {\n            if (!styles[id].fill) continue;\n            let resource = RESOURCE_MAP[id];\n            if (!resource) {\n                const id_simple = id.replace(/#/, '');\n                const list = await this._search(id_simple);\n                if (!list.length) continue;\n                resource = list.find(\n                    (_) =>\n                        _.properties?.externalId === id_simple ||\n                        _.properties?.roomId === id_simple ||\n                        _.id === id_simple\n                );\n                if (resource) this._setResource(id, resource);\n            }\n            if (!resource) continue;\n            const value = {\n                extrusionHeight: 0,\n                extrusionVisible: false,\n                polygonVisible: true,\n                polygonFillColor: styles[id].fill,\n            };\n            this._services.mapsindoors.setDisplayRule(resource.id, value);\n        }\n    }\n\n    private async _focusOnLocation() {\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError('Failed to find location.');\n            return;\n        }\n        const item =\n            items.find((_) => _.properties?.externalId === this.focus) ||\n            items[0];\n        const [lng, lat] = item.properties?.anchor?.coordinates || [0, 0];\n        this._services.map.setZoom(DEFAULT_ZOOM);\n        this._services.map.setCenter({ lat, lng });\n        this._services.mapsindoors.setFloor(item.properties?.floor);\n        this._services.mapsindoors.highlight([item.id]);\n    }\n\n    private _centerOnZone() {\n        if (!this._services || !this.zone) return;\n        this.timeout('set_center', () => {\n            const bld = this._org.buildings.find(\n                (bld) => bld.id === this.zone.parent_id\n            );\n            if (!bld) return;\n            const [lat, long] = bld?.location.split(',');\n            this._services.map.setCenter({\n                lat: parseFloat(lat),\n                lng: parseFloat(long),\n            });\n            this._setFloorFromZone();\n        });\n    }\n\n    private _setFloorFromZone() {\n        if (!this.zone.map_id || !this._services) return false;\n        const map_id = this.zone.map_id;\n        const floor = this._floor_list.find(\n            (_) =>\n                _.index === map_id || _.externalId === map_id || _.id === map_id\n        );\n        if (!floor) return false;\n        this._services.mapsindoors.setFloor(floor.index);\n        return true;\n    }\n\n    private _added_floor_selector = false;\n\n    private _addFloorSelector() {\n        if (!this.options?.controls || this._added_floor_selector) return;\n        const element = document.createElement('div');\n        new mapsindoors.FloorSelector(element, this._services.mapsindoors);\n        if (this._maps_people.map_service === MapService.GoogleMaps) {\n            this._services.map.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(element);\n        } else {\n            this._services.map.addControl({\n                onAdd: () => element,\n                onRemove: () => {},\n            });\n        }\n        this._added_floor_selector = true;\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(length: number): string {\n        let str = `${padLength(Math.floor(length / 60) % 60)}:${padLength(\n            length % 60\n        )}`;\n        const hours = Math.floor(length / 60 / 60);\n        if (hours > 0) {\n            str = `${padLength(hours)}:${str}`;\n        }\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, take } from 'rxjs/operators';\n\nexport interface TableColumn {\n    key: string;\n    name: string;\n    sortable?: boolean;\n    filterable?: boolean;\n    content?: string | TemplateRef<any> | Component;\n    size?: string;\n    show?: boolean;\n    empty?: string;\n}\n\n@Component({\n    selector: 'simple-table',\n    template: `\n        <div\n            role=\"table\"\n            class=\"grid border border-base-300\"\n            [style.gridTemplateColumns]=\"column_template\"\n            (click)=\"active_row >= 0 ? rowClicked.emit(active_row) : null\"\n            (touchend)=\"active_row = -1\"\n            (mouseleave)=\"active_row = -1\"\n        >\n            <div\n                *ngIf=\"selectable\"\n                id=\"column-selector\"\n                class=\"sticky top-0 flex items-center justify-between px-2 border-r border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"'1 / 2'\"\n            >\n                <mat-checkbox\n                    [checked]=\"selected.length === (data_view$ | async)?.length\"\n                    [indeterminate]=\"\n                        selected.length > 0 &&\n                        selected.length < (data_view$ | async)?.length\n                    \"\n                    (change)=\"selectAll($event.checked)\"\n                ></mat-checkbox>\n            </div>\n            <button\n                header\n                matRipple\n                *ngFor=\"let column of active_columns; let i = index\"\n                [id]=\"'column-' + column.key\"\n                class=\"sticky top-0 flex items-center justify-between p-4 border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"\n                    1 +\n                    i +\n                    (selectable ? 1 : 0) +\n                    ' / ' +\n                    (2 + i + (selectable ? 1 : 0))\n                \"\n                [class.pointer-events-none]=\"\n                    !sortable || column.sortable === false\n                \"\n                (click)=\"setSort(column.key)\"\n                [class.active]=\"sort?.key === column.key\"\n                [class.border-r]=\"i !== active_columns.length - 1\"\n                [class.width]=\"column.size\"\n            >\n                <div class=\"font-medium\">{{ column.name || column.key }}</div>\n                <app-icon\n                    class=\"text-[1.25em]\"\n                    *ngIf=\"sortable && column.sortable !== false\"\n                >\n                    {{\n                        sort?.key === column.key && sort?.reverse\n                            ? 'arrow_upward'\n                            : 'arrow_downward'\n                    }}\n                </app-icon>\n            </button>\n            <ng-container\n                *ngFor=\"\n                    let row of data_view$\n                        | async\n                        | slice\n                            : page * (page_size || 9999)\n                            : (page + 1) * (page_size || 9999);\n                    let i = index\n                \"\n            >\n                <div\n                    *ngIf=\"selectable\"\n                    id=\"column-selector\"\n                    class=\"flex items-center justify-between px-2 border-r border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"'1 / 2'\"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <mat-checkbox\n                        [checked]=\"selected.includes(i)\"\n                        (change)=\"select(i, $event.checked)\"\n                    ></mat-checkbox>\n                </div>\n                <div\n                    *ngFor=\"let column of active_columns; let j = index\"\n                    class=\"flex items-center justify-between border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"\n                        1 +\n                        j +\n                        (selectable ? 1 : 0) +\n                        ' / ' +\n                        (2 + j + (selectable ? 1 : 0))\n                    \"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    [class.border-r]=\"j !== active_columns.length - 1\"\n                    [class.width]=\"column.size\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <ng-container [ngSwitch]=\"columnType(column)\">\n                        <div class=\"p-4\" *ngSwitchDefault>\n                            {{ row[column.key] }}\n                            <span\n                                *ngIf=\"\n                                    row[column.key] == null ||\n                                    row[column.key] === ''\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                {{ column.empty || 'N/A' }}\n                            </span>\n                        </div>\n                        <ng-container *ngSwitchCase=\"'template'\">\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    column.content;\n                                    context: {\n                                        first: i === 0,\n                                        last:\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1 ||\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1,\n                                        index: i,\n                                        data: row[column.key],\n                                        row: row,\n                                        key: column.key,\n                                        name: column.name || column.key\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </ng-container>\n                </div>\n                <div\n                    child-node\n                    *ngIf=\"show_children[row.id] && child_template\"\n                    [style.gridColumn]=\"'span ' + active_columns.length\"\n                    class=\"border-b last:border-t last:border-b-0 border-base-200\"\n                >\n                    <ng-container\n                        *ngTemplateOutlet=\"\n                            child_template;\n                            context: {\n                                first: i === 0,\n                                last:\n                                    i === (data_view$ | async)?.length - 1 ||\n                                    i === (data_view$ | async)?.length - 1,\n                                index: i,\n                                row: row,\n                            }\n                        \"\n                    ></ng-container>\n                </div>\n            </ng-container>\n            <div\n                *ngIf=\"!(data_view$ | async)?.length\"\n                [style.gridColumnStart]=\"'span ' + active_columns.length\"\n                class=\"flex items-center justify-center p-8 opacity-30\"\n            >\n                {{ empty_message }}\n            </div>\n            <!-- TODO: Add pagination -->\n        </div>\n        <div\n            *ngIf=\"page_size\"\n            class=\"sticky bottom-0 w-full flex items-center justify-end space-x-2 p-2 bg-base-200\"\n        >\n            <div class=\"px-4 py-2\">\n                {{ page * (page_size || 9999) + 1 }} &ndash;\n                {{\n                    (page + 1) * (page_size || 9999) > total_count\n                        ? total_count\n                        : (page + 1) * (page_size || 9999)\n                }}\n                of {{ total_count }}\n            </div>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === 0\"\n                (click)=\"setPage(page - 1)\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(page + 1)\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n            <button icon matRipple [disabled]=\"page === 0\" (click)=\"setPage(0)\">\n                <app-icon>first_page</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(total_pages - 1)\"\n            >\n                <app-icon>last_page</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            :host > button {\n                min-width: 100%;\n            }\n\n            [header] app-icon {\n                opacity: 0;\n            }\n            [header]:hover app-icon {\n                opacity: 0.3;\n            }\n            [header]:hover.pointer-events-none app-icon {\n                opacity: 0;\n            }\n            [header].active app-icon {\n                opacity: 1;\n            }\n        `,\n    ],\n})\nexport class SimpleTableComponent<T extends {} = any> extends AsyncHandler {\n    @Input() public data: T[] | Observable<T[]>;\n    @Input() public columns: TableColumn[] = [];\n    @Input() public selectable = false;\n    @Input() public filter: string = '';\n    @Input() public sortable = false;\n    @Input() public selected: number[] = [];\n    @Input() public page_size = 0;\n    @Input() public empty_message = 'No data to list';\n    @Input() public child_template: TemplateRef<any> = null;\n    @Input() public show_children: Record<string, boolean> = {};\n    @Output() public selectedChange = new EventEmitter<number[]>();\n    @Output() public rowClicked = new EventEmitter<number>();\n\n    public page = 0;\n    public total_count = 0;\n    public total_pages = 0;\n    public active_row = -1;\n    public active_columns = [];\n\n    private _data$ = new BehaviorSubject<T[]>([]);\n    private _filter$ = new BehaviorSubject<string>('');\n    private _sort$ = new BehaviorSubject<{ key: string; reverse: boolean }>(\n        null\n    );\n\n    public data_view$?: Observable<T[]> = null;\n\n    public get sort() {\n        return this._sort$.getValue();\n    }\n\n    public get data$(): Observable<T[]> {\n        return this.data instanceof Array ? this._data$ : this.data;\n    }\n\n    public get column_count() {\n        return this.active_columns.length + (this.selectable ? 1 : 0);\n    }\n\n    public get column_template() {\n        const template = this.active_columns\n            .map((_) => _.size || 'auto')\n            .join(' ');\n        return this.selectable ? `3.5rem ${template}` : template;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.filter) {\n            this._filter$.next(this.filter);\n        }\n        if (changes.columns) {\n            this.active_columns = this.columns.filter((_) => _.show !== false);\n        }\n        if (changes.data) {\n            this.data_view$ = combineLatest([\n                this.data$,\n                this._filter$,\n                this._sort$,\n            ]).pipe(\n                debounceTime(300),\n                map(([data, filter, sort]) => {\n                    data = [...data];\n                    if (filter) {\n                        data = data.filter((_) =>\n                            Object.values(_).some((i) =>\n                                JSON.stringify(i)\n                                    .toLowerCase()\n                                    .includes(filter.toLowerCase())\n                            )\n                        );\n                    }\n                    if (sort && data.length) {\n                        const type = typeof data[0][sort.key];\n                        if (type === 'number') {\n                            data = data.sort((a, b) => {\n                                const result = a[sort.key] - b[sort.key];\n                                return sort.reverse ? -result : result;\n                            });\n                        } else {\n                            data = data.sort((a, b) => {\n                                const a_value = JSON.stringify(\n                                    a[sort.key] || ''\n                                );\n                                const b_value = JSON.stringify(\n                                    b[sort.key] || ''\n                                );\n                                const result = a_value.localeCompare(b_value);\n                                return sort.reverse ? -result : result;\n                            });\n                        }\n                    }\n                    this.selected = [];\n                    this.page = 0;\n                    if (this.page_size) {\n                        this.total_count = data.length;\n                        this.total_pages = Math.ceil(\n                            this.total_count / this.page_size\n                        );\n                    }\n                    return data;\n                }),\n                shareReplay(1)\n            );\n        }\n    }\n\n    public columnType(column: TableColumn) {\n        return column.content instanceof TemplateRef ? 'template' : 'raw';\n    }\n\n    public gridSquare(row: number, column: number) {\n        return `${row} / ${column} / ${row + 1} / ${column + 1}`;\n    }\n\n    public select(index: number, state: boolean) {\n        if (state) this.selected.push(index);\n        else this.selected = this.selected.filter((i) => i !== index);\n    }\n\n    public async selectAll(state: boolean) {\n        const list = await this.data_view$.pipe(take(1)).toPromise();\n        if (state) this.selected = list.map((_, i) => i);\n        else this.selected = [];\n    }\n\n    public setSort(key: string) {\n        const sort = this._sort$.getValue();\n        if (!sort || sort.key !== key) {\n            this._sort$.next({ key, reverse: false });\n        } else if (!sort.reverse) {\n            this._sort$.next({ key, reverse: true });\n        } else {\n            this._sort$.next(null);\n        }\n    }\n\n    public setPage(page: number) {\n        this.timeout('set_page', () => (this.page = page), 100);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\nimport { first } from 'rxjs/operators';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select && !use_region\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length || !desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"desk_height_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n                *ngIf=\"desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>desk</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Desk Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <ng-template #desk_height_tooltip>\n                <div class=\"relative p-4 bg-base-100 rounded shadow w-64\">\n                    <div class=\"text-lg\" i18n>Desk Height</div>\n                    <div class=\"text-xs opacity-60 mb-4\" i18n>\n                        Set your desk height for the best experience\n                    </div>\n                    <div class=\"flex flex-col mt-2\">\n                        <label>Sitting Height</label>\n                        <div class=\"flex items-center space-x-2\">\n                            <mat-slider\n                                min=\"60\"\n                                max=\"80\"\n                                step=\"0.5\"\n                                discrete\n                                class=\"flex-1\"\n                                [displayWith]=\"formatLabel\"\n                            >\n                                <input\n                                    matSliderThumb\n                                    [(ngModel)]=\"desk_sitting_height\"\n                                    (ngModelChange)=\"\n                                        saveSetting(\n                                            'desk_sitting_height',\n                                            $event\n                                        )\n                                    \"\n                                />\n                            </mat-slider>\n                            <div class=\"text-sm w-12 text-right\">\n                                {{ desk_sitting_height.toFixed(1) }}cm\n                            </div>\n                        </div>\n                        <label>Standing Height</label>\n                        <div class=\"flex items-center space-x-2  mr-2\">\n                            <mat-slider\n                                min=\"90\"\n                                max=\"120\"\n                                step=\"0.5\"\n                                discrete\n                                class=\"flex-1\"\n                                [displayWith]=\"formatLabel\"\n                            >\n                                <input\n                                    matSliderThumb\n                                    [(ngModel)]=\"desk_standing_height\"\n                                    (ngModelChange)=\"\n                                        saveSetting(\n                                            'desk_standing_height',\n                                            $event\n                                        )\n                                    \"\n                                />\n                            </mat-slider>\n                            <div class=\"text-sm w-12 text-right mr-2\">\n                                {{ desk_standing_height.toFixed(1) }}cm\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public desk_standing_height = 101;\n    public desk_sitting_height = 71;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get desk_height() {\n        return this._settings.get('app.desks.height_enabled');\n    }\n\n    public get use_region(): boolean {\n        return this._settings.get('app.use_region');\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.desk_sitting_height =\n            this._settings.get('desk_sitting_height') || 71;\n        this.desk_standing_height =\n            this._settings.get('desk_standing_height') || 101;\n    }\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n\n    public saveSetting(name: string, value: any) {\n        console.log('Save setting', name, value);\n        this._settings.saveUserSetting(name, value);\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.keyset) {\n            if (!this.keyset) this.keyset = DEFAULT_KEYS;\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div\n                class=\"flex items-center border-b border-base-200 p-2 min-h-12\"\n            >\n                <button\n                    close\n                    icon\n                    matRipple\n                    *ngIf=\"!hide_close\"\n                    (click)=\"close.emit()\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center font-medium\" i18n>\n                    {{ list.length }}\n                    {{\n                        custom_title\n                            ? custom_title\n                            : list.length === 1\n                            ? 'Attendee'\n                            : 'Attendees'\n                    }}\n                </div>\n                <div class=\"w-12\" *ngIf=\"!hide_close\"></div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2 hover:bg-base-200\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"truncate\">{{ user.name }}</div>\n                        <div\n                            class=\"opacity-60 text-sm\"\n                            *ngIf=\"host === user.email\"\n                        >\n                            Host\n                        </div>\n                    </div>\n                    <div class=\"p-2\">\n                        <div\n                            class=\"h-3 w-3 rounded-full\"\n                            [class.bg-success]=\"user.checked_in\"\n                            [class.bg-pending]=\"!user.checked_in\"\n                            [matTooltip]=\"\n                                user.checked_in\n                                    ? 'Checked in'\n                                    : 'Not checked in'\n                            \"\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: User[] = [];\n    @Input() public hide_close = false;\n    @Input() public custom_title = '';\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _changed = new BehaviorSubject<number>(0);\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = this._org.building_list.pipe(\n        switchMap((list) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, 'booking_rules').toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            const use_region = this._settings.get('app.use_region');\n            if (!zone_ids?.length) {\n                zone_ids = [\n                    (use_region\n                        ? this._org.building?.parent_id\n                        : this._org.building?.id) || this._org.building?.id,\n                ];\n            }\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n        this._changed,\n    ]).pipe(\n        debounceTime(300),\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules[this._org.building?.id] || []\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    let booking_list = bookings[idx] || [];\n                    if (this.last_success?.system?.id === _.id) {\n                        booking_list = [...booking_list, this.last_success];\n                    }\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        booking_list.filter((_) => _.ical_uid !== ical_uid)\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules[this._org.building?.id] || []\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration]\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules[this._org.building?.id] || []\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1)\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this.timeout('set_view', () => this._view.next(value), 50);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id]\n                ) || []\n            ),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id]\n                ) || []\n            ),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest({ ..._, event })\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        if (form_data.id && form_data.id !== this._event.getValue()?.id) {\n            showEvent(form_data.id).subscribe((event) => {\n                this._event.next(event);\n                this._assets.setOptions({\n                    ignore: flatten(\n                        event.linked_bookings?.map(\n                            (_) => _.asset_ids || [_.asset_id]\n                        ) || []\n                    ),\n                });\n            });\n        }\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let value = this._form.getRawValue();\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = value;\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n                value = this._form.getRawValue();\n            }\n            let changed_times = false;\n            let changed_spaces = spaces.some(\n                (s) => !event.resources?.find((_) => _.id === s.id)\n            );\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource')\n                );\n                spaces.push(space);\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (!spaces.length && attendees.find((_) => _.is_external)) {\n                this._loading.next('');\n                const message =\n                    'External attendees require a space to be booked';\n                reject(message);\n                throw message;\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const processed_assets = (assets || []).map((_) =>\n                new AssetRequest(_).toJSON()\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            let creating_assets = false;\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    console.warn(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time'\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                } else if (creating_assets) {\n                    notifyError(\n                        `Unable to update all asset requests for event.\\n${e}`\n                    );\n                    return;\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n\n            if (assets?.length || event.extension_data.assets?.length) {\n                creating_assets = true;\n                const requests = await validateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.level?.parent_id\n                            ? [spaces[0]?.level?.parent_id]\n                            : [this._org.building?.id],\n                        reset_state: changed_times,\n                    },\n                    assets,\n                    changed_spaces || changed_times\n                ).catch(on_error);\n                if (!requests) throw 'Unable to validate asset requests';\n                await requests();\n                creating_assets = false;\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            this.timeout('post_finshed', () => this._changed.next(Date.now()));\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration]\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any)\n        );\n        const linked_assets = this.linked_bookings\n            .filter((_) => _.booking_type === 'asset-request')\n            .map((_) => _.extension_data?.request)\n            .filter((_) => !!_);\n        const asset_requests =\n            (linked_assets.length\n                ? linked_assets\n                : this.extension_data.assets) || [];\n        this.extension_data.assets = asset_requests.map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end\n        );\n    }\n\n    private _valid_asset_cache = [];\n    private _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        delete obj.linked_bookings;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    const id = data.update_master\n        ? data.recurring_event_id || data.id\n        : data.id;\n    delete (data as any)?.status;\n    return id ? updateEvent(id, { ...data, id }, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0]\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(\n                    ignore_period[0] || start,\n                    ignore_period[1] || duration\n                )\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false }\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        map(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._explore.level,\n        this._explore.options,\n        this._org.active_building,\n    ]).pipe(\n        map(([lvl, { is_public }]) => {\n            if (!lvl || is_public) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem] no-subscript\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem] no-subscript\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels.pipe(\n        map((_) => _.filter((lvl) => !lvl.tags?.includes('parking')))\n    );\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <interactive-map\n            [src]=\"url | async\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n            [focus]=\"locate\"\n            [options]=\"{ controls: true }\"\n        ></interactive-map>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public locate = '';\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.locate = id;\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now())\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now())\n                      ),\n                      type: 'parking',\n                      zones: bld?.id,\n                  })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => {\n                const assigned =\n                    events.find((e) => e.asset_id === _.id)?.user_name ||\n                    _.assigned_to;\n                this._users[_.id] = assigned;\n                return !assigned;\n            })\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const features = [];\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                track_id: `parking:hover:${space.map_id}`,\n                location: `${space.map_id}`,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                z_index: 20,\n                data: { ...space, user: this._users[space.id], status },\n            });\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 1.1,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([])\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    } as SearchResult)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'maps_features',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n        this._maps_people_search,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    } as any)\n                            )\n                        )\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ];\n                results.sort((a, b) => a.name.localeCompare(b.name));\n                return results;\n            }\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n    private _panning = true;\n    private _last_action = '';\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = combineLatest([\n        this._state.spaces,\n        this._state.options,\n    ]).pipe(\n        filter(([_, { is_public }]) => !is_public),\n        map(([list]) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning && this._last_action === 'down') return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        if (space.bookable) this._statuses[space.id] = status || 'free';\n        else delete this._statuses[space.id];\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            if (!this._statuses[space.id]) continue;\n            const status = this._statuses[space.id];\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id] || 'not-bookable',\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300\n                        );\n                        this._last_action = 'down';\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this.bookSpace(space);\n                        this._last_action = 'up';\n                    },\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    is_public: boolean;\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        is_public: false,\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, initialised]) => initialised),\n        switchMap(([level]) =>\n            querySystems({\n                zone_id: level?.id || this._org.organisation.id,\n                limit: 50,\n            }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key) ||\n                    (key === 'zones-canvas' &&\n                        options.disable?.includes('zones'))\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: Partial<MapOptions>) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            is_public: false,\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base space-x-2 p-2\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                decrease\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-error text-error rounded h-10 w-10\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div\n                value\n                class=\"relative p-1 flex items-center justify-center w-16 h-10 rounded border border-base-300\"\n            >\n                <span *ngIf=\"!focused\">\n                    {{ (render_fn ? render_fn(value) : value) || '0' }}\n                </span>\n                <input\n                    type=\"text\"\n                    class=\"absolute inset-0 opacity-0 focus:opacity-100 p-2\"\n                    [(ngModel)]=\"value\"\n                    (focus)=\"focused = true\"\n                    (blur)=\"setValue(+value); focused = false\"\n                    limitInput\n                />\n            </div>\n            <button\n                increase\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-success text-success rounded h-10 w-10\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 999;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n    public focused = false;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        if (new_value < this.min) new_value = this.min;\n        if (new_value > this.max) new_value = this.max;\n        if ((new_value / this.step) % 1 !== 0) {\n            new_value =\n                Math.round(new_value * (1 / this.step)) / (1 / this.step);\n        }\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0]?.id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34]?.id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day?.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[14%] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    isAfter,\n    isBefore,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: `date-range-calendar`,\n    template: `\n        <div class=\"flex items-center justify-between\">\n            <div month class=\"font-medium px-2\">\n                {{ month | date: 'MMMM yyyy' }}\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button icon matRipple (click)=\"previousMonth()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextMonth()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            class=\"grid grid-cols-7 grid-rows-7 gap-1 w-[17.25rem] h-[17.25rem]\"\n        >\n            <div\n                class=\"col-span-full grid grid-cols-7 border-b border-base-200\"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60\"\n                >\n                    {{ weekday | date: 'EEE' }}\n                </div>\n            </div>\n            <button\n                *ngFor=\"let day of month_days; trackBy: trackByFn\"\n                class=\"relative h-9 w-9 hover:bg-base-200 rounded-full\"\n                [class.text-secondary-content]=\"day.is_start || day.is_end\"\n                [disabled]=\"day.disabled\"\n                (click)=\"selectDate(day.id)\"\n                (mouseenter)=\"setHoveredDate(day.id)\"\n            >\n                <div\n                    *ngIf=\"day.is_selected && !day.is_start && !day.is_end\"\n                    class=\"absolute inset-y-0 -inset-x-0.5 border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start && end_after_start\"\n                    class=\"absolute inset-y-0 -right-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_end && end_after_start\"\n                    class=\"absolute inset-y-0 -left-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start || day.is_end\"\n                    class=\"absolute inset-0 flex items-center justify-center bg-secondary rounded-full z-10\"\n                ></div>\n                <div\n                    matRipple\n                    class=\"absolute inset-0 flex items-center justify-center rounded-full z-20\"\n                    [class.opacity-30]=\"!day.is_month\"\n                >\n                    {{ day.id | date: 'd' }}\n                </div>\n                <div\n                    *ngIf=\"day.is_today\"\n                    class=\"absolute -inset-[3px] flex items-center justify-center border border-secondary rounded-full z-10\"\n                ></div>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DateRangeCalendarComponent {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public offset_weekday: number = 0;\n    /** Start date of the selected range */\n    @Input() public start: number;\n    /** End date of the selected range */\n    @Input() public end: number;\n    /** Month to display the calendar for */\n    @Input() public month = startOfDay(Date.now()).valueOf();\n    /** Emitter for when the start date changes */\n    @Output() public startChange = new EventEmitter<number>();\n    /** Emitter for when the end date changes */\n    @Output() public endChange = new EventEmitter<number>();\n\n    public hovered_date = null;\n\n    public weekdays = [];\n    public month_days = [];\n\n    public get end_after_start() {\n        return (\n            this.end &&\n            this.end > this.start &&\n            !isSameDay(this.end, this.start)\n        );\n    }\n\n    public ngOnInit() {\n        this._setWeekdays();\n        this._setMonthDays();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this._setWeekdays();\n            this._setMonthDays();\n        }\n        if (changes.start) {\n            this._setMonthDays();\n            this.month = this.start || Date.now();\n        }\n        if (changes.month) {\n            this._setMonthDays();\n        }\n        if (changes.end) this._setMonthDays();\n    }\n\n    public selectDate(date: number) {\n        if (!this.start || date < this.start) {\n            this.start = date;\n            this.startChange.emit(date);\n        } else {\n            this.end = date;\n            this.endChange.emit(date);\n        }\n        this._setMonthDays();\n    }\n\n    public setHoveredDate(date: number) {\n        if (!this.start) return;\n        this.end = date;\n        this._setMonthDays();\n    }\n\n    public trackByFn(index: number, day: any) {\n        return day.id;\n    }\n\n    public nextMonth() {\n        this.month = addMonths(this.month, 1).valueOf();\n        this._setMonthDays();\n    }\n\n    public previousMonth() {\n        this.month = addMonths(this.month, -1).valueOf();\n        this._setMonthDays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                disabled:\n                    (this.from_date && isBefore(date, this.from_date)) ||\n                    (this.to_date && isAfter(date, this.to_date)),\n                is_today: isSameDay(date, Date.now()),\n                is_start: isSameDay(date, this.start),\n                is_end: isSameDay(date, this.end),\n                is_month: isSameMonth(date, this.month),\n                is_selected:\n                    this.end &&\n                    date >= startOfDay(this.start).valueOf() &&\n                    date <= endOfDay(this.end).valueOf(),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { Component, ContentChild, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'date-range-field',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center rounded px-4 py-2 border border-neutral hover:border-base-content focus:outline-2 outline-base-content space-x-2 min-w-max\"\n            type=\"button\"\n            role=\"date-picker\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n        >\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ start_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <div>&ndash;</div>\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ end_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <app-icon class=\"text-2xl\">today</app-icon>\n        </button>\n        <div class=\"hidden\">\n            <ng-content select=\"input[startDate]\"></ng-content>\n            <ng-content select=\"input[endDate]\"></ng-content>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18.25rem] rounded bg-base-100 px-2 py-4\">\n                <date-range-calendar\n                    [month]=\"start_date?.control?.value || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (startChange)=\"setStartDate($event)\"\n                    (endChange)=\"setEndDate($event)\"\n                ></date-range-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DateRangeFieldComponent extends AsyncHandler {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean = false;\n    @Input() public short = false;\n\n    public readonly now = Date.now();\n\n    @ContentChild('startDate', { read: NgControl })\n    public start_date?: NgControl;\n    @ContentChild('endDate', { read: NgControl }) public end_date?: NgControl;\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    public setStartDate(date: number) {\n        if (!this.start_date) return;\n        this.start_date.control.setValue(date);\n    }\n\n    public setEndDate(date: number) {\n        this._tooltip?.close();\n        if (!this.end_date) return;\n        this.end_date.control.setValue(date);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\nimport { DateRangeFieldComponent } from './date-range-field.component';\nimport { DateRangeCalendarComponent } from './date-range-calendar.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DateRangeFieldComponent,\n    DateRangeCalendarComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ImageViewerComponent } from 'libs/components/src/lib/image-viewer.component';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    #file_input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n    @ViewChild('file_input') private _file_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        this.timeout(\n            'init_view_space',\n            () => {\n                const box = this._list_el.nativeElement.getBoundingClientRect();\n                this.view_space = Math.floor(box.width / 152);\n            },\n            100\n        );\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {\n        this._dialog.open(ImageViewerComponent, { data: url });\n    }\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                    this._file_input.nativeElement.value = '';\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new StaffUser();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            console.log('Place User:', user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        this.timeout('write', () => {\n            if (this._editor) {\n                const delta = this._editor.clipboard.convert(value);\n                this._editor.setContents(delta, 'silent');\n            } else {\n                this.timeout('write', () => this.writeValue(value));\n            }\n        });\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\nexport interface SupportRequestType {\n    name: string;\n    email: string;\n}\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"support_request_types?.length\"\n                >\n                    <label i18n>Issue Type</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Issue Type\"\n                            formControlName=\"issue_type\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of support_request_types\"\n                                [value]=\"type?.name || type\"\n                            >\n                                {{ type.name || type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n>\n                        Issue Description<span>*</span>\n                    </label>\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        issue_type: new FormControl(''),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get support_request_types(): SupportRequestType[] {\n        return this._settings.get('app.support_issue_types') || [];\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images, issue_type } =\n                this.form.value;\n            const support_email =\n                this.support_request_types.find(\n                    (type) => type.name === issue_type\n                )?.email || this.support_email;\n            await mod.execute('send_mail', [\n                support_email,\n                `Support Ticket from Workplace Application${\n                    issue_type ? ' - ' + issue_type : ''\n                }`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step as any });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst ACCEPTED_FILE_TYPES = ['text/csv', 'text/plain'];\nconst DENIED_FILE_TYPES = [\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input() public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file: File = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                if (\n                    !ACCEPTED_FILE_TYPES.includes(file.type) ||\n                    DENIED_FILE_TYPES.includes(file.type)\n                ) {\n                    notifyError('Only CSV files are supported');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n            <input\n                #input\n                matInput\n                keyboard\n                name=\"user-search\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event || '')\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"placeholder || 'Search for user...'\"\n                [matAutocomplete]=\"auto\"\n                (keyup.enter)=\"\n                    validate && validate(search_str) ? setValue(search_str) : ''\n                \"\n                (blur)=\"resetSearchString()\"\n                (focus)=\"cancelReset()\"\n            />\n            <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n            <mat-spinner *ngIf=\"loading\" matSuffix diameter=\"16\"></mat-spinner>\n        </mat-form-field>\n        <mat-autocomplete\n            #auto=\"matAutocomplete\"\n            (optionSelected)=\"setValue($event.option.value)\"\n        >\n            <mat-option\n                *ngFor=\"let option of user_list\"\n                (click)=\"setValue(option); blurInput()\"\n            >\n                <div class=\"leading-tight\">{{ option.name }}</div>\n                <div class=\"text-xs opacity-60\">\n                    {{ option.email }}\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"search_str && validate && validate(search_str)\"\n                class=\"relative pointer-events-none\"\n            >\n                <div\n                    class=\"absolute inset-0 px-4 pointer-events-auto\"\n                    (mousedown)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (touchstart)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (click)=\"\n                        setValue(search_str);\n                        $event.stopPropagation();\n                        $event.preventDefault()\n                    \"\n                >\n                    <div class=\"pointer-events-none\" i18n>\n                        Add external attendee \"{{ search_str }}\"\n                    </div>\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"!user_list?.length && (search_str || error)\"\n                [disabled]=\"!empty_fn\"\n                (click)=\"empty_fn()\"\n            >\n                {{ search_str ? 'No users found.' : '' }} {{ error }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = [\n    'desk',\n    'parking',\n    'asset-request',\n    'visitor',\n    'locker',\n    'group-event',\n];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(300).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        attendees: [],\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        permission: type === 'group-event' ? 'OPEN' : 'PRIVATE',\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            }\n            const user = {\n                id: _.body.id,\n                name: _.body.name,\n                email: _.body.email,\n                checked_in: false,\n            };\n            event.attendees.push(user);\n            return user;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/guests/:email/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            const guest = event.attendees.find(\n                (_) => _.email === decodeURIComponent(email)\n            );\n            if (!guest) {\n                throw {\n                    status: 404,\n                    message: `Unable to find guest with email ${email}`,\n                };\n            }\n            guest.checked_in = _.query_params.state === 'true';\n            return guest;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee/:email',\n        metadata: {},\n        method: 'DELETE',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            event.attendees = event.attendees.filter(\n                (_) => _.email !== decodeURIComponent(email)\n            );\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => [],\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => ({}),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** Identifier of building in relation to mapping */\n    public readonly map_id: string;\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.map_id = raw_data.map_id || '';\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n} from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { AsyncHandler, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay(1)\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id || this.buildings[0]?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(\n                filter(([_, bld]) => !!bld),\n                debounceTime(300)\n            )\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    /**\n     * Get list of levels for the given region\n     * @param region Region to list levels for\n     */\n    public levelsForRegion(region: Region = this.region): BuildingLevel[] {\n        const bld_list = this.buildingsForRegion(region);\n        return this.levels.filter(\n            (lvl) =>\n                lvl.parent_id &&\n                bld_list.find((bld) => bld.id === lvl.parent_id)\n        );\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({}))\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({}))\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({}))\n                    )\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        catchError(() => of({ data: {} as any })),\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None\n                                    ) || { settings_string: '' }\n                                );\n                            } catch {\n                                return {};\n                            }\n                        })\n                    )\n                    .toPromise(),\n            ]);\n        console.log(\n            'Building Settings:',\n            bld.display_name || bld.name,\n            bld.id,\n            settings\n        );\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        setTimeout(\n            () =>\n                (this._service.overrides = [\n                    this.buildingSettings(this.building?.id),\n                    this.regionSettings(this.region?.id),\n                    ...this._settings,\n                ]),\n            300\n        );\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                    [hide_levels]=\"view !== 'list'\"\n                    [viewing_map]=\"view === 'map'\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:flex-col sm:max-w-[20rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport {\n    flatten,\n    MapsPeopleService,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { addDays, endOfDay, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section\n                favs\n                class=\"space-y-2 pb-4\"\n                *ngIf=\"!viewing_map || !(using_mapspeople | async)\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"\n                    (features | async)?.length &&\n                    (!viewing_map || !(using_mapspeople | async))\n                \"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    @Input() public hide_levels: boolean;\n    @Input() public viewing_map: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly regions = this._org.region_list;\n\n    public readonly using_mapspeople = this._mapspeople.available$;\n\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _mapspeople: MapsPeopleService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setRegion(region: Region) {\n        this._org.region = region;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    public readonly styles = combineLatest([\n        this._event_form.spaces,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([spaces, free_spaces]) =>\n            spaces.reduce((styles, space) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_spaces.find((_) => _.id === space.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${space.map_id || space.id}`] = {\n                    fill:\n                        colours[`space-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this._event_form.options.subscribe(({ zone_ids }) => {\n                const level = this._org.levelWithID(zone_ids);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        console.log('Set Level', level);\n        this.setOptions({ zone_ids: [level?.id] });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\nconst ATTEMPT_COUNT: Record<string, number> = {};\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\nsetInterval(() => {\n    for (const id in ATTEMPT_COUNT) {\n        ATTEMPT_COUNT[id] = ATTEMPT_COUNT[id] - 1;\n        if (ATTEMPT_COUNT[id] <= 0) {\n            delete ATTEMPT_COUNT[id];\n        }\n    }\n}, 10 * 1000);\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (ATTEMPT_COUNT[space_id]) return EMPTY_SPACE;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({\n                in: space_id,\n                zone_id: this._org?.organisation.id,\n            }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (!id) return of([]);\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({\n        q,\n        fields: [\n            'id',\n            'name',\n            'email',\n            'username',\n            'organisation',\n            'department',\n        ].join(','),\n    });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public location_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        return (\n            this.work_overrides[date_string]?.location ||\n            this.work_preferences.find((_) => _.day_of_week === day)\n                ?.location ||\n            'wfo'\n        );\n    }\n\n    public get location_name() {\n        return this.location_name_time(Date.now());\n    }\n\n    public location_name_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        const pref =\n            this.work_overrides[date_string] ||\n            this.work_preferences.find((_) => _.day_of_week === day);\n        if (!pref) return false;\n        const start = pref.start_time;\n        const end = pref.end_time;\n        const now = date.getHours() + date.getMinutes() / 60;\n        return start <= now && now < end;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser } from '@placeos/common';\nimport { addDays, format, set, setDay, startOfWeek } from 'date-fns';\nimport { WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[40rem] max-w-full\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-[20rem] max-w-[calc(100%-2rem)] mx-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"flex-1 w-1/2\">{{ option_name }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2 mx-auto\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>{{\n                            option === 'wfh' ? 'home' : 'domain'\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a {{ option === 'aol' ? 'leave' : 'working' }}\n                        <span *ngIf=\"option !== 'aol'\"\n                            >from\n                            {{ option === 'wfh' ? 'home' : 'office' }}</span\n                        >\n                        day<br />\n                        {{ option === 'aol' ? 'Unavailable' : 'Available' }} for\n                        {{ option === 'wfh' ? 'online' : '' }} meetings\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Office Day Defaults\n                </h3>\n                <div\n                    class=\"flex items-center space-x-2 w-full overflow-hidden even:bg-base-200 rounded p-2\"\n                    *ngFor=\"let idx of available_weekdays\"\n                >\n                    <label class=\"w-24 min-w-0 m-0\">{{\n                        days[idx] | date: 'EEEE'\n                    }}</label>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"start_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                    ></a-time-field>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"end_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                        [from]=\"start_times[idx]\"\n                    ></a-time-field>\n                    <mat-form-field\n                        class=\"flex-2 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            [(ngModel)]=\"settings[idx].location\"\n                            (ngModelChange)=\"changed = true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of options\"\n                                [value]=\"type.id\"\n                            >\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Working from office' },\n        { id: 'wfh', name: 'Working from home' },\n        { id: 'aol', name: 'Away on Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n    public start_times: number[] = [];\n    public end_times: number[] = [];\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    constructor(private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.option = user.location || 'wfo';\n        if (this.settings?.length < 7) {\n            this.settings = new Array(7).fill({}).map((_, idx) => ({\n                day_of_week: idx as any,\n                start_time: 9,\n                end_time: 17,\n                location: 'wfo',\n            }));\n        }\n        this.start_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.start_time);\n            const minutes = Math.round((_.start_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this.end_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.end_time);\n            const minutes = Math.round((_.end_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this._initWeekdays();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const dow = new Date().getDay();\n        const today = format(Date.now(), 'yyyy-MM-dd');\n        var overrides = {};\n        overrides[today] = {\n            day_of_week: dow,\n            start_time: 9,\n            end_time: 17,\n            location: this.option,\n        };\n        for (const day of this.settings) {\n            const start = new Date(this.start_times[day.day_of_week]);\n            const end = new Date(this.end_times[day.day_of_week]);\n            day.start_time = start.getHours() + start.getMinutes() / 60;\n            day.end_time = end.getHours() + end.getMinutes() / 60;\n            if (day.day_of_week === dow) {\n                overrides[today].start_time = day.start_time;\n                overrides[today].end_time = day.end_time;\n            }\n        }\n        const user = await showUser('current').toPromise();\n        await updateUser(user.id, {\n            ...user,\n            work_preferences: this.settings,\n            work_overrides: overrides,\n        }).toPromise();\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            location.reload();\n            this._dialog_ref.close();\n        }\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n}\n"],"x_google_ignoreList":[]}