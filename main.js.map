{"version":3,"mappings":"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,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIT,EAAUE,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKF,EAAUC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,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","names":["i0","ctx_r1","oxw","$event","AccessibilityTooltipComponent","constructor","_data","_settings","this","n","v","saveUserSetting","l","_a","close","dark_mode","get","accessible","font_size","CustomTooltipData","selectors","ctx","BookingCardComponent","_org","type","u","booking","y","_b","day","date","Date","now","isSameDay","format","location","level","levelWithID","zones","display_name","name","period","start","duration","end","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","ctx_r2","BuildingSelectComponent","building_list","active_building","b","building","r","EventCardComponent","m","event","B","ctx_r10","ctx_r12","ctx_r14","ctx_r15","ctx_r16","ctx_r17","ctx_r18","grp_r19","EventTimelineComponent","BaseClass","dayjs","valueOf","EventEmitter","ngOnInit","model","hour","minute","generateBlocks","updateTime","interval","tomorrow","add","startOf","timeout","updateStartEnd","diff","ngOnChanges","changes","groups","processGroups","updatePeriod","blocks","time","isBefore","push","id","display","short","divider","grp","blk_end","events","filter","i","event_time","isAfter","isSame","Object","checkInUseBlocks","map","unavailable","hoursToDate","blk","find","t","timeToDate","timestamp","parts","split","start_time","today","resetMove","move","setMove","setTime","block","dateChange","emit","e","content","center","x","touches","length","clientX","clientY","content_box","nativeElement","getBoundingClientRect","percent_w","left","width","percent_h","top","height","percent","vertical","diff_time","block_size","ceil","max","durationChange","FooterMenuComponent","features","GlobalSearchComponent","_service","super","search_results","loading","s","filter_str","setFilter","showInput","show","_input_el","focus","clearTimeout","hideInput","HelpTooltipComponent","g","tiles","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSlideToggleModule","MatSliderModule","SharedComponentModule","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","ComponentsModule","FormFieldsModule","TopMenuComponent","_router","show_text","url","includes","TopbarComponent","UserControlsComponent","logo","title","value","search","user","currentUser","join","version","VERSION","logout","href","VerticalTimelineComponent","timeline_start","timeline_end","endOf","disabled","active_move","off","offset","end_time","active_start","active_length","MOCK_MENU","unit_price","category","tags","options","group","differenceInMinutes","event_start","event_end","mx","predictableRandomInt","event_id","invoice_number","charge_code","deliver_at","items","Array","fill","_","idx","quantity","DOMAIN","PREDEF_USERS","ACTIVE_USER","email","MOCK_STAFF","toLowerCase","concat","MOCK_GUESTS","visit_expected","extension_data","vaccination_proof","id_data","MOCK_ORGS","created_at","updated_at","description","count","capacity","parent_id","triggers","MOCK_BUILDINGS","levels","MOCK_LEVELS","bld","num","map_id","substr","endsWith","code","mockLevel","reduce","p","c","MOCK_METADATA","current","contacts","details","first_name","last_name","PARKING_SPACES","ZONE_MOCKS","registerMockEndpoint","path","metadata","method","callback","request","query_params","status","message","bindings","area_management","location_services","contact_tracing","catering","route_params","generateMockDeskMetadata","position","padString","assignee","bookable","assigned_to","assigned_name","generateParkingSpaces","map_regions","areas","properties","label_location","geometry","coordinates","body","DESK_FEATURES","desks","zone","lvl","registerMocks","randomSpaceFeatures","f","numFeatures","res","el","indexOf","MOCK_SPACES","d","generateMockSpace","EVENT_TIME","nextEventTime","save","next","unix","event_status","randomStatus","rnd","MOCK_EVENTS","index","PEOPLE","attendees","sort","a","space","resource","unshift","unique","meeting_url","host","calendar","creator","organizer","checked_in","response_status","private","timezone","all_day","X","recurring","recurrence","attachments","system","meeting_id","meeting_provider","generateCateringOrder","setup","breakdown","event_spaces","forEach","USER_MOCKS","person","q","decodeURIComponent","generateLocation","LOCATION_TYPES","level_spaces","meeting","last_seen","subtract","geo","lat","lon","help","icon","inputs","controls","connected","active","input_list","output_list","env_sources","keys","outputs","source","key","$power","state","console","log","$share","$route","input","output","$updateState","routes","following","$unroute","$connect","$disconnect","$link","$merge","$split","$notify","$preset","$volume","volume","$mute","mute","$unmute","$environment","$lock","locked","$unlock","data","Mic1","mod","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display3","Display4","Display5","states","createSystemModule","overrides","RoomModule","_space","$start_meeting","last_booking_started","$end_meeting","$book_now","len","o","$poll_bookings","bookings","ee","re","current_booking","timePeriodsIntersect","next_booking","pending","subSeconds","pending_before","addSeconds","pending_period","w","updateBookings","createBookingsModule","MockBookingModule","$locate_user","username","$update","area","randomInt","updateLocations","MAC_LOOKUP","$check_ownership_of","mac_address","staff","no","str","MockAreaManagementModule","overview","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","area_id","users","fixed","at_location","mac","Md5","coordinates_from","s2_cell_id","variance","map_width","map_height","presets","$pan","dir","$tilt","tilt","$recall","$save_preset","remaining","$start","setInterval","clearInterval","$pause","$resume","$stop","createCaptureModule","CaptureModule","$econtrol","args","createMeetingPushModule","MeetingPushModule","test","Status","$show_camera_pip","visible","selfview","$mic_mute","mic_mute","$presentation_mode","presentation_mode","$hangup","$call_place_on_hold","calls","$call_resume","$video_layout","layout","video_layout","$dtmf_send","digit","$dial","dial_number","Promise","setTimeout","createVideoConferenceModule","VideoConferenceModule","CONTACT_EVENTS","filterFn","itm","contact_time","$close_contacts","beginning","addDays","ending","randomString","getUnixTime","setHours","createContactTracingModule","ContactTracingModule","SYSTEM_MOCKS","registerSystem","System","Bookings","ContactTracing","AreaManagement","createAreaManagementModule","LocationServices","MockLocationServicesModule","Camera","CameraModule","createCameraModule","Display","DisplayModule","createDisplayModule","Microphone","MicrophoneModule","createMicrophoneModule","Capture","MeetingPush","VidConf","mockSystem","createSystem","EVENT_MOCKS","zone_ids","period_start","period_end","new_event","N","item","CALENDAR_MOCKS","user2","user3","summary","primary","can_edit","hidden","handleSpaceAvailability","systems","system_ids","has","MOCK_ASSETS","images","set","subDays","seconds","milliseconds","TYPES","TRACKING","MOCK_BOOKINGS","lvls","lvl_spaces","Ft","approved","approver","asset_count","booking_start","booking_end","user_id","user_name","user_email","booked_by_name","booked_by_email","asset_id","asset_name","booking_type","access","rejected","approver_id","approver_name","approver_email","plate_number","assets","amount","tracking","space_id","Ue","V","At","fe","me","at","BOOKING_MOCKS","updateBooking","req","ASSET_MOCKS","updateAsset","window","global","AppComponent","_tracing","_spaces","_cache","_snackbar","_hotkey","_clipboard","MOCKS","listen","localStorage","setItem","getItem","reload","copy","token","refreshToken","notifySuccess","rt","clipboard","readText","then","tkn","clientId","addHours","setNotifyOutlet","initialised","pipe","first","toPromise","setAppName","settings","mock","origin","setupPlace","catch","error","setupCache","local_login","onInitError","current_user","setDefaultCreator","setInternalUserDomain","dsn","sample_rate","Sentry","tracesSampleRate","initSentry","isMock","is_logged_in","invalidateToken","component","UnauthorisedComponent","MisconfiguredComponent","canActivate","AuthorisedUserGuard","canLoad","loadChildren","DashboardModule","AppLandingModule","BookModule","ExploreModule","ControlModule","DirectoryModule","AppScheduleModule","WhatsOnModule","redirectTo","pathMatch","AppRoutingModule","useHash","SharedOverlaysModule","AppModule","bootstrap","provide","ErrorHandler","useValue","showDialog","deps","Router","imports","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","enabled","HttpClientModule","MatNativeDateModule","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","err","DeskConfirmModalComponent","can_set_date","reason","desk_list","hide_reason","can_set_host","confirm","MAT_DIALOG_DATA","ctx_r3","DeskQuestionsModalComponent","form","FormGroup","travelled","FormControl","Validators","unwell","contact","submit","markAllAsTouched","valid","failure","notifyError","M","roundToNearestMinutes","nearestTo","abs","Intl","DateTimeFormat","resolvedOptions","timeZone","booked_by_id","Y","F","_c","toJSON","is_today","is_done","map_url","centered_at","desk_ids","element","document","createElement","style","appendChild","createViewer","viewer","getViewer","point","mappings","dist","closest","desk","sqrt","removeChild","removeViewer","BOOKINGS_ENDPOINT","query","toQueryString","list","Booking","encodeURIComponent","saveBooking","patch","put","post","createBooking","BOOKING_URLS","BookingFormService","_dialog","BehaviorSubject","JSON","parse","sessionStorage","_loading","asObservable","_options","shareReplay","distinctUntilKeyChanged","switchMap","listChildMetadata","flatten","Mt","Ut","of","tap","localeCompare","combineLatest","_form_value","debounceTime","queryBookings","zone_id","asset","Wt","every","It","Gt","bkn","available_assets","asset_list","$t","Nt","qt","members","Pt","pop","subscription","subscribe","NavigationEnd","clearForm","setOptions","view","_view","getValue","_form","_booking","newForm","it","booked_by","valueChanges","booker","patchValue","emitEvent","generateBookingForm","storeForm","setView","resetForm","removeItem","stringify","loadForm","confirmPost","checkQuestions","openConfirmModal","z","postFormForGroup","postForm","ignore_check","getInvalidFields","checkResourceAvailable","result","last_success","extra_members","take","active_asset","_getNearbyResources","group_members","all","Yt","ref","open","race","componentInstance","afterClosed","allowed_bookings","nearby_assets","findNearbyFeature","factory","DesksService","bookDesk","error_on_host","gt","success","startOfDay","endOfDay","makeDeskBooking","for_user","_d","booking_data","G","CalendarService","_calendars","queryCalendars","querySpaceFreeBusy","queryCalendarAvailability","init","load","_initialised","calendars","getFreeBusyDate","checkSpacesAvailability","old_booking","availability","h","findIndex","splice","Space","starts_at","ends_at","CALENDAR_ENDPOINT","Calendar","calendarsToSpaces","org","cal","L","discount_cap","accept_points","total_cost","options_string","T","system_id","CateringItem","item_count","getTime","INVALID_STANDALONE_KEYS","HotkeysService","addEventListener","mapKey","last_down","keydown_states","keydown_observers","counter","combo_end","preventDefault","combo","combination","validCombination","registered_combos","last_key","updateCombinationEndList","presses","total","non_meta","DEFAULT_SETTINGS","debug","composer","domain","route","protocol","port","use_domain","app","short_name","logo_light","src","logo_dark","can_deliver","general","banner","copyright","link","class","background","columns","multiple_spaces","desk_start","can_book_for_others","has_catering","space_display","show_images","directory","show_avatars","min_search_length","explore","colors","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","tracking_id","hide_contacts","schedule","color","departments","dirty","raw","hash","distance","tag","semver","suffix","semverString","_current_user","jest","Q","showUser","delay","retry","StaffUser","SettingsService","_title","built","_overrides","_applyCssVariables","_observables","_subjects","getTitle","setTitle","_app_name","pathname","trim","toUpperCase","application","_user_settings","_applyUserSettings","showMetadata","app_name","mt","lt","_pending_settings","getItemWithKeys","override_settings","override","slice","_savePendingChanges","variable_map","css_string","getElementById","head","innerText","updateMetadata","classList","remove","fontSize","trigger","transition","opacity","animate","ANIMATION_SHOW_CONTRACT_EXPAND","_timer","snackbar","action","on_action","config","Error","snackbar_ref","panelClass","dismiss","onAction","msg","notify","info","cache","isEnabled","__awaiter","checkForUpdate","activateUpdate","notifyInfo","pattern","charAt","hostname","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","hasOwnProperty","is_initialised","ngOnDestroy","destroy","_timers","_intervals","_subscriptions","unsub","fn","Function","Subscription","unsubscribe","unsubWith","contains","subs","k","stream","force","array","pos","arr","random","chars","dialog","ConfirmModalComponent","CONFIRM_METADATA","csv","delimiter","objPattern","RegExp","arrMatches","arrData","exec","headers","row","filename","contents","setAttribute","click","an_array","stack","isArray","reverse","start1","end1","start2","end2","rand","sfc32","imul","charCodeAt","xmur3","seed","localeString","toLocaleTimeString","querySelector","getAttribute","navigator","language","is24HourTime","invalid","ActionIconComponent","ne","PopoutMenuComponent","MapPinComponent","_details","stroke","show_message","MAP_FEATURE_DATA","MapRadiusComponent","_el","radius","zoom","last_seen_at","formatDistanceToNow","ngAfterViewInit","updateRadius","box","StatusOverlayComponent","MapLocateModalComponent","processFeature","processStyles","styles","R","style_map","track_id","z_index","$localize","_access","checkUser","segments","onlineState","can_activate","navigate","PLACEOS_APP_ACCESS","MAT_MODULES","MatDatepickerModule","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","MAT_DATE_LOCALE","IconComponent","i2","i1","GlobalBannerComponent","InteractiveMapComponent","i3","ImageCarouselComponent","ctx_r4","maxHeight","maxWidth","_dialog_ref","confirm_text","cancel_text","disableClose","onConfirm","CustomTooltipComponent","_element","_overlay","_injector","hover","_updateInjector","_overlay_ref","x_pos","y_pos","_updateType","_portal","create","hasBackdrop","backdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","injector","Injector","providers","parent","CdkPortal","has_viewed","GlobalLoadingComponent","online","isOnline","InjectionToken","ratio$","_on_changes","ratio","svg_ratio$","svg_ratio","zoom$","onResize","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","labels","actions","updateView","updateFeatureList","updateViewer","feature_list","desired_zoom","desired_center","_outlet_el","U","E","D","rect","trackByFn","feature","_feature_list","toArray","old_injectors","injectors","P","_extra_data","MapPolygonComponent","_cdr","scale","zoom_value","data$","processPoints","points","I","A","x_min","x_max","y_min","y_max","range","point_list","detectChanges","SafePipe","sanitizer","transform","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","pure","SecurityContext","SanitizePipe","sanitize","RESOURCE_URL","URL","SCRIPT","STYLE","HTML","UserAvatarComponent","initials","ctx_r6","ctx_r8","DEFAULT_KEYS","VirtualKeyboardComponent","focusInput","blur","bottom","centerHorizontally","handleKeyPress","cursor_pos","selectionStart","dispatchEvent","InputEvent","updateKeyState","selectionEnd","keyset","endInFuture","control","S","organiser","resources","recurring_master_id","master","visitor_type","K","needs_space","needs_parking","setValue","nt","disable","setMinutes","days","EventFormService","CalendarEvent","ft","bt","pt","available_spaces","some","_event","generateEventForm","spaces","checkSelectedSpacesAreAvailable","saveEvent","ignore","space_list","_default_user","User","online_meeting_url","online_meeting_id","online_meeting_provider","range_start","range_end","days_of_week","old_system","eventStatus","is_external","CateringOrder","ext","guests","obj","can_check_in","EVENTS_ENDPOINT","updateEvent","createEvent","del","response_type","DURATION_MAP","month","months","week","weeks","DEFAULT_RULES","auto_approve","stringToMinutes","rulemap","ruleset","checkRulesMatch","rules","matches","conditions","is_before","addToDate","is_after","min_length","max_length","ExploreSearchService","_emergency_contacts","_filter","Zt","search_fn","catchError","_user_search","results","searchStaff","sys_id","binding","getModule","contacts_map","bind","SharedExploreModule","OverlayModule","ExploreParkingService","_state","active_levels","_poll","Ct","Et","forkJoin","Qt","week_events","day_events","available","_updateParkingSpaces","colours","can_book","DEFAULT_COLOURS","setStyles","setLabels","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","size","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","VanillaQR","gexp","glog","N1","N3","N2","N4","genframe","C","eccblocks","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","insertBefore","innerHTML","toImage","Image","toDataURL","ExploreBookQrComponent","qr","generateQRCode","ctx_r7","ExploreBookingModalComponent","max_duration","on_error","querySpaceAvailability","ExploreDeskInfoComponent","tries","parentElement","parseInt","available_until","ExploreDesksService","_bookings","j","Desk","_statuses","processBindingChange","_in_use","_presence","in_use","presence","is_used","has_presence","processDesks","enable_booking","_bind","_state_change","startPolling","_desk_bookings","stopPolling","devices","processDevices","updateStatus","desk_id","device","Z","ExploreDeviceInfoComponent","setFeatures","full_size","no_scale","_users","staff_name","book_fn","_setBookingTime","J","setActions","until","SetDatetimeModalComponent","manufacturer","os","ssid","toFixed","bg_color","distance_color","addSuffix","diameter","loadUser","execute","ExploreMapControlComponent","_route","relativeTo","queryParams","queryParamMap","params","setLevel","ExploreMapViewComponent","_s","_desks","_zones","map_styles","map_positions","map_features","map_actions","map_labels","toggleZones","reset","locateSpace","showStaff","locateUser","_locateFeature","has_coordinates","parseFloat","locate_details","module","locations","MapLocation","priority","W","ExploreSpacesService","ExploreZonesService","ExploreSpaceInfoComponent","show_features","free","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","bookSpace","ExploreStateService","_level","_message","_positions","_features","disable_features","_actions","disable_actions","_labels","disable_labels","_styles","style_mappings","text","disable_styles","positions","active_level","level_list","levelsForBuilding","old_options","setPositions","feature_map","actions_map","labels_map","parseData","zone_metadata","hide_label","draw_polygon","_capacity","_location","getCenterPoint","_draw","_points","filled","temperature","people_count","people_count_sum","humidity","queue_size","colour","ExploreZoomControlComponent","min","ActionFieldComponent","performAction","show_tooltip","AssetListFieldComponent","_onChange","_onTouch","new_value","writeValue","CateringListFieldComponent","CounterComponent","ctrl_key","step","shift_key","registerOnChange","registerOnTouched","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","decls","FieldDateAdapter","NativeDateAdapter","displayFormat","FIELD_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","from","_from","_to","addYears","date_string","toISOString","old_date","new_date","getHours","getMinutes","formatISO","setDisabledState","DateAdapter","useClass","MAT_DATE_FORMATS","_r0","DurationFieldComponent","duration_options","generateDurationOptions","option","specialPreprops","SpaceListFieldComponent","changeSpaces","edit_space","NewSpaceSelectModalComponent","removeSpace","TimeFieldComponent","show_select","_time_options","generateAvailableTimes","no_past_times","time_options","timeFormatString","startOfMinute","showSelect","select_field","openedChange","datestamp","show_past","ctx_r11","ctx_r13","UserListFieldComponent","ENTER","COMMA","search$","validateEmail","openNewUserModal","addUserFromEmail","addUser","active_list","removeUser","a_user","addUsersFromFile","target","file","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","csvToJson","staff_id","USER_DOMAIN","internal_emails","phone","downloadCSVTemplate","downloadFile","displayFn","NewUserModalComponent","UserSearchFieldComponent","Subject","distinctUntilChanged","searchGuests","query_fn","search_str","search_results$","user_list","resetSearchString","active_user","ElementRef","PlaceZone","qr_code","raw_data","setting","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","BuildingLevel","building_id","_roles","roles","_lockers","lockers","locker_structure","_systems","_phone_numbers","phone_numbers","longitude","latitude","room_configurations","attributes","searchables","neighbourhoods","lvl_features","level_id","catering_hours","visitor_space","holding_bay","address","orientations","booking_details","booking_rules","catering_restricted_from","currency","role","role_names","featuresForLevel","OrganisationService","_buildings","_levels","_active_building","buildingSettings","building_settings","_building_settings","bld_id","organisation","_organisation","buildings","id_list","orgs","loadOrganisation","loadBuildings","loadLevels","loadSettings","org_list","queryZones","auth","authority","org_zone","Organisation","limit","Building","available_room_configs","prev","curr","app_settings","global_settings","saveBuilding","favorites","toggleFavourite","fav_list","ctx_r5","SpaceSelectItemComponent","ctx_r21","ctx_r28","SpaceSelectModalComponent","filterSpacesFromRules","filtered_spaces","multiple","space_map","spaceSelected","SpaceDetailsComponent","_updateFeature","SpaceListComponent","_event_form","isFavourite","selectSpace","onSelect","SpaceFiltersComponent","SpaceFiltersDisplayComponent","_bsheet","_updateLocation","removeFeature","feat","i8","i4","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","support_url","linked_rooms","image","configurations","SpacesService","_list","loadSpaces","predicate","_compare","valid_spaces","querySystems","sys","generateUserForm","saveChanges","new_user","UserFormComponent","hasError","touched","st","i5","GuestUser","STAFF_ENDPOINT","notes","photo","required","sys_admin","support","department","assistance_required","preferred_beverage","accepted_terms_conditions","card_number","fields","O"],"sources":["./apps/workplace/src/app/components/accessibility-tooltip.component.ts","./apps/workplace/src/app/components/booking-card.component.ts","./apps/workplace/src/app/components/building-select.component.ts","./apps/workplace/src/app/components/event-card.component.ts","./apps/workplace/src/app/components/event-timeline/event-timeline.component.html","./apps/workplace/src/app/components/event-timeline/event-timeline.component.ts","./apps/workplace/src/app/components/footer-menu.component.ts","./apps/workplace/src/app/components/global-search.component.ts","./apps/workplace/src/app/components/help-tooltip.component.ts","./apps/workplace/src/app/components/shared.module.ts","./apps/workplace/src/app/components/top-menu.component.ts","./apps/workplace/src/app/components/topbar.component.ts","./apps/workplace/src/app/components/user-controls.component.ts","./apps/workplace/src/app/components/vertical-timeline/vertical-timeline.component.html","./apps/workplace/src/app/components/vertical-timeline/vertical-timeline.component.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/components/src/lib/app.component.ts","./apps/workplace/src/app/app-routing.module.ts","./apps/workplace/src/app/overlays/overlays.module.ts","./apps/workplace/src/app/app.module.ts","./apps/workplace/src/environments/environment.prod.ts","./apps/workplace/src/main.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/desk.service.ts","./libs/calendar/src/lib/calendar.service.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/common/src/lib/hotkeys.service.ts","./apps/workplace/src/environments/settings.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/settings.service.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/base.class.ts","./libs/common/src/lib/general.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/lib/validators.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/helpers.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/asset-list-field.component.ts","./libs/form-fields/src/lib/catering-list-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.utilities.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">Display & Accessibility</div>\n            </div>\n            <!-- <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\">Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"applySetting('dark_mode', $event)\"\n                ></mat-slide-toggle>\n            </div> -->\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\">Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-gray-200 text-center\">\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2\"\n                        [min]=\"10\"\n                        [max]=\"22\"\n                        [ngModel]=\"font_size\"\n                        (ngModelChange)=\"applySetting('font_size', $event)\"\n                        [step]=\"2\"\n                    ></mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent {\n\n    public get dark_mode() {\n        return !!this._settings.get('dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this._settings.saveUserSetting(n, v);\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\">{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date:'z' }})</span>\n        </h4>\n        <a\n            matRippleColor\n            class=\"w-full\"\n            [routerLink]=\"['/schedule', 'view', booking?.id, 'booking']\"\n            *ngIf=\"booking\"\n        >\n            <div class=\"w-full bg-white rounded shadow py-2 relative\">\n                <h4 class=\"px-2\">{{ booking?.title }}</h4>\n                <div class=\"flex m-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"booking?.status === 'approved'\"\n                        [class.bg-yellow-500]=\"booking?.status === 'tentative'\"\n                        [class.bg-red-600]=\"booking?.status === 'declined'\"\n                        [class.bg-gray-200]=\"!booking?.status\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"booking?.status === 'approved'\"\n                            [class.bg-pending]=\"booking?.status === 'tentative'\"\n                            [class.bg-error]=\"booking?.status === 'declined'\"\n                            [class.bg-gray-200]=\"!booking?.status\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-gray-200 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-2\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{ type }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    constructor(private _org: OrganisationService) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\">\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\">\n            <span *ngIf=\"show_day\">{{ day }}, </span>\n            {{ event?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            matRippleColor\n            class=\"w-full\"\n            [routerLink]=\"['/schedule', 'view', event?.id, 'event']\"\n            *ngIf=\"event\"\n        >\n            <div class=\"w-full bg-white rounded shadow py-2 relative\">\n                <h4 class=\"px-2\">{{ event?.title }}</h4>\n                <div class=\"flex m-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"event?.status === 'approved'\"\n                        [class.bg-yellow-500]=\"event?.status === 'tentative'\"\n                        [class.bg-red-600]=\"event?.status === 'declined'\"\n                        [class.bg-gray-200]=\"!event?.status\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"event?.status === 'approved'\"\n                            [class.bg-pending]=\"event?.status === 'tentative'\"\n                            [class.bg-error]=\"event?.status === 'declined'\"\n                            [class.bg-gray-200]=\"!event?.status\"\n                        >\n                            <app-icon>\n                                {{\n                                    event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-gray-200 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{\n                                event?.space?.level?.display_name ||\n                                    event?.space?.level?.name\n                            }},\n                            {{\n                                event?.space?.display_name || event?.space?.name\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-2\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class EventCardComponent {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        return '';\n    }\n\n    public get period() {\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n}\n","<div [class]=\"'event-timeline' + (klass ? ' ' + klass : '')\">\n    <div class=\"times\" (window:mouseup)=\"resetMove()\" (window:touchend)=\"resetMove()\">\n        <div class=\"row divider\">\n            <div class=\"header\"></div>\n            <div class=\"line\">\n                <div class=\"mini-block\" *ngFor=\"let blk of model.blocks || []\">\n                    <div class=\"time\" *ngIf=\"blk.hour\">\n                        <span>{{ blk.short }}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"content\">\n        <div class=\"overlay row\">\n            <div class=\"header\"></div>\n            <div class=\"line\" #overlay (mousemove)=\"move($event)\" (touchmove)=\"move($event)\">\n                <div\n                    class=\"mini-block\"\n                    *ngFor=\"let blk of model.blocks || []\"\n                    [class.unavailable]=\"blk.unavailable\"\n                    (click)=\"setTime(blk)\"\n                >\n                    <div class=\"bar\" [class.hour]=\"blk.hour\" [class.divider]=\"blk.divider\"></div>\n                </div>\n                <div\n                    class=\"current-time\"\n                    *ngIf=\"model.today > 0\"\n                    [style.left]=\"vertical ? '' : model.today * 100 + '%'\"\n                    [style.top]=\"vertical ? model.today * 100 + '%' : ''\"\n                ></div>\n                <div\n                    class=\"selected-time\"\n                    *ngIf=\"can_select\"\n                    [style.left]=\"vertical ? '' : model.start_time * 100 + '%'\"\n                    [style.top]=\"vertical ? model.start_time * 100 + '%' : ''\"\n                    [style.width]=\"vertical ? '' : model.duration * 100 + '%'\"\n                    [style.height]=\"vertical ? model.duration * 100 + '%' : ''\"\n                >\n                    <div\n                        class=\"inner\"\n                        (mousedown)=\"setMove('start')\"\n                        (touchstart)=\"setMove('start')\"\n                    ></div>\n                    <div\n                        class=\"knob start\"\n                        (mousedown)=\"setMove('start')\"\n                        (touchstart)=\"setMove('start')\"\n                    ></div>\n                    <div\n                        class=\"knob end\"\n                        (mousedown)=\"setMove('end')\"\n                        (touchstart)=\"setMove('end')\"\n                    ></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" *ngFor=\"let grp of this.model.groups || []\" [class.divider]=\"grp.divider\">\n            <div class=\"header\">\n                <div class=\"text\">{{ grp.name }}</div>\n                <div class=\"icon\" *ngIf=\"grp.remove\" (click)=\"grp.remove()\">\n                    <i class=\"material-icons\">close</i>\n                </div>\n            </div>\n            <div class=\"line\">\n                <div class=\"mini-block\" *ngFor=\"let blk of grp.blocks\">\n                    <div\n                        class=\"item\"\n                        *ngFor=\"let event of blk.events\"\n                        [style.width]=\"vertical ? '' : (event.duration / 5) * 100 + '%'\"\n                        [style.height]=\"vertical ? (event.duration / 5) * 100 + '%' : ''\"\n                    >\n                        <div class=\"text\">{{ event.text }}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    OnChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ITimelineEventGroup {\n    name?: string;\n    divider?: boolean;\n    can_toggle?: boolean;\n    disabled?: boolean;\n    required?: boolean;\n    events?: ITimelineEvent[];\n    blocks?: ITimelineBlock[];\n    remove?: () => void;\n}\n\nexport interface ITimelineEvent {\n    start: number;\n    duration: number;\n    text?: string;\n}\n\ninterface ITimelineBlock {\n    id: string;\n    display?: string;\n    short?: string;\n    hour?: boolean;\n    divider?: boolean;\n    unavailable?: boolean;\n    events?: ITimelineEvent[];\n}\n\n@Component({\n    selector: 'event-timeline',\n    templateUrl: './event-timeline.component.html',\n    styleUrls: ['./event-timeline.component.scss'],\n})\nexport class EventTimelineComponent extends BaseClass implements OnInit, OnChanges {\n    /** Groups and events */\n    @Input() public groups: ITimelineEventGroup[];\n    /** Selected date */\n    @Input() public date = dayjs().valueOf();\n    /** Selected duration in min */\n    @Input() public duration = 30;\n    /** Whether time can be changed */\n    @Input() public can_select = true;\n    @Input() public klass: string;\n\n    /** Output emitter */\n    @Output() public dateChange = new EventEmitter<number>();\n    @Output() public durationChange = new EventEmitter<number>();\n    @Output() public groupsChange = new EventEmitter<ITimelineEventGroup[]>();\n\n    public vertical = false;\n    public model: { [name: string]: any } = {};\n\n    @ViewChild('overlay', { static: false }) public content: ElementRef<HTMLDivElement>;\n\n    public ngOnInit(): void {\n        this.model.start = dayjs(this.date).hour(6).minute(30);\n        this.model.end = dayjs(this.date).hour(21).minute(30);\n        this.generateBlocks();\n        this.updateTime();\n        this.interval('timer', () => this.updateTime(), 60 * 1000);\n        const now = dayjs();\n        const tomorrow = dayjs().add(1, 'd').startOf('d');\n        this.timeout(\n            'update_date',\n            () => {\n                this.updateStartEnd();\n                this.interval('update_date', () => this.updateStartEnd(), 24 * 60 * 60 * 1000);\n            },\n            Math.floor(tomorrow.diff(now, 's'))\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.groups) {\n            this.processGroups();\n        }\n        if (changes.date || changes.duration) {\n            this.updateStartEnd();\n        }\n    }\n\n    public updateStartEnd() {\n        this.model.start = dayjs(this.date).hour(6).minute(30);\n        this.model.end = dayjs(this.date).hour(21).minute(30);\n        this.updatePeriod();\n        this.updateTime();\n    }\n\n    public generateBlocks() {\n        const start = this.model.start;\n        const end = this.model.end;\n        const blocks: ITimelineBlock[] = [];\n        for (let time = dayjs(start); time.isBefore(end); time = time.add(5, 'm')) {\n            blocks.push({\n                id: time.format('HH:mm'),\n                display: time.format('hh:00 a'),\n                short: time.format('hh a'),\n                hour: time.minute() === 0,\n                divider: time.minute() % 30 === 0,\n            });\n        }\n        this.model.blocks = blocks;\n    }\n\n    public processGroups() {\n        this.timeout(\n            'process',\n            () => {\n                this.model.groups = [];\n                const date = dayjs(this.model.start);\n                const end = this.model.end;\n                for (const grp of this.groups || []) {\n                    const blocks: ITimelineBlock[] = [];\n                    for (let time = dayjs(date); time.isBefore(end); time = time.add(5, 'm')) {\n                        const blk_end = dayjs(time).add(5, 'm');\n                        let events = [];\n                        if (grp.events) {\n                            events = grp.events.filter((i) => {\n                                const event_time = dayjs(this.date)\n                                    .hour(Math.floor(i.start))\n                                    .minute(Math.floor((i.start * 60) % 60));\n                                return (\n                                    (event_time.isAfter(time, 'm') ||\n                                        event_time.isSame(time, 'm')) &&\n                                    event_time.isBefore(blk_end, 'm')\n                                );\n                            });\n                        }\n                        blocks.push({\n                            id: time.format('HH:mm'),\n                            events,\n                        });\n                    }\n                    this.model.groups.push({ ...grp, blocks });\n                }\n                this.checkInUseBlocks();\n            },\n            20\n        );\n    }\n\n    public checkInUseBlocks() {\n        if (!this.model.blocks) {\n            return;\n        }\n        const blocks: ITimelineBlock[] = this.model.blocks.map((i) => ({\n            ...i,\n            unavailable: false,\n        }));\n        for (const grp of this.model.groups) {\n            for (const event of grp.events || []) {\n                const start = this.hoursToDate(event.start);\n                const end = dayjs(start).add(event.duration, 'm');\n                for (let time = dayjs(start); time.isBefore(end); time = time.add(5, 'm')) {\n                    const display = time.format('HH:mm');\n                    const blk = blocks.find((i) => i.id === display);\n                    if (blk) {\n                        blk.unavailable = true;\n                    }\n                }\n            }\n        }\n        this.model.blocks = blocks;\n    }\n\n    public hoursToDate(time: number) {\n        let t = dayjs()\n            .startOf('d')\n            .hour(Math.floor(time))\n            .minute(Math.floor((time * 60) % 60));\n        t = t.minute(Math.floor(t.minute() / 5) * 5);\n        return t;\n    }\n\n    public timeToDate(timestamp: string) {\n        const parts = timestamp.split(':');\n        let t = dayjs()\n            .startOf('d')\n            .hour(+parts[0])\n            .minute(+parts[1]);\n        t = t.minute(Math.floor(t.minute() / 5) * 5);\n        return t;\n    }\n\n    public updatePeriod() {\n        const start = dayjs(this.date).startOf('m');\n        const period = this.model.end.diff(this.model.start, 'm') / 60;\n        this.model.start_time = start.diff(this.model.start, 'm') / 60 / period;\n        this.model.duration = this.duration / 60 / period;\n    }\n\n    public updateTime() {\n        const start = dayjs().startOf('m');\n        const period = this.model.end.diff(this.model.start, 'm') / 60;\n        this.model.today = start.diff(this.model.start, 'm') / 60 / period;\n    }\n\n    public resetMove() {\n        this.model.move = '';\n    }\n\n    public setMove(move: string) {\n        this.model.move = move;\n    }\n\n    public setTime(block: ITimelineBlock) {\n        if (!block) {\n            return;\n        }\n        const parts = block.id.split(':');\n        const time = dayjs(this.date)\n            .hour(+parts[0])\n            .minute(+parts[1]);\n        this.date = time.valueOf();\n        this.dateChange.emit(this.date);\n        this.updatePeriod();\n    }\n\n    public move(e) {\n        this.timeout(\n            'move',\n            () => {\n                if (this.model.move && this.content) {\n                    const center = {\n                        x:\n                            e.touches && e.touches.length > 0\n                                ? e.touches[0].clientX || e.clientX\n                                : e.clientX,\n                        y:\n                            e.touches && e.touches.length > 0\n                                ? e.touches[0].clientY || e.clientY\n                                : e.clientY,\n                    };\n                    const content_box = this.content.nativeElement.getBoundingClientRect();\n                    const percent_w = (center.x - content_box.left) / content_box.width;\n                    const percent_h = (center.y - content_box.top) / content_box.height;\n                    const percent = !this.vertical ? percent_w : percent_h;\n\n                    const start_time = this.model.start.hour() + this.model.start.minute() / 60;\n                    const end_time = this.model.end.hour() + this.model.end.minute() / 60;\n                    const diff_time = end_time - start_time;\n                    const block_size = 15;\n                    const hour =\n                        Math.ceil((diff_time * percent + start_time) * (60 / block_size)) /\n                        (60 / block_size);\n                    if (this.model.move === 'end') {\n                        let date = dayjs(this.date);\n                        const end = dayjs(this.date)\n                            .hour(Math.floor(hour))\n                            .minute(Math.floor((hour * 60) % 60));\n                        if (end.isSame(date, 'm') || end.isBefore(date, 'm')) {\n                            date = dayjs(end).add(-this.duration, 'm');\n                            this.date = date.valueOf();\n                        } else {\n                            const duration = Math.floor(end.diff(date, 'm'));\n                            this.duration = Math.max(60, duration || block_size);\n                            this.durationChange.emit(this.duration);\n                        }\n                    } else if (this.model.move === 'start') {\n                        const date = dayjs(this.date)\n                            .hour(Math.floor(hour))\n                            .minute(Math.floor((hour * 60) % 60));\n                        this.date = date.valueOf();\n                    }\n                    this.dateChange.emit(this.date);\n                    this.updatePeriod();\n                }\n            },\n            10\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'footer-menu',\n    template: `\n        <div\n            class=\"fixed flex flex-col items-center justify-end z-20 inset-0 bg-black/75 text-white px-2 pb-24 pt-2 space-y-4\"\n            *ngIf=\"show_book_items\"\n            (click)=\"show_book_items = false\"\n        >\n            <a\n                matRipple\n                [routerLink]=\"['/book', 'spaces']\"\n                *ngIf=\"features.includes('spaces')\"\n                class=\"flex items-center space-x-4 text-base w-48\"\n            >\n                <div\n                    class=\"bg-white rounded-full h-12 w-12 text-black text-2xl flex items-center justify-center\"\n                >\n                    <app-icon [icon]=\"{ type: 'img', src: 'assets/icons/meeting-room-filled.svg' }\"></app-icon>\n                </div>\n                <div>Book Room</div>\n            </a>\n            <a\n                matRipple\n                [routerLink]=\"['/book', 'desks']\"\n                *ngIf=\"features.includes('desks')\"\n                class=\"flex items-center space-x-4 text-base w-48\"\n            >\n                <div\n                    class=\"bg-white rounded-full h-12 w-12 text-black text-2xl flex items-center justify-center\"\n                >\n                    <app-icon [icon]=\"{ type: 'img', src: 'assets/icons/desk-filled.svg' }\"></app-icon>\n                </div>\n                <div>Book Desk</div>\n            </a>\n            <a\n                matRipple\n                [routerLink]=\"['/book', 'parking']\"\n                *ngIf=\"features.includes('parking')\"\n                class=\"flex items-center space-x-4 text-base w-48\"\n            >\n                <div\n                    class=\"bg-white rounded-full h-12 w-12 text-black text-2xl flex items-center justify-center\"\n                >\n                    <app-icon [icon]=\"{ type: 'img', src: 'assets/icons/car-filled.svg' }\"></app-icon>\n                </div>\n                <div>Book Car Space</div>\n            </a>\n            <a\n                matRipple\n                [routerLink]=\"['/schedule']\"\n                *ngIf=\"features.includes('schedule')\"\n                class=\"flex items-center space-x-4 text-base w-48\"\n            >\n                <div\n                    class=\"bg-white rounded-full h-12 w-12 text-black text-2xl flex items-center justify-center\"\n                >\n                    <app-icon [icon]=\"{ type: 'img', src: 'assets/icons/today-filled.svg' }\"></app-icon>\n                </div>\n                <div>Your Bookings</div>\n            </a>\n        </div>\n        <div\n            class=\"flex items-center justify-center bg-white border-t border-gray-200 shadow relative h-16 w-full sm:hidden z-40\"\n        >\n            <a\n                matRipple\n                class=\"flex flex-col items-center justify-center relative flex-1\"\n                [routerLink]=\"['/dashboard']\"\n                routerLinkActive=\"text-primary\"\n            >\n                <app-icon class=\"text-2xl\">home</app-icon>\n                <span class=\"text-sm\">Home</span>\n            </a>\n            <button\n                matRipple\n                class=\"flex items-center justify-center w-12 h-12 mb-4 rounded-full z-10\"\n                (click)=\"show_book_items = !show_book_items\"\n                [class.bg-secondary]=\"show_book_items\"\n                [class.text-white]=\"show_book_items\"\n                [class.bg-gray-300]=\"!show_book_items\"\n            >\n                <app-icon class=\"text-2xl\">{{\n                    show_book_items ? 'close' : 'add'\n                }}</app-icon>\n            </button>\n            <a\n                matRipple\n                class=\"flex flex-col items-center justify-center relative flex-1\"\n                [routerLink]=\"['/explore']\"\n                routerLinkActive=\"text-primary\"\n            >\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <span class=\"text-sm\">Spaces</span>\n            </a>\n            <div\n                class=\"overflow-hidden absolute top-0 left-1/2 -translate-x-1/2 -translate-y-full w-24 h-2\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-full bg-white shadow mx-auto border-t border-gray-200\"\n                ></div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class FooterMenuComponent {\n    public show_book_items = false;\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    constructor(\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nimport { ExploreSearchService } from '@placeos/explore';\n\n@Component({\n    selector: 'global-search',\n    template: `\n        <div\n            class=\"h-full w-12 relative\"\n        >\n            <button mat-icon-button class=\"text-black h-10 w-10 rounded-full bg-gray-200\" (click)=\"showInput()\">\n                <app-icon class=\"text-2xl\">search</app-icon>\n            </button>\n            <div \n                search\n                class=\"flex items-center absolute top-1/2 right-2 -translate-y-1/2 max-w-[calc(100vw-4rem)] bg-white shadow h-12 px-2 text-black rounded space-x-2\"\n                [ngClass]=\"{\n                    'w-[32rem]': show,\n                    'w-px': !show,\n                    'opacity-100': show,\n                    'opacity-0': !show,\n                    'pointer-events-none': !show\n                }\"\n                (click)=\"showInput()\"\n            >\n                <app-icon class=\"text-2xl\">search</app-icon>\n                <input\n                    #input\n                    placeholder=\"Search for people or spaces...\"\n                    class=\"flex-1 w-1/2 py-2 outline-none\"\n                    [(ngModel)]=\"filter_str\"\n                    (ngModelChange)=\"setFilter($event)\"\n                    [matAutocomplete]=\"auto\"\n                    [matAutocompleteConnectedTo]=\"origin\"\n                    (blur)=\"hideInput()\"\n                />\n                <mat-spinner *ngIf=\"loading | async\" [diameter]=\"32\"></mat-spinner>\n                <div\n                    class=\"absolute bottom-0 left-2 right-2 min-w-[20rem]\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                ></div>\n            </div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container *ngIf=\"(loading | async) !== true && filter_str\">\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <a\n                        [routerLink]=\"['/explore']\"\n                        [queryParams]=\"\n                            option.type === 'space'\n                                ? { space: option.id }\n                                : { user: option.id }\n                        \"\n                        class=\"w-full h-full flex items-center leading-tight\"\n                    >\n                        <div class=\"flex-1 overflow-hidden\">\n                            <div class=\"truncate w-full\">\n                                {{ option.name }}\n                            </div>\n                            <div class=\"text-xs\">\n                                {{ option.description }}\n                            </div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </a>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [search] {\n                transition: width 200ms, opacity 200ms;\n            }\n\n        `,\n    ],\n})\nexport class GlobalSearchComponent extends BaseClass {\n    public readonly results = this._service.search_results;\n    public readonly loading = this._service.loading;\n    public show = false;\n\n    public filter_str = '';\n\n    public readonly setFilter = (s) =>\n        s instanceof Object\n            ? (this.filter_str = '')\n            : this._service.setFilter(s);\n\n    @ViewChild('input') public _input_el: ElementRef<HTMLInputElement>\n\n    constructor(private _service: ExploreSearchService) {\n        super();\n    }\n\n    public showInput() {\n        this.show = true;\n        this._input_el.nativeElement.focus();\n        this.clearTimeout('close');\n    }\n\n    public hideInput() {\n        this.timeout('close', () => this.show = false);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">Help & Support</div>\n            </div>\n            <a\n                button\n                mat-button\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 my-2\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > a {\n                border-top: 1px solid #ccc;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help.tiles') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { GlobalSearchComponent } from './global-search.component';\nimport { TopbarComponent } from './topbar.component';\nimport { BookingFormModalComponent } from './booking-form-modal.component';\nimport { EventTimelineComponent } from './event-timeline/event-timeline.component';\nimport { VerticalTimelineComponent } from './vertical-timeline/vertical-timeline.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { TopMenuComponent } from './top-menu.component';\nimport { FooterMenuComponent } from './footer-menu.component';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { EventCardComponent } from './event-card.component';\nimport { BookingCardComponent } from './booking-card.component';\n\nconst COMPONENTS: Type<any>[] = [\n    TopbarComponent,\n    GlobalSearchComponent,\n    BookingFormModalComponent,\n    VerticalTimelineComponent,\n    EventTimelineComponent,\n    TopMenuComponent,\n    FooterMenuComponent,\n    UserControlsComponent,\n    BuildingSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    EventCardComponent,\n    BookingCardComponent\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSlideToggleModule,\n    MatSliderModule\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        RouterModule.forChild([]),\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        FormFieldsModule,\n        ...MATERIAL_MODULES,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ComponentsModule,\n        FormFieldsModule,\n        ...MATERIAL_MODULES,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'top-menu',\n    template: `\n        <div menu class=\"flex items-center justify-center h-full w-full overflow-hidden\">\n            <a\n                matRipple\n                class=\"flex items-center justify-center space-x-2 relative px-8\"\n                [routerLink]=\"['/dashboard']\"\n                routerLinkActive=\"text-secondary active\"\n                matTooltip=\"Home\"\n                matTooltipPosition=\"below\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [icon]=\"{\n                        type: 'img',\n                        src:\n                            'assets/icons/home-' +\n                            (type === 'home' ? 'filled' : 'outline') +\n                            '.svg'\n                    }\"\n                ></app-icon>\n                <span *ngIf=\"show_text\" class=\"truncate hidden xl:block\">Home</span>\n                <div\n                    bar\n                    class=\"absolute bottom-0 inset-x-0 h-0.5 bg-secondary\"\n                ></div>\n            </a>\n            <button\n                matRipple\n                class=\"flex items-center justify-center space-x-2 relative px-8\"\n                *ngIf=\"features.includes('spaces')\"\n                [routerLink]=\"['/book', 'spaces']\"\n                routerLinkActive=\"text-secondary active\"\n                matTooltip=\"Book Room\"\n                matTooltipPosition=\"below\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [icon]=\"{\n                        type: 'img',\n                        src:\n                            'assets/icons/meeting-room-' +\n                            (type === 'spaces' ? 'filled' : 'outline') +\n                            '.svg'\n                    }\"\n                ></app-icon>\n                <span *ngIf=\"show_text\" class=\"truncate hidden xl:block\">Book Room</span>\n                <div\n                    bar\n                    class=\"absolute bottom-0 inset-x-0 h-0.5 bg-secondary\"\n                ></div>\n            </button>\n            <button\n                matRipple\n                class=\"flex items-center justify-center space-x-2 relative px-8\"\n                *ngIf=\"features.includes('desks')\"\n                [routerLink]=\"['/book', 'desks']\"\n                routerLinkActive=\"text-secondary active\"\n                matTooltip=\"Book Desk\"\n                matTooltipPosition=\"below\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [icon]=\"{\n                        type: 'img',\n                        src:\n                            'assets/icons/desk-' +\n                            (type === 'desks' ? 'filled' : 'outline') +\n                            '.svg'\n                    }\"\n                ></app-icon>\n                <span *ngIf=\"show_text\" class=\"truncate hidden xl:block\">Book Desk</span>\n                <div\n                    bar\n                    class=\"absolute bottom-0 inset-x-0 h-0.5 bg-secondary\"\n                ></div>\n            </button>\n            <button\n                matRipple\n                class=\"flex items-center justify-center space-x-2 relative px-8\"\n                *ngIf=\"features.includes('parking')\"\n                [routerLink]=\"['/book', 'parking']\"\n                routerLinkActive=\"text-secondary active\"\n                matTooltip=\"Book Car Space\"\n                matTooltipPosition=\"below\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [icon]=\"{\n                        type: 'img',\n                        src:\n                            'assets/icons/car-' +\n                            (type === 'parking' ? 'filled' : 'outline') +\n                            '.svg'\n                    }\"\n                ></app-icon>\n                <span *ngIf=\"show_text\" class=\"truncate hidden xl:block\">Book Car Space</span>\n                <div\n                    bar\n                    class=\"absolute bottom-0 inset-x-0 h-0.5 bg-secondary\"\n                ></div>\n            </button>\n            <button\n                matRipple\n                class=\"flex items-center justify-center space-x-2 relative px-8\"\n                *ngIf=\"features.includes('explore')\"\n                [routerLink]=\"['/explore']\"\n                routerLinkActive=\"text-secondary active\"\n                matTooltip=\"Spaces\"\n                matTooltipPosition=\"below\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [icon]=\"{\n                        type: 'img',\n                        src:\n                            'assets/icons/place-' +\n                            (type === 'explore' ? 'filled' : 'outline') +\n                            '.svg'\n                    }\"\n                ></app-icon>\n                <span *ngIf=\"show_text\" class=\"truncate hidden xl:block\">Spaces</span>\n                <div\n                    bar\n                    class=\"absolute bottom-0 inset-x-0 h-0.5 bg-secondary\"\n                ></div>\n            </button>\n            <button\n                matRipple\n                class=\"flex items-center justify-center space-x-2 relative px-8\"\n                *ngIf=\"features.includes('schedule')\"\n                [routerLink]=\"['/schedule']\"\n                routerLinkActive=\"text-secondary active\"\n                matTooltip=\"Your Bookings\"\n                matTooltipPosition=\"below\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [icon]=\"{\n                        type: 'img',\n                        src:\n                            'assets/icons/today-' +\n                            (type === 'schedule' ? 'filled' : 'outline') +\n                            '.svg'\n                    }\"\n                ></app-icon>\n                <span *ngIf=\"show_text\" class=\"truncate hidden xl:block\">Your Bookings</span>\n                <div\n                    bar\n                    class=\"absolute bottom-0 inset-x-0 h-0.5 bg-secondary\"\n                ></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [menu] > * {\n                height: 3.5rem;\n                flex-shrink: 1;\n            }\n\n            [bar] {\n                display: none;\n            }\n\n            .active > [bar] {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class TopMenuComponent {\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public get show_text() {\n        return this.features.length <= 5;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get type() {\n        const url = this._router.url;\n        if (url.includes('dashboard')) return 'home';\n        if (url.includes('book/spaces')) return 'spaces';\n        if (url.includes('book/desks')) return 'desks';\n        if (url.includes('book/parking')) return 'parking';\n        if (url.includes('explore')) return 'explore';\n        if (url.includes('schedule')) return 'schedule';\n        return '';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _router: Router\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { ApplicationIcon, currentUser, SettingsService } from '@placeos/common';\nimport { UserControlsComponent } from './user-controls.component';\n\n@Component({\n    selector: 'topbar',\n    template: `\n        <div\n            topbar\n            class=\"flex items-center justify-between h-[3.5rem] bg-white border-b border-gray-200 text-black z-50 shadow relative\"\n        >\n            <a\n                logo\n                class=\"p-2 h-full flex items-center\"\n                [routerLink]=\"['/']\"\n                *ngIf=\"logo\"\n            >\n                <img class=\"h-10\" [src]=\"logo?.src\" />\n            </a>\n            <div class=\"flex-1 flex items-center justify-center h-full w-1/2\">\n                <top-menu class=\"hidden sm:block\"></top-menu>\n            </div>\n            <global-search *ngIf=\"search\"></global-search>\n            <button\n                matRipple\n                class=\"h-10 w-10 rounded-full mr-2 bg-gray-200 flex items-center justify-center\"\n                customTooltip\n                [content]=\"user_controls\"\n            >\n                <app-icon class=\"text-2xl\">person</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                [routerLink]=\"['/schedule']\"\n                routerLinkActive=\"text-primary\"\n                *ngIf=\"features?.includes('schedule')\"\n            >\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon class=\"text-xl\">event</app-icon>\n                    <div>My Day</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class TopbarComponent {\n    public show_menu: boolean;\n    public readonly user_controls = UserControlsComponent;\n\n    /** Application logo to display */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_light');\n    }\n    /** Text to display for page title */\n    public get title(): string {\n        return this._settings.value('page_title');\n    }\n\n    /** Text to display for page title */\n    public get search(): boolean {\n        return this._settings.get('app.general.search') !== false;\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features');\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Component } from '@angular/core';\nimport { currentUser, SettingsService, VERSION } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div class=\"rounded bg-white shadow mt-1 flex flex-col relative\">\n            <div\n                avatar\n                class=\"flex flex-col items-center p-2 w-[18rem]\"\n                [matTooltip]=\"groups\"\n            >\n                <a-user-avatar class=\"text-2xl\" [user]=\"user\"></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button mat-button class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button mat-button class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\">Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n            >\n            <button mat-button class=\"clear w-full text-left h-[3.5rem]\">\n                <div class=\"flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200\"\n                    >\n                        <app-icon>mode_night</app-icon>\n                    </div>\n                    <div class=\"flex-1\">Display & Accessibility</div>\n                    <app-icon class=\"opacity-60 text-2xl\"\n                        >chevron_right</app-icon\n                    >\n                </div>\n            </button>\n                        </div>\n            <div class=\"flex flex-col items-center p-4\">\n                <button mat-button class=\"inverse mb-4\" (click)=\"logout()\">Sign Out</button>\n                <div class=\"text-xs opacity-60 w-full\">\n                    Version: {{ version.hash }}\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > *:nth-child(n + 1) {\n                border-top: 1px solid #ccc;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public logout() {\n        logout();\n        location.href = '/logout';\n    }\n}\n","<div class=\"timeline\" (window:mouseup)=\"resetMove()\" (window:touchend)=\"resetMove()\">\n    <div class=\"content\" (mousemove)=\"move($event)\" (touchmove)=\"move($event)\">\n        <div class=\"timeblocks\">\n            <div class=\"blk\" *ngFor=\"let item of blocks\">\n                <div class=\"text\" *ngIf=\"item.hour\">{{ item.display }}</div>\n            </div>\n        </div>\n        <div class=\"eventblocks\" #block>\n            <div\n                class=\"blk\"\n                *ngFor=\"let item of blocks\"\n                [class.shown-block]=\"item.show\"\n                [class.hour]=\"item.hour\"\n                [class.disabled]=\"item.disabled\"\n                [class.unavailable]=\"item.unavailable\"\n            ></div>\n            <div\n                class=\"selected-time\"\n                #time\n                [style.top]=\"active_start * 100 + '%'\"\n                [style.height]=\"active_length * 100 + '%'\"\n            >\n                <div class=\"inner\" (mousedown)=\"setMove('top')\" (touchstart)=\"setMove('top')\">\n                    {{ display }}\n                </div>\n                <div\n                    class=\"handle top\"\n                    (mousedown)=\"setMove('top')\"\n                    (touchstart)=\"setMove('top')\"\n                ></div>\n                <div\n                    class=\"handle bottom\"\n                    (mousedown)=\"setMove('bottom')\"\n                    (touchstart)=\"setMove('bottom')\"\n                ></div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    ViewChild,\n    ElementRef,\n    EventEmitter,\n    OnChanges,\n    SimpleChanges,\n} from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\nimport { BaseClass } from '@placeos/common';\n\nimport { ITimelineEventGroup } from '../event-timeline/event-timeline.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'vertical-timeline',\n    templateUrl: './vertical-timeline.component.html',\n    styleUrls: ['./vertical-timeline.component.scss'],\n})\nexport class VerticalTimelineComponent extends BaseClass implements OnInit, OnChanges {\n    /** Active date */\n    @Input() public date: number;\n    /** Active duration */\n    @Input() public duration: number;\n    /** Groups and events */\n    @Input() public groups: ITimelineEventGroup[];\n    /** Blocks */\n    public blocks: any[];\n    /** Element to move */\n    public active_move: string;\n    /** Active start date */\n    public active_start: number;\n    /** Active duration */\n    public active_length: number;\n    /** Offset of time box */\n    public offset = { x: 0, y: 0 };\n\n    /** Output emitter */\n    @Output() public dateChange = new EventEmitter<number>();\n    @Output() public durationChange = new EventEmitter<number>();\n    @Output() public groupsChange = new EventEmitter<ITimelineEventGroup[]>();\n\n    @ViewChild('block') private block: ElementRef;\n    @ViewChild('time') private time: ElementRef;\n\n    public ngOnInit(): void {\n        this.generateBlocks();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.groups) {\n            this.checkInUseBlocks();\n        }\n        if (changes.date || changes.duration) {\n            this.updateStartEnd();\n        }\n    }\n\n    /** Timeline start */\n    public get timeline_start() {\n        return dayjs(this.date).startOf('d');\n    }\n\n    /** Timeline end */\n    public get timeline_end() {\n        return dayjs(this.date).endOf('d');\n    }\n\n    public generateBlocks() {\n        this.blocks = [];\n        const start = this.timeline_start;\n        const end = this.timeline_end;\n        const now = dayjs();\n        for (let time = start; time.isBefore(end, 'm'); time = time.add(5, 'm')) {\n            this.blocks.push({\n                id: time.format('HH:mm'),\n                display: time.format('HH:mm'),\n                hour: time.minute() === 0,\n                show: time.minute() % 30 === 0,\n                disabled: time.isBefore(now, 'm'),\n            });\n        }\n        this.checkInUseBlocks();\n    }\n\n    public get display(): string {\n        const date = dayjs(this.date);\n        const end = dayjs(this.date).add(this.duration, 'm');\n        const duration = formatDuration({ minutes: this.duration });\n        return `${date.format('hh:mm A')} - ${end.format('hh:mm A')} (${duration})`;\n    }\n\n    public move(e) {\n        this.timeout(\n            'move',\n            () => {\n                if (this.active_move && this.block) {\n                    const center = {\n                        x:\n                            e.touches && e.touches.length > 0\n                                ? e.touches[0].clientX || e.clientX\n                                : e.clientX,\n                        y:\n                            e.touches && e.touches.length > 0\n                                ? e.touches[0].clientY || e.clientY\n                                : e.clientY,\n                    };\n                    const off = this.active_move === 'bottom' ? { x: 0, y: 0 } : this.offset;\n                    const content_box = this.block.nativeElement.getBoundingClientRect();\n                    const percent_w = (center.x - off.x - content_box.left) / content_box.width;\n                    const percent_h = (center.y - off.y - content_box.top) / content_box.height;\n                    const percent = percent_h;\n\n                    const start_time =\n                        this.timeline_start.hour() + this.timeline_start.minute() / 60;\n                    const end_time = this.timeline_end.hour() + this.timeline_end.minute() / 60;\n                    const diff_time = end_time - start_time;\n                    const block_size = 15;\n                    const hour =\n                        Math.ceil((diff_time * percent + start_time) * (60 / block_size)) /\n                        (60 / block_size);\n                    if (this.active_move === 'bottom') {\n                        let date = dayjs(this.date);\n                        const end = dayjs(this.date)\n                            .hour(Math.floor(hour))\n                            .minute(Math.floor((hour * 60) % 60));\n                        if (end.isSame(date, 'm') || end.isBefore(date, 'm')) {\n                            date = dayjs(end).add(-this.duration, 'm');\n                            this.date = date.valueOf();\n                        } else {\n                            const duration = Math.floor(end.diff(date, 'm'));\n                            this.duration = Math.max(60, duration || block_size);\n                            this.durationChange.emit(this.duration);\n                        }\n                    } else if (this.active_move === 'top') {\n                        const date = dayjs(this.date)\n                            .hour(Math.floor(hour))\n                            .minute(Math.floor((hour * 60) % 60));\n                        this.date = date.valueOf();\n                    }\n                    this.dateChange.emit(this.date);\n                    this.updateStartEnd();\n                }\n            },\n            10\n        );\n    }\n\n    // public setOffset(e) {\n    // if (this.time) {\n    //     const box = this.time.nativeElement.getBoundingClientRect();\n    //     this.offset = { x: e.center.x - box.left, y: e.center.y - box.top };\n    // }\n    // }\n\n    public setMove(move: string) {\n        this.active_move = move;\n    }\n\n    public checkInUseBlocks() {\n        if (!this.blocks || !this.groups) {\n            return;\n        }\n        const blocks = this.blocks.map((i) => ({\n            ...i,\n            unavailable: false,\n        }));\n        for (const grp of this.groups) {\n            for (const event of grp.events || []) {\n                const start = this.hoursToDate(event.start);\n                const end = dayjs(start).add(event.duration, 'm');\n                for (let time = dayjs(start); time.isBefore(end); time = time.add(5, 'm')) {\n                    const display = time.format('HH:mm');\n                    const blk = blocks.find((i) => i.id === display);\n                    if (blk) {\n                        blk.unavailable = true;\n                    }\n                }\n            }\n        }\n        this.blocks = blocks;\n    }\n\n    public hoursToDate(time: number) {\n        let t = dayjs()\n            .startOf('d')\n            .hour(Math.floor(time))\n            .minute(Math.floor((time * 60) % 60));\n        t = t.minute(Math.floor(t.minute() / 5) * 5);\n        return t;\n    }\n\n    public updateStartEnd() {\n        this.updatePeriod();\n    }\n\n    public resetMove() {\n        this.active_move = '';\n    }\n\n    public updatePeriod() {\n        const start = dayjs(this.date).startOf('m');\n        const period = this.timeline_end.diff(this.timeline_start, 'm') / 60;\n        this.active_start = start.diff(this.timeline_start, 'm') / 60 / period;\n        this.active_length = this.duration / 60 / period;\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0,0.0],\n                                            [0.0,0.5],\n                                            [0.5,0.5],\n                                            [0.5,0.0]\n                                        ]\n                                    }\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    group: '',\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures() }));\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system.id]) {\n        event_spaces[event.system.id] = [];\n    }\n    event_spaces[event.system.id].push(event);\n});\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly environment;\n\n    public readonly help = {\n        'help': {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`\n        }\n    }\n\n    public tabs =[\n        {\n           icon: \"laptop\",\n           name: \"Laptop\",\n           type: 'Display',\n           inputs: ['Display_1'],\n           help: \"laptop-help\"\n         },\n        {\n           icon: \"call\",\n           name: \"VC\",\n           inputs: [\"VidConf_1\"],\n           help: \"vidconf-help\",\n           controls: \"vidconf-controls\"\n         },\n      ]\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        const types = unique(this.env_sources.map((_) => _.type));\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        console.log('Power:', state);\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Display 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Display 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display3: {\n        name: 'Display 3',\n        type: 'Display',\n        source: 'PC2',\n        mod: 'Display_3',\n    },\n    Display4: {\n        name: 'Display 4',\n        type: 'Display',\n        mod: 'Display_4',\n    },\n    Display5: {\n        name: 'Display 5',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5.hashStr(users[predictableRandomInt(users.length)].email),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5.hashStr(users[predictableRandomInt(users.length)].email),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return MOCK_SPACES;\n        },\n    });\n}\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createAreaManagementModule, MockLocationServicesModule } from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()]\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","\nexport const MOCK_ASSETS = [\n    {\n        id: '1',\n        name: 'iPad',\n        category: 'Technology',\n        images: [\n            { name: 'chrome.svg', url: 'assets/support/chrome-logo.svg' },\n            { name: 'firefox.svg', url: 'assets/support/firefox-logo.svg' },\n            { name: 'safari.svg', url: 'assets/support/safari-logo.svg' },\n        ],\n    },\n    { id: '2', name: 'iPhone', category: 'Technology' },\n    { id: '3', name: 'iWatch', category: 'Technology' },\n    { id: '4', name: 'Chair', category: 'Furniture' },\n    { id: '5', name: 'Lounge', category: 'Furniture' },\n    { id: '6', name: 'Table', category: 'Furniture' },\n    { id: '7', name: 'Couch', category: 'Furniture' },\n    { id: '8', name: 'Something', category: 'Other' },\n];\n","import { padString, predictableRandomInt, randomString } from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = next;\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location']\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces = MOCK_SPACES.filter(_ => _.zones.includes(lvl?.id));\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id: type === 'parking' ? `park-${position}` : `desk-${lvl?.id}-${index}`,\n        asset_name: type === 'parking' ? position : `${lvl?.id}-${index}`,\n        description: type === 'parking' ? position : `Desk ${index}`,\n        title: `${type} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(8, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'),\n            assets: new Array(asset_count).fill(0).map(_ => ({ ...MOCK_ASSETS[predictableRandomInt(asset_count)], amount: predictableRandomInt(5, 1)})),\n            tracking: approved === 0 ? TRACKING[predictableRandomInt(TRACKING.length)] : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id\n        },\n    };\n});\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            console.log('New Booking:', new_event);\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_ASSETS } from './assets.data';\n\nexport const ASSET_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateAsset = (id, data) => {\n        const index = MOCK_ASSETS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_ASSETS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateAsset(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Integrations } from '@sentry/tracing';\nimport { first } from 'rxjs/operators';\nimport {\n    clientId,\n    invalidateToken,\n    isMock,\n    refreshToken,\n    token,\n} from '@placeos/ts-client';\n\nimport {\n    BaseClass,\n    current_user,\n    currentUser,\n    HotkeysService,\n    notifySuccess,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\nimport { addHours } from 'date-fns';\n\nimport * as Sentry from '@sentry/angular';\nimport * as MOCKS from '@placeos/mocks';\n\nexport function initSentry(dsn: string, sample_rate: number = 0.2) {\n    if (!dsn) return;\n    Sentry.init({\n        dsn,\n        tracesSampleRate: sample_rate,\n    });\n}\n\n(window as any).global = window;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <global-banner></global-banner>\n        <div class=\"flex-1 w-full relative h-1/2\">\n            <router-outlet></router-outlet>\n        </div>\n        <global-loading></global-loading>\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            flex-direction: column;\n            height: 100%;\n            width: 100%;\n        }\n    `],\n})\nexport class AppComponent extends BaseClass implements OnInit {\n    constructor(\n        private _tracing: Sentry.TraceService,\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _spaces: SpacesService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar,\n        private _hotkey: HotkeysService,\n        private _clipboard: Clipboard\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        log('APP', 'MOCKS:', MOCKS);\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyM'], () => {\n            localStorage.setItem(\n                'mock',\n                `${localStorage.getItem('mock') !== 'true'}`\n            );\n            location.reload();\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyC'], () => {\n            this._clipboard.copy(`${token()}|${refreshToken()}`);\n            notifySuccess('Successfully copied token.');\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyV'], () => {\n            navigator.clipboard?.readText().then((tkn) => {\n                const parts = tkn.split('|');\n                const id = clientId();\n                localStorage.setItem(`${id}_access_token`, `${parts[0]}`);\n                localStorage.setItem(`${id}_refresh_token`, `${parts[1]}`);\n                localStorage.setItem(\n                    `${id}_expires_at`,\n                    `${addHours(new Date(), 6).valueOf()}`\n                );\n                notifySuccess('Successfully pasted token.');\n                setTimeout(() => location.reload(), 2000);\n            });\n        });\n        setNotifyOutlet(this._snackbar);\n        /** Wait for settings to initialise */\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        /** Wait for authentication details to load */\n        await setupPlace(settings).catch((_) =>  console.error(_));\n        setupCache(this._cache);\n        if (!settings.local_login) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n        initSentry(this._settings.get('app.sentry_dsn'));\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        console.error('Error initialising user.');\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n    AuthorisedUserGuard,\n    MisconfiguredComponent,\n    UnauthorisedComponent,\n} from '@placeos/components';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: 'misconfigured', component: MisconfiguredComponent },\n    {\n        path: 'dashboard',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./dashboard/dashboard.module').then(\n                (m) => m.DashboardModule\n            ),\n    },\n    {\n        path: 'landing',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./landing/landing.module').then(\n                (m) => m.AppLandingModule\n            ),\n    },\n    {\n        path: 'book',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./book/book.module').then((m) => m.BookModule),\n    },\n    {\n        path: 'explore',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./explore/explore.module').then((m) => m.ExploreModule),\n    },\n    {\n        path: 'control',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./control/control.module').then((m) => m.ControlModule),\n    },\n    {\n        path: 'directory',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./directory/directory.module').then(\n                (m) => m.DirectoryModule\n            ),\n    },\n    {\n        path: 'your-bookings',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./new-schedule/schedule.module').then(\n                (m) => m.AppScheduleModule\n            ),\n    },\n    {\n        path: 'schedule',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./schedule/schedule.module').then(\n                (m) => m.AppScheduleModule\n            ),\n    },\n    {\n        path: 'whats-on',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        loadChildren: () =>\n            import('./whats-on/whats-on.module').then((m) => m.WhatsOnModule),\n    },\n    { path: '**', redirectTo: 'dashboard', pathMatch: 'full' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ViewAttendeesModalComponent } from './view-attendees-modal/view-attendees-modal.component';\nimport { ViewCateringModalComponent } from './view-catering-modal/view-catering-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { UserAvailabilityModalComponent } from './user-availability-modal/user-availability.modal.component';\nimport { SharedComponentModule } from '../components/shared.module';\n\nconst OVERLAYS: Type<any>[] = [\n    ViewAttendeesModalComponent,\n    ViewCateringModalComponent,\n    RecurrenceModalComponent,\n    UserAvailabilityModalComponent,\n];\n\n@NgModule({\n    declarations: [...OVERLAYS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedComponentModule,\n    ],\n    exports: [...OVERLAYS],\n})\nexport class SharedOverlaysModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\n\nimport {\n    MisconfiguredComponent,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { AppComponent } from 'libs/components/src/lib/app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { environment } from '../environments/environment';\nimport { SharedOverlaysModule } from './overlays/overlays.module';\n\nimport * as Sentry from '@sentry/angular';\n\nimport { SharedComponentModule } from './components/shared.module';\n\n@NgModule({\n    declarations: [AppComponent, UnauthorisedComponent, MisconfiguredComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n        HttpClientModule,\n        FormsModule,\n        SharedOverlaysModule,\n        SharedComponentModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n    ],\n    providers: [\n        {\n            provide: ErrorHandler,\n            useValue: Sentry.createErrorHandler({\n                showDialog: false,\n            }),\n        },\n        {\n            provide: Sentry.TraceService,\n            deps: [Router],\n        },\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {\n    \n}\n","export const environment = {\n  production: true,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\nimport { BuildingLevel, Desk } from '@placeos/organisation';\nimport { User } from '@placeos/users';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button mat-button (click)=\"confirm()\">Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_set_host');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\">COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button mat-button (click)=\"submit()\">Submit</button>\n            </footer>\n            <button close mat-icon-button mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\">\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close mat-icon-button mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form: FormGroup;\n    public failure: boolean;\n\n    public ngOnInit() {\n        this.form = new FormGroup({\n            travelled: new FormControl('', [Validators.required]),\n            unwell: new FormControl('', [Validators.required]),\n            contact: new FormControl('', [Validators.required]),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            notifyError('All the questions must be answered');\n            return;\n        } else if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\n\nexport type BookingType = 'desk' | 'parking' | 'locker' | '';\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name = data.asset_name || data.extension_data?.asset_name || '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            data.date / 1000 ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            data.date / 1000 + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || '';\n        this.type = data.type || 'booking';\n        this.date = data.date || this.booking_start * 1000;\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            );\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title = data.title || 'Desk booking';\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.all_day = data.all_day ?? this.duration > 12 * 60;\n        this.status = this.rejected\n            ? 'declined'\n            : this.approved\n            ? 'approved'\n            : 'tentative';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        return isAfter(start, end);\n    }\n}\n","import { FormControl, FormGroup } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { createViewer, getViewer, Point, removeViewer } from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = {} as any) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, []),\n        all_day: new FormControl(booking.all_day ?? false),\n        duration: new FormControl(booking.duration),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        asset_id: new FormControl(booking.asset_id),\n        asset_name: new FormControl(booking.description),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(map_url: string, centered_at: Point | string, desk_ids: string[] = []): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string' ? viewer.mappings[centered_at] : centered_at) || { x: .5, y: .5 };\n    let dist = 10;\n    let closest = '';\n    console.log(`Desks:`, desk_ids);\n    console.log(`Mappings:`, viewer.mappings);\n    console.log(`Point:`, point);\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt((x - point.x) * (x - point.x) + (y - point.y) * (y - point.y));\n        console.log(`Desk ${desk}:`, viewer.mappings[desk], d);\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking } from './booking.class';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item)))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>) {\n    return post(`${BOOKINGS_ENDPOINT}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    BaseClass,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { listChildMetadata, PlaceZone } from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilKeyChanged,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from '..';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = ['book/desks'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: 'desk' | 'parking';\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends BaseClass {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _form = new BehaviorSubject<FormGroup>(null);\n    private _form_value = new BehaviorSubject<Partial<Booking>>({});\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n\n    public readonly assets: Observable<BookingAsset[]> = this.options.pipe(\n        distinctUntilKeyChanged('zone_id'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return listChildMetadata(this._org.building.id, {\n                        name: 'desks',\n                    }).pipe(\n                        map((data) =>\n                            flatten(\n                                data.map((_) =>\n                                    (_.metadata.desks?.details instanceof Array\n                                        ? _.metadata.desks?.details\n                                        : []\n                                    ).map((d) => ({ ...d, zone: _.zone }))\n                                )\n                            )\n                        )\n                    );\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.assets.pipe(\n        map((assets) => {\n            const list: string[] = [];\n            for (const { features } of assets) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_assets = combineLatest([\n        this.options,\n        this.assets,\n        this._form_value,\n    ]).pipe(\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, assets, form]) =>\n            queryBookings({\n                period_start: getUnixTime(form.date),\n                period_end: getUnixTime(\n                    addMinutes(form.date, form.duration || 24 * 60)\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) =>\n                    assets.filter(\n                        (asset) =>\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    )\n                )\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_assets,\n    ]).pipe(\n        map(([options, assets]) => {\n            const groups = [];\n            const asset_list = [...assets].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get form() {\n        return this._form.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this._form.next(generateBookingForm(booking));\n        this.subscription(\n            'form_change',\n            this._form.getValue().valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public resetForm() {\n        if (!this._form.getValue()) this.newForm();\n        const booking = this._booking.getValue();\n        this._form.getValue().patchValue({\n            ...(booking || {}),\n            ...(booking?.extension_data || {}),\n        });\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this._form.getValue()?.value || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n        this._form_value.next(this._form.getValue()?.value || {});\n    }\n\n    public loadForm() {\n        if (!this._form.getValue()) this.newForm();\n        this._form.getValue().patchValue({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n            ),\n        });\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const form = this._form.getValue();\n        let content = `Would you like to book the ${options.type} ${\n            form.value.asset_name\n        } for ${format(form.value.date, 'dd MMM yyyy')}${\n            form.value.duration < 12 * 60\n                ? ' at ' + format(form.value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(_);\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(_);\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        const form = this._form.getValue();\n        if (!form) throw 'No form for booking';\n        if (!form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(form).join(\n                ', '\n            )}]`;\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                form.value,\n                this._options.getValue().type\n            );\n        }\n        if (form.value.duration >= 12 * 60 || form.value.all_day) {\n            form.patchValue({\n                date: set(form.value.date, { hours: 11, minutes: 59 }),\n                duration: 12 * 60,\n            });\n        }\n        const result = await saveBooking(new Booking(form.value)).toPromise();\n        const { booking_type } = form.value;\n        this.clearForm();\n        this._form.getValue()?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this._form.getValue().value;\n        const asset_list = await this.available_assets\n            .pipe(take(1))\n            .toPromise();\n        const active_asset = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_asset.zone?.id]);\n        const assets = [\n            active_asset,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        console.log('Selected Assets:', assets);\n        const group_members = [currentUser(), ...extra_members];\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: assets[idx].map_id || assets[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = assets[i];\n            this._form\n                .getValue()\n                .patchValue({\n                    ...form,\n                    user,\n                    asset_id: asset?.id,\n                    asset_name: asset.name,\n                    map_id: asset?.map_id || asset?.id,\n                    description: asset.name,\n                    zones: asset.zone\n                        ? [asset.zone?.parent_id, asset.zone?.id]\n                        : [],\n                });\n            console.log('Form Value:', this._form.getValue().value);\n            this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.value;\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: string\n    ) {\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            throw `${asset_id} is not available at the selected time`;\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser().email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a desk booked`;\n        }\n        return true;\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        assets: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_assets = [];\n        let asset_list = assets.filter((_) => _.id !== id && _.map_id !== id);\n        console.log('Assets:', assets, asset_list, id);\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_assets.push(\n                    assets.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n            console.log('Asset List:', asset_list);\n        }\n        return nearby_assets;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { StaffUser, User } from '@placeos/users';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nimport { Calendar } from './calendar.class';\n\nimport { BaseClass, notifyError } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\nimport {\n    queryCalendarAvailability,\n    queryCalendars,\n    querySpaceFreeBusy,\n} from './calendar.fn';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CalendarService extends BaseClass {\n    private readonly _calendars = new BehaviorSubject<Calendar[]>([]);\n\n    /** Observable for the list of calendars */\n    public readonly calendar_list = this._calendars.asObservable();\n\n    /* istanbul ignore next */\n    public readonly query = () => queryCalendars();\n    /* istanbul ignore next */\n    public readonly freeBusy = (q: CalendarAvailabilityQueryParams) =>\n        querySpaceFreeBusy(q, this._org);\n    /* istanbul ignore next */\n    public readonly availability = (q: CalendarAvailabilityQueryParams) =>\n        queryCalendarAvailability(q);\n\n    constructor(private _org: OrganisationService) {\n        super();\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.init());\n    }\n\n    public async init() {\n        await this.load().catch((err) =>\n            notifyError('Error loading calendars data')\n        );\n        this._initialised.next(true);\n    }\n\n    public get calendars(): Calendar[] {\n        return this._calendars.getValue();\n    }\n\n    /** Get Free busy for the selected day\n     * @param calendars User calendar\n     * @param date Selected day\n     */\n    public getFreeBusyDate(date: number, calendars: string) {\n        return querySpaceFreeBusy(\n            {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                calendars,\n            },\n            this._org\n        );\n    }\n\n    /** Check rooms availability */\n    public async checkSpacesAvailability(\n        system_ids: string[],\n        period_start: number,\n        period_end: number,\n        old_booking?: CalendarEvent\n    ) {\n        const result = await queryCalendarAvailability({\n            period_start,\n            period_end,\n            system_ids: system_ids.join(','),\n        }).toPromise();\n        const start = new Date(old_booking?.date).valueOf();\n        const end = addMinutes(start, old_booking?.duration).valueOf();\n        const available = result.every((i) => {\n            const availability = i.availability;\n            if (old_booking && i.id === old_booking.system?.email) {\n                const index = availability.findIndex((block) => {\n                    return (\n                        block.date >= start &&\n                        addMinutes(block.date, block.duration).valueOf() <= end\n                    );\n                });\n                if (index !== -1) {\n                    availability.splice(index, 1);\n                }\n            }\n            return !availability.length;\n        });\n        return !!available;\n    }\n\n    public async load(): Promise<void> {\n        this._calendars.next(await queryCalendars().toPromise());\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n\n    public readonly options_string: string;\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.options = data.options || [];\n        this.tags = data.tags || [];\n        this.total_cost =\n            (this.unit_price +\n                this.options\n                    .map((i) => i.unit_price || 0)\n                    .reduce((c, a) => c + a, 0)) *\n            this.quantity;\n\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            new Date().getTime();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``\n    },\n    search: true,\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    breakdown: 15,\n    can_book_for_others: false,\n    has_catering: true\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        'user': { level: 'bld-01_lvl-10', centered_at: 'table-10.008' }\n    }\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"d3008b9\",\n    \"hash\": \"d3008b9\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"d3008b9\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"time\": 1652760084789\n};\n/* tslint:enable */\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue();\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { BaseClass } from './base.class';\n\nimport { VERSION } from './version';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { currentUser } from './user-state';\nimport { current_user } from '..';\nimport { first } from 'rxjs/operators';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        });\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.dark_mode) {\n            document.body.classList.add('dark');\n        } else {\n            document.body.classList.remove('dark');\n        }\n        if (settings.font_size) {\n            document.body.style.fontSize = `${settings.font_size}px`;\n        }\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\n\nexport function setNotifyOutlet(snackbar: MatSnackBar) {\n    _service = snackbar;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        throw new Error(\"Snackbar service hasn't been initialised\");\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.debug(msg);\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.error(msg);\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(async () => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && await cache.checkForUpdate()) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!await cache.activateUpdate()) return;\n        notifyInfo('Newer version of the application is available', 'Refresh', () =>\n            location.reload()\n        );\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    console.log(\n        'Mock:',\n        settings.mock,\n        location.href.includes('mock=true'),\n        localStorage.getItem('mock') === 'true'\n    );\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BaseClass implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | (() => void);\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(\n                key\n                    ? arr.find((i) => i[key] === el[key])\n                    : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n) {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]);\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE') \n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys.map((key) => JSON.stringify(item[key])).join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup) {\n    const invalid = [];\n    for (const key in form.controls) {\n        if (!form.controls[key].valid) {\n            invalid.push(key);\n        }\n    }\n    return invalid;\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            mat-icon-button\n            class=\"relative flex items-center justify-center h-8 w-8\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            [center] {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, BaseClass } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            mat-icon-button\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            mat-icon-button\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends BaseClass {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [name='message'] {\n                transform: translate(-50%, -120%);\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        mat-button\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { BaseClass } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapPinComponent } from '@placeos/components';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <header class=\"h-12 px-2\">\n            <app-icon>place</app-icon>\n            <h1 class=\"ml-2\">{{ item.name }}</h1>\n        </header>\n        <div\n            body\n            class=\"relative overflow-hidden pointer-events-none\"\n            *ngIf=\"level\"\n        >\n            <i-map\n                [src]=\"level.map_id\"\n                [styles]=\"style_map\"\n                [features]=\"features\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n            </i-map>\n            <div\n                class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow\"\n            >\n                {{ level?.name }}\n            </div>\n        </div>\n        <footer\n            class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n        >\n            <button mat-button class=\"inverse w-32\" mat-dialog-close>\n                Close\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n                width: 80vw;\n                height: 65vh;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        console.log('Locate Data:', this._data);\n    }\n\n    public ngOnInit(): void {\n        this.timeout('init', () => {\n            this.processFeature();\n            this.processStyles();\n        }, 1000);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        console.log('Feature:', focus);\n        this.features = [focus];\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    ApplicationIcon,\n    BaseClass,\n    SettingsService,\n} from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error>Invalid username or password</mat-error>\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center justify-center w-full\" *ngIf=\"!loading\">\n                    <button mat-button color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">Access forbidden.</h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    CanActivate,\n    CanLoad,\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard implements CanActivate, CanLoad {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\n\nexport * from './action-icon.component';\nexport * from './binding.directive';\nexport * from './confirm-modal.component';\nexport * from './icon.component';\nexport * from './login.component';\nexport * from './popout-menu.component';\nexport * from './unauthorised.component';\nexport * from './user-avatar.component';\nexport * from './interactive-map.component';\nexport * from './map-pin.component';\nexport * from './map-radius.component';\nexport * from './misconfigured.component';\nexport * from './status-overlay.component';\nexport * from './custom-table.component';\nexport * from './custom-tooltip.component';\nexport * from './fixed.pipe';\nexport * from './safe.pipe';\nexport * from './sanitise.pipe';\nexport * from './virtual-keyboard.component';\nexport * from './global-loading.component';\nexport * from './map-locate-modal.component';\n\nexport * from './authorised-admin.guard';\nexport * from './authorised-user.guard';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, ...MAT_MODULES],\n    providers: [\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n    ],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button mat-button name=\"accept\" class=\"w-32\" (click)=\"onConfirm()\">\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends BaseClass\n    implements OnChanges, OnDestroy {\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this._updateType();\n        if (this._overlay_ref) this.close();\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            hasBackdrop: !!this.backdrop,\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withPositions([\n                    {\n                        originX: this.x_pos || 'end',\n                        originY:\n                            (this.y_pos === 'top'\n                                ? 'bottom'\n                                : this.y_pos == 'bottom'\n                                ? 'top'\n                                : this.y_pos) || 'bottom',\n                        overlayX: this.x_pos || 'end',\n                        overlayY: this.y_pos || 'top',\n                    },\n                ]),\n        });\n        this._overlay_ref.attach(this._portal);\n        if (this.backdrop) {\n            this.subscription(\n                'backdrop',\n                this._overlay_ref.backdropClick().subscribe(() => this.close())\n            );\n        }\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button mat-icon-button (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { first } from 'rxjs/operators';\nimport { isOnline } from '@placeos/ts-client';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 9999;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n    ) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        setTimeout(() => (this.loading = false), 300);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\n\n@Component({\n    selector: 'app-icon',\n    template: `\n        <div class=\"app-icon\">\n            <i *ngIf=\"!icon || icon.type !== 'img'\" [class]=\"icon?.class || className\">\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img *ngIf=\"icon && icon.type === 'img'\" [src]=\"icon.src | safe: 'resource'\" />\n        </div>\n    `,\n    styles: [\n        `\n            .app-icon {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                height: 1.25em;\n                width: 1.25em;\n            }\n\n            i {\n                font-size: 1em;\n            }\n\n            img {\n                height: 1em;\n                width: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center p-8\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img class=\"h-full object-contain\" *ngIf=\"image\" [src]=\"image.url || image\" />\n            </div>\n            <div\n                class=\"h-full w-full relative flex items-center justify-center opacity-30\"\n                *ngIf=\"!images?.length\"\n            >\n                <p>No Images for Asset</p>\n            </div>\n            <button\n                mat-icon-button\n                class=\"text-secondary border border-solid border-secondary absolute top-1/2 left-2 -translate-y-1/2 bg-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                mat-icon-button\n                class=\"text-secondary border border-solid border-secondary absolute top-1/2 right-2 -translate-y-1/2 bg-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n            <div class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30\" *ngIf=\"images?.length\">\n                {{ offset + 1 }} / {{ images.length }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div #outlet tabindex=\"0\" role=\"map\" class=\"absolute inset-0\"></div>\n        <mat-spinner\n            *ngIf=\"!viewer || loading\"\n            class=\"absolute\"\n            [diameter]=\"48\"\n        ></mat-spinner>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends BaseClass\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView();\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (changes.zoom || changes.center) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView();\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            console.log('Loading:', this.loading);\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            console.log('Set features:', this.feature_list);\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () => this.createView());\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id || JSON.stringify({ ...feature });\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) => _.get(MAP_FEATURE_DATA)?.track_id && _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { BaseClass, HashMap } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends BaseClass implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: HashMap<number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from '../../../users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img class=\"h-full w-full\" [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent extends BaseClass implements OnDestroy {\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    if (\n        control.parent?.get('date') &&\n        isAfter(\n            new Date(),\n            addMinutes(control.parent.get('date').value, control.value)\n        )\n    ) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nexport function generateEventForm(event: CalendarEvent): FormGroup {\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(event.host || '', [Validators.required]),\n        organiser: new FormControl(event.organiser || {}, [\n            Validators.required,\n        ]),\n        creator: new FormControl(event.creator, [Validators.required]),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title, [Validators.required]),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_master_id: new FormControl(event.recurring_master_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering || []),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        system: new FormControl(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) =>\n        form.controls.system.setValue(l.length ? l[0] : null)\n    );\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BaseClass, getInvalidFields } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { getUnixTime } from 'date-fns';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { generateEventForm } from './utilities';\n\nconst BOOKING_URLS = ['book/spaces', 'schedule/view', 'confirm/success'];\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features?: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends BaseClass {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({ zone_ids: [] });\n    private _form = new BehaviorSubject<FormGroup>(null);\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly available_spaces = combineLatest([\n        this._view,\n        this._options,\n        this._form,\n        this._org.initialised.pipe(filter((_) => _)),\n    ]).pipe(\n        filter(([view, _, form]) => view === 'find' && !!form),\n        debounceTime(300),\n        switchMap(([_, options, form]) => {\n            this._loading.next('Retrieving available spaces...');\n            const start = form.value.date;\n            const end = form.value.date + form.value.duration * 60 * 1000;\n            return querySpaceFreeBusy(\n                {\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zone_ids:\n                        options.zone_ids?.join(',') || this._org.building.id,\n                    features: options.features?.join(','),\n                    capacity: options.capacity,\n                },\n                this._org\n            );\n        }),\n        map((_) =>\n            _.filter(\n                (space) =>\n                    !space.availability?.length ||\n                    space.availability.find((_) => _.status !== 'busy')\n            )\n        ),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form.getValue();\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    constructor(private _org: OrganisationService, private _router: Router) {\n        super();\n        this.available_spaces.subscribe();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._form.next(generateEventForm(event));\n        this.subscription(\n            'form_change',\n            this._form.getValue().valueChanges.subscribe(() => this.storeForm())\n        );\n        this._event.next(event);\n        this._options.next({});\n    }\n\n    public resetForm() {\n        if (!this._form.getValue()) this.newForm();\n        const event = this._event.getValue();\n        this._form\n            .getValue()\n            .patchValue({ ...(event || {}), ...(event?.extension_data || {}) });\n        this._options.next({});\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getValue()?.value || {})\n        );\n    }\n\n    public loadForm() {\n        if (!this._form.getValue()) this.newForm();\n        this._form.getValue().patchValue({\n            ...JSON.parse(sessionStorage.getItem('PLACEOS.event_form') || '{}'),\n        });\n    }\n\n    public async postForm(force: boolean = false) {\n        const form = this._form.getValue();\n        if (!form) throw 'No form for event';\n        if (!form.valid && !force)\n            throw `Some form fields are invalid. [${getInvalidFields(form).join(\n                ', '\n            )}]`;\n        const { id, date, duration } = form.value;\n        const spaces = form.get('resources')?.value || [];\n        if (\n            !id ||\n            date !== this.event.date ||\n            duration !== this.event.duration\n        ) {\n            await this.checkSelectedSpacesAreAvailable(\n                spaces,\n                date,\n                duration,\n                id\n            );\n        }\n        const result = await saveEvent(\n            new CalendarEvent(this._form.getValue().value)\n        ).toPromise();\n        this.clearForm();\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_event',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ) {\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            system_ids: spaces.map((_) => _.id).join(','),\n        };\n        if (ignore) query.ignore = ignore;\n        const space_list = spaces.length\n            ? await querySpaceFreeBusy(query).toPromise()\n            : [];\n        if (space_list.length !== spaces.length)\n            throw `${\n                spaces.length - space_list.length\n            } space(s) are not available at the selected time`;\n    }\n}\n","import { HashMap, Identity, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Master event */\n    public master?: CalendarEvent;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees: HashMap = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => user.resource)\n                        .map((s) => new Space(s)),\n                'email'\n            ) || [];\n        this.title = data.title || '';\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone = data.timezone || '';\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week,\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus(this) || 'none';\n        this.location = data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: this })\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): HashMap {\n        const obj: HashMap = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(this.recurrence.end),\n            };\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(attendees, 'email');\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e)))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id ? updateEvent(data.id, data, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes, addSeconds,\n\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (details.resources.every((i) => i.response_status === 'accepted')) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: start.valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { SpacesService } from '@placeos/spaces';\nimport { searchStaff, StaffUser, User } from '@placeos/users';\nimport { getModule } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) => (q?.length > 2 ? this.search_fn(q) : of([]))),\n        catchError(() => [])\n    );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._spaces.list,\n        this._user_search,\n        this._emergency_contacts,\n    ]).pipe(\n        map(([spaces, users, contacts]) => {\n            const filter = this._filter.getValue() || '';\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map((u) => ({\n                            id: u.email,\n                            type: (u as any).type || 'contact',\n                            name: u.name,\n                            description: u.email,\n                        }))\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) => searchStaff(q);\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        this._spaces.list.subscribe();\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        let sys_id: any = this._org.binding('location_services');\n        if (!sys_id) return;\n        const mod = getModule(sys_id, 'LocationServices');\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Injectable } from '@angular/core';\nimport { queryBookings } from '@placeos/bookings';\nimport {\n    BaseClass,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { DEFAULT_COLOURS, ExploreStateService } from '..';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends BaseClass {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`desk-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Space } from '@placeos/spaces';\n\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\">Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { CalendarEvent, generateEventForm, saveEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { querySpaceAvailability } from '@placeos/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                        />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.duration\">\n                        <label>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading = '';\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...(this._data.space || {}), resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        };\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            throw on_error(\n                `Some form fields are not valid: [${list.join(', ')}]`\n            );\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await querySpaceAvailability({\n            system_ids: this.form.controls.resources.value\n                ?.map((s) => s.id)\n                .join(','),\n            period_start: Math.floor(this.form.value.date / 1000),\n            period_end:\n                Math.floor(this.form.value.date / 1000) +\n                this.form.value.duration * 60,\n        })\n            .toPromise()\n            .catch((e) => {\n                on_error(\n                    'Space is unavailble for the selected time and duration'\n                );\n                throw e;\n            });\n        if (spaces.length <= 0) {\n            return on_error(\n                'Space is unavailble for the selected time and duration'\n            );\n        }\n        this.loading = 'Creating booking...';\n        await saveEvent(new CalendarEvent(this.form.value))\n            .toPromise()\n            .catch((e) => {\n                on_error('Error creating booking.');\n                throw e;\n            });\n        notifySuccess(\n            `Successfully created booking in ${\n                this._data.space.display_name || this._data.space.name\n            }`\n        );\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [attr.id]=\"id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">{{ map_id }}</h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, first, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nimport {\n    BaseClass,\n    currentUser,\n    HashMap,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { BookingFormService, queryBookings } from '@placeos/bookings';\nimport { StaffUser } from '@placeos/users';\nimport { Desk, OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _users: HashMap<string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(new Date())),\n                period_end: getUnixTime(endOfDay(new Date())),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: HashMap) => new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence\n                        ? 'free'\n                        : !has_presence\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking: this._settings.get('app.desks.enabled') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) =>\n                this._in_use.next(_.map((i) => i.asset_id))\n            )\n        );\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,            \n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                this._bookings.newForm();\n                const { date, duration } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration\n                );\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user: options.host || currentUser(),\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (options.host || currentUser())?.name;\n                notifySuccess(\n                    `Successfull booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(date: number, duration: number) {\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n        }\n        return { date, duration };\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { BaseClass } from '@placeos/common';\nimport { Observable } from 'rxjs';\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div shadow class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p class=\"break-words\"><label>MAC:</label> {{ mac }}</p>\n                    <p><label>Accuracy:</label> {{ variance }}m</p>\n                    <p><label>Last Seen:</label> {{ last_seen }}</p>\n                    <p type *ngIf=\"manufacturer\">\n                        <label>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                    <p ssid *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                    <p username *ngIf=\"username\">\n                        <label>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user\">\n                        <label>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends BaseClass implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription('zoom', this._details.zoom$.subscribe(_ => this.zoom = _));\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends BaseClass implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { MapPinComponent, MapRadiusComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <!-- <explore-search class=\"absolute top-0 right-0\"></explore-search> -->\n        <div\n            zones\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                (ngModelChange)=\"toggleZones($event)\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            *ngIf=\"space\"\n            class=\"h-full w-full pointer-events-auto relative\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white p-4 top-0 left-0 transform shadow pointer-events-none\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 class=\"m-0 mb-2\">\n                        {{ space.display_name || space.name }}\n                    </h4>\n                    <div capacity class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                        <span>Capacity: </span>{{ space.capacity }}\n                        {{ space.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                    <div class=\"flex flex-wrap my-2 text-sm\">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light ' +\n                                status\n                            \"\n                        >\n                            {{ status }}\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div features *ngIf=\"space.features?.length > 0 && show_features\">\n                        <h4 class=\"m-0 mb-2\">Room Features</h4>\n                        <ul class=\"pl-2\">\n                            <li\n                                class=\"text-sm\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    HashMap,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.timeout('after_bind', () => {\n                this.updateActions(list);\n                this.updateHoverElements(list);\n            });\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        console.debug('Book Space:', space);\n        if (this._statuses[space.id] === 'busy' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._dialog.open(\n            (this._settings.get('app.show_qr_for_booking')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            features.push({\n                location: space.map_id,\n                track_id: `${space.map_id}-info-hover`,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        console.log('Features:', features);\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService, unique } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._spaces.list,\n    ]).pipe(\n        map(([level, spaces]) =>\n            spaces.filter((space) => space.zones.includes(level?.id))\n        )\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: .5, y: .5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                            (coordinates?.length\n                                ? getCenterPoint(coordinates)\n                                : null)\n                        : null;\n                this._draw[area.id] = !!draw_polygon;\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            };\n            labels.push(this._labels[zone.area_id]);\n        }\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', features);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button z-in mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon>add</app-icon>\n        </button>\n        <button z-out mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon>remove</app-icon>\n        </button>\n        <button reset mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: 0.5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"form\" [formGroup]=\"form\" class=\"w-[24rem] pt-4\">\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\">\n            <button mat-button [mat-dialog-close]=\"form.value\" class=\"w-32\">Continue</button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public form: FormGroup;\n\n    public readonly book_until = this._data.until\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { date: number; duration: number, until: number }\n    ) {\n        this.form = new FormGroup({\n            date: new FormControl(_data.date),\n            duration: new FormControl(_data.duration),\n        });\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { ComponentsModule } from '@placeos/components';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { AssetListFieldComponent } from './asset-list-field.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\n\nexport * from './action-field.component';\nexport * from './counter.component';\nexport * from './date-field.component';\nexport * from './duration-field.component';\nexport * from './time-field.component';\nexport * from './user-list-field.component';\nexport * from './user-search-field.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    AssetListFieldComponent,\n    CateringListFieldComponent,\n    SpaceListFieldComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <div\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component } from \"@angular/core\";\n\n\nexport interface Asset {\n    id: string;\n    name: string;\n    category: string;\n    images: { name: string; url: string }[];\n    barcode: string;\n    brand: string;\n    description: string;\n    specifications: Record<string, string>;\n    purchase_details: { name: string; value: string }[];\n    consumables: { id: string; name: string }[];\n    general_details: { id: string; name: string }[];\n    invoices: { name: string; url: string; price?: number }[];\n    count: number;\n    locations: [string, string][];\n}\n\n@Component({\n    selector: `asset-list-field`,\n    template: ``,\n    styles: [``]\n})\nexport class AssetListFieldComponent {\n    public items: Asset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Asset[]) => void;\n    private _onTouch: (_: Asset[]) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n     public setValue(new_value: Asset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Asset[]) {\n        this.items = value || []\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Asset[]) => void) => this._onChange = fn;\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Asset[]) => void) => this._onTouch = fn;\n    public readonly setDisabledState = (s: boolean) => this.disabled = s;\n}","import { Component } from \"@angular/core\";\nimport { CateringItem } from \"libs/catering/src/lib/catering-item.class\";\n\n@Component({\n    selector: `catering-list-field`,\n    template: ``,\n    styles: [``]\n})\nexport class CateringListFieldComponent {\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n     public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || []\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) => this._onChange = fn;\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) => this._onTouch = fn;\n    public readonly setDisabledState = (s: boolean) => this.disabled = s;\n}","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                mat-icon-button\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">{{ (render_fn ? render_fn(value) : value) || '0' }}</div>\n            <button\n                mat-icon-button\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 * this.step : this.shift_key ? 10 * this.step : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 * this.step : this.shift_key ? 10 * this.step : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { BaseClass } from 'libs/common/src/lib/base.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" overlay (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends BaseClass\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import { Component, forwardRef, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Identity } from '@placeos/common';\nimport { formatDuration } from 'date-fns';\nimport * as dayjs from 'dayjs';\n\n\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                        {{ option.name }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        const date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for (const option of this.specialPreprops) {\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(option / 60),\n                          minutes: option % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(option / 60), minutes: option % 60 })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(time / 60),\n                          minutes: time % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(time / 60), minutes: time % 60 })}`,\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Space, NewSpaceSelectModalComponent } from '@placeos/spaces';\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"2\">\n                                1-2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"9\">\n                                3-9 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"100\">\n                                10+ People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div class=\"w-24 h-24 rounded-xl bg-black/20 mr-4\"></div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Space' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} People\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            mat-button\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            mat-button\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button mat-icon-button fav class=\"absolute top-1 right-1\">\n                    <app-icon>favorite_border</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            mat-button\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 9;\n    public spaces: Space[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    constructor(private _dialog: MatDialog) {}\n\n    /** Add or edit selected spaces */\n    public changeSpaces(edit_space?: Space) {\n        const ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: edit_space,\n        });\n        ref.afterClosed().subscribe((space?: Space) => {\n            if (!space) return;\n            this.setValue([\n                ...this.spaces.filter((_) => _.id !== space.id),\n                space,\n            ]);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Space[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { BaseClass, Identity, timeFormatString } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field\n            appearance=\"outline\"\n            [style.display]=\"show_select ? 'none' : ''\"\n            (keydown.enter)=\"showSelect()\"\n        >\n            <input\n                matInput\n                type=\"time\"\n                [disabled]=\"disabled\"\n                [ngModel]=\"time\"\n                (ngModelChange)=\"setValue($event)\"\n            />\n            <button mat-icon-button matSuffix class=\"relative top-1 -right-1\" (click)=\"showSelect()\">\n                <app-icon class=\"text-2xl text-black text-opacity-50\">\n                    arrow_drop_down\n                </app-icon>\n            </button>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{ option.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends BaseClass\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                name: `${format(date, timeFormatString())}`,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                name: `${format(date, timeFormatString())}`,\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    BaseClass,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    NewUserModalComponent,\n    searchStaff,\n    User,\n    USER_DOMAIN,\n} from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, of } from 'rxjs';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div\n            class=\"mb-4bg-white text-black\"\n            form-field\n            [attr.disabled]=\"disabled\"\n        >\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-list #chipList aria-label=\"Fruit selection\">\n                        <mat-chip\n                            *ngFor=\"let user of active_list\"\n                            (removed)=\"removeUser(user)\"\n                        >\n                            <app-icon class=\"mr-2\">business</app-icon>\n                            {{ user.name || user.email }}\n                            <button matChipRemove>\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip>\n                        <input\n                            placeholder=\"Type a name or email\"\n                            name=\"user_email\"\n                            [ngModel]=\"search$.getValue()\"\n                            (ngModelChange)=\"search$.next($event)\"\n                            [matAutocomplete]=\"auto\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                            (matChipInputTokenEnd)=\"addUserFromEmail($event)\"\n                        />\n                        <mat-spinner\n                            *ngIf=\"loading\"\n                            diameter=\"24\"\n                            matSuffix\n                        ></mat-spinner>\n                    </mat-chip-list>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    mat-button\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    Add <span class=\"hidden sm:inline\">External</span>\n                </button>\n                <button\n                    mat-button\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    Upload <span class=\"hidden sm:inline\">CSV</span>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    mat-button\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <span class=\"hidden sm:inline\">CSV</span> Template\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends BaseClass\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n\n    public readonly search$ = new BehaviorSubject('');\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return _ ? searchStaff(_).pipe(catchError((_) => [])) : of([]);\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public addUserFromEmail(email: string) {\n        validateEmail(email)\n            ? this.addUser(\n                  new User({ id: email, email, name: email.split('@')[0] })\n              )\n            : '';\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list.filter((_) => _.email !== user.email);\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout('clear_search', () => this.search$.next(''));\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter(\n            (a_user) => a_user.email !== user.email\n        );\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { BaseClass, flatten } from '@placeos/common';\nimport { searchGuests, searchStaff, User } from '@placeos/users';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field text-black\" form-field>\n            <mat-form-field overlay appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs text-black opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\">\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends BaseClass\n    implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { PlaceZone } from '@placeos/ts-client';\n\nexport class Desk {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n    }\n\n    public format() {\n        const { id, name, bookable, groups, features } = this;\n        return {\n            id,\n            name,\n            bookable,\n            groups,\n            features\n        };\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","import { HashMap, Identity } from '@placeos/common';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: HashMap = {};\n    /** List of points of interest for the level */\n    public readonly locations: readonly Identity[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys, HashMap } from '@placeos/common';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: HashMap;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { HashMap, Identity, RoomConfiguration } from '@placeos/common';\nimport { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: HashMap;\n    locker_structure: HashMap;\n    roles: HashMap;\n    zone: string;\n    location: string;\n    neighbourhoods: HashMap;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n\n    public readonly orientations: HashMap<number>;\n    public readonly attributes: readonly Identity[];\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location ||\n            disc_info.location || { longitude: null, latitude: null };\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    HashMap,\n    notifyError,\n    RoomConfiguration,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: HashMap[] = [];\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: HashMap<HashMap> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings(): HashMap[] {\n        return this._settings;\n    }\n\n    /** Mapping of builgins to settings overrides */\n    public get building_settings(): HashMap<HashMap> {\n        return this._building_settings;\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): HashMap {\n        if (!bld_id && this.building) {\n            bld_id = this.building.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue();\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this._service.overrides = [\n            ...this._settings,\n            this.buildingSettings(bld.id).details,\n        ];\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return this.building?.bindings[name] || this._organisation?.bindings[name];\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadBuildings();\n        await this.loadLevels();\n        await this.loadSettings();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: HashMap = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const building_list = await queryZones({\n            tags: 'building',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) =>\n                    i.data.filter((_) => _.parent_id === this._organisation?.id)\n                )\n            )\n            .toPromise();\n        if (!building_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const buildings = [];\n        for (const bld of building_list) {\n            const bindings: HashMap = (\n                await showMetadata(bld.id, 'bindings').toPromise()\n            )?.details;\n            buildings.push(new Building({ ...bld, bindings }));\n        }\n        this._buildings.next(buildings);\n        const id = localStorage.getItem(`PLACEOS.building`);\n        if (id && this.buildings.find((bld) => bld.id === id)) {\n            this._active_building.next(\n                this.buildings.find((bld) => bld.id === id)\n            );\n        }\n        if (!this.building?.id && buildings?.length > 0) {\n            this.building = buildings[0];\n        }\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_name = `${(\n            this._service.app_name || 'workplace'\n        ).toLowerCase()}_app`;\n        const app_settings = await showMetadata(this._organisation.id, app_name).toPromise();\n        const global_settings = await showMetadata(this._organisation.id, 'settings').toPromise();\n        this._settings = [global_settings.details, app_settings.details];\n        const buildings = this.buildings;\n        for (const bld of buildings) {\n            this._building_settings[bld.id] = await showMetadata(bld.id, app_name).toPromise();\n        }\n        this._service.overrides = [\n            ...this._settings,\n            this.buildingSettings(this.building.id).details,\n        ];\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"absolute inset-0 sm:relative sm:inset-none bg-white flex flex-col\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button mat-icon-button mat-dialog-close class=\"z-20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Find Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 min-h-[65vh] h-[65vh] w-full\"\n            >\n                <space-filters class=\"h-full\"></space-filters>\n                <div class=\"flex flex-col items-center flex-1 w-1/2 h-full\">\n                    <space-filters-display class=\"w-full border-b border-gray-200\"></space-filters-display>\n                    <space-list\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full sm:relative sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.absolute]=\"displayed\"\n                    [class.inset-x-0]=\"displayed\"\n                    [class.top-0]=\"displayed\"\n                    [class.bottom-20]=\"displayed\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex flex-col-reverse sm:flex-row items-center justify-end p-2 sm:space-x-2 border-t border-gray-200 w-full\"\n            >\n                <button\n                    mat-button\n                    return\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    mat-button\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('user.favourite_spaces') || [];\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public toggleFavourite(space: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('user.favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'user.favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                mat-icon-button\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button mat-button class=\"w-32\" [class.request]=\"space.by_request\">\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    BaseClass,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button mat-button (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends BaseClass {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.booking.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section image class=\"relative w-full h-64 z-10\">\n                <image-carousel\n                    [images]=\"space.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    mat-icon-button\n                    fav\n                    [class.text-blue-600]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute bottom-0 left-2 translate-y-1/2 bg-white rounded shadow\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <section actions class=\"z-0\">\n                <h2>{{ space.display_name || space.name }}</h2>\n                <button\n                    mat-button\n                    [class.inverse]=\"active\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon>{{ active ? 'remove' : 'add' }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </section>\n            <section details>\n                <h2>Details</h2>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>people</app-icon>\n                    <p>{{ space.capacity }} People</p>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>meeting_room</app-icon>\n                    <p>{{ space.level?.display_name || space.level?.name }}</p>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <p>BLD 1</p>\n                </div>\n            </section>\n            <section facilities>\n                <h2>Details</h2>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>people</app-icon>\n                    <p>WiFi Available</p>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>restaurant</app-icon>\n                    <p>Catering Available</p>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>edit</app-icon>\n                    <p>Whiteboard</p>\n                </div>\n            </section>\n            <section map class=\"w-[calc(100vw-2rem)] h-64 relative border border-gray-200 overflow-hidden rounded\">\n                <interactive-map\n                    [src]=\"map_url\"\n                    [features]=\"features\"\n                    [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                ></interactive-map>\n            </section>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.space.level.map_id;\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { take } from 'rxjs/operators';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60\">\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    class=\"relative p-2 rounded-lg w-full shadow border border-gray-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"absolute inset-0 flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-24 h-24 rounded-xl bg-black/20 mr-4\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-12 w-12 flex items-center justify-center text-white\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"space-y-2 pb-4\">\n                            <div class=\"font-medium\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>{{ space.location }}</p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-icon-button\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-600]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{ isFavourite(space.id) ? 'favorite' : 'favorite_border' }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0,0,0,0.05);\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public selected: string[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n\n    public readonly available_spaces = this._event_form.available_spaces;\n    public readonly loading = this._event_form.loading;\n\n    constructor(\n        private _event_form: EventFormService\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: `space-filters`,\n    template: ``,\n    styles: [``]\n})\nexport class SpaceFiltersComponent {\n\n}\n","import { Component } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BaseClass } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                mat-button\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    mat-button\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"true\"\n                >\n                    Map\n                </button>\n                <button\n                    mat-button\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"false\"\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div filter-item zone *ngIf=\"location\">\n                {{ location }}\n            </div>\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    mat-icon-button\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends BaseClass {\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription('opts', this.options.subscribe(({ zone_ids }) => this._updateLocation(zone_ids)))\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceMapComponent } from './space-select-modal/space-map.component';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceMapComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        MatBottomSheetModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from '@placeos/organisation';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly image: string;\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.image = data.image || '';\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { Space } from './space.class';\nimport { flatten, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(map(_ => unique(flatten(_.map(i => i.features)))));\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(private _org: OrganisationService) {\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.loadSpaces());\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    /**\n     * Find space with given id/email\n     * @param id ID/Email address associated with the space\n     */\n    public find(id: string) {\n        return this._list\n            .getValue()\n            .find((space) => space.id === id || space.email === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseClass, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form?: FormGroup;\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                type: 'external',\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.organisation\">\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    Organisation<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"Organisation\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>Organisation is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.assistance_required\">\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.visit_expected\">\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\n\n@NgModule({\n    declarations: [NewUserModalComponent, UserFormComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        ComponentsModule,\n        MatCheckboxModule,\n    ],\n    exports: [NewUserModalComponent],\n})\nexport class SharedUsersModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item: HashMap) => new StaffUser(item)))\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number; \n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n    department?: string;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Department that the user belongs to in the organisation */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.extension_data?.status || data.status || 'pending';\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser,\n    host: string = ''\n): FormGroup {\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n"],"sourceRoot":"webpack:///","file":"main.js"}