{"version":3,"file":"main.js","mappings":"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E,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI3K,EAAU8J,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK9J,EAAU6J,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","_ref3$","ignore","queryGroupAvailability","zone_id","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref5","_$assets","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","ical_uid","location_name","location_id","filtered","event_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","_c4","_r16","_booking","hide_map","ts","booking_start","booking_end","_this$booking9","_this$booking10","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","viewLocation","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_52_Template","BookingDetailsModalComponent_button_53_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","restrictions","showMetadata","available_resources","merge","timer","getRawValue","restriction","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user2$id","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","approved","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","_ref13","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","rejected","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","previous_time","previous_duration","previous_all_day","_v$all_day","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","setHours","setMinutes","max","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","response_type","approveBooking","rejectBooking","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_5_0","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_6_Template","feat_r18","_r20","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","end_date","use_24hr","tmp_10_0","tmp_19_0","tmp_21_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level2","_this2$level","new_zoom","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_r8","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r18","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","hidden","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","item_r15","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","CateringOrderItemComponent","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r25","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","_this$item","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","helpers_1","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","stringToMinutes","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","json","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","start1","end1","start2","end2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_disable_logging","notify","message","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","applySetting","dark_mode","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","nativeElement","cookie","apiKey","fetch","blob","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","authority","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_template_2_ng_container_0_Template","ɵɵpureFunction4","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r20","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","Observable","viewQuery","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","show","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","parts","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","newSupportTicket","UserControlsComponent_button_45_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_ngOnChanges","ngOnChanges","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r21","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","EventDetailsModalComponent_div_72_div_3_Template","item_r24","EventDetailsModalComponent_ng_container_73_div_5_Template","_c25","show_attendees","act_r31","_r33","EMPTY_ACTIONS","_this$event$system","_this$event2$ext","_this$event3$linked_b","hide_edit","has_assets","linked_bookings","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","EventDetailsModalComponent_button_80_Template","EventDetailsModalComponent_button_87_Template","EventDetailsModalComponent_button_88_Template","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_2","asset_utilities_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","_assets","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","filterSpacesFromRules","booking_rules","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","is_owner","breakdown","overflow","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","old_system","host_override","removeEvent","_makeBooking2","_updateVisitorList","toJSON","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","is_external","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","_data$recurrence$days","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","_s$resource","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","addToDate","rulesForSpace","rulemap","_step4","_iterator4","_rulemap$zone","_step5","_iterator5","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","getHours","max_length","_rulesForSpace","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event2$resourc","_this$_event3","_this$_event3$system","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","_form$value$recurrenc","_form$value$recurrenc2","getDay","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","is_restricted","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","ExploreStateService","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","pair_r5","ExploreMapViewComponent_div_12_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","map_styles","positions","map_positions","map_actions","map_labels","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","locations","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","updateZoom","updateCenter","ExploreMapViewComponent_div_11_Template","ExploreMapViewComponent_div_12_Template","hide_zones","show_legend","existing_event","week_events","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","openEventLinkModal","bookSpace","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","coordinates","properties","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","render_fn","FieldDateAdapter","_core_2$NativeDateAda","displayFormat","NativeDateAdapter","FIELD_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_super2","_from","_to","old_date","new_date","getMinutes","formatISO","DateAdapter","useClass","MAT_DATE_FORMATS","ɵɵreference","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","user_search_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i12","MatSelect","i13","RichTextInputComponent","ImageListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","cloud_uploads_1","blobUtil","url_r7","copyLink","viewImage","removeImage","progress","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","uploadFile","observer","arrayBuffer","upload_details","formatted_size","humanReadableByteCount","upload","arrayBufferToBlob","upload_list","uploadFiles","file_name","takeWhile","access_url","complete","readAsArrayBuffer","_uploadImages","_clipboard","upload_ids","_upload_list","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploadImages","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","recurrence_modal_component_1","formatted_value","RecurrenceFieldComponent","getDate","instance_of_month","RecurrenceModalComponent","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","_container_el","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","NewSpaceSelectModalComponent","_this2$_dialog_ref","_this2$_dialog_ref$co","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","connected","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","visible","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_updateSettingOverrides","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","queryZones","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","geolocation","getCurrentPosition","_this4$building","_position$coords","coords","latitude","longitude","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","bld_list","_this5$region","_step6","_iterator6","_this$building5","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","SpaceSelectItemComponent_div_0_div_6_Template","SpaceSelectItemComponent_div_0_button_7_Template","by_request","SpaceSelectItemComponent","SpaceSelectItemComponent_div_0_Template","SpaceSelectItemComponent_ng_template_1_Template","bld_r10","SpaceSelectModalComponent_mat_form_field_9_mat_option_2_Template","type_r14","SpaceSelectModalComponent_mat_form_field_10_mat_option_2_Template","space_types","_r23","space_r19","spaceSelected","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_a_space_select_item_1_Template","space_map","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_Template","SpaceSelectModalComponent_ng_container_12_ng_container_1_Template","space_r27","SpaceSelectModalComponent_div_13_ng_container_1_a_space_select_item_1_Template","SpaceSelectModalComponent_div_13_ng_container_1_Template","show_selected","SpaceSelectModalComponent","SpaceSelectModalComponent_mat_form_field_9_Template","SpaceSelectModalComponent_mat_form_field_10_Template","SpaceSelectModalComponent_ng_container_12_Template","SpaceSelectModalComponent_div_13_Template","SpaceSelectModalComponent_footer_14_Template","SpaceSelectModalComponent_ng_template_15_Template","SpaceSelectModalComponent_ng_template_17_Template","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r5","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_div_22_Template","tmp_7_0","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r11","feat_r13","feature_display","SpaceFiltersComponent_section_48_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_48_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_section_48_Template","SpaceFiltersComponent_div_50_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","public","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","today","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","scrollTop","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_29_Template","FindAvailabilityModalComponent_user_availability_list_35_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","MatCheckbox","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [source]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zone_id: bld.id || zone || '',\n                    zones: zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s))\n            );\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten } from '@placeos/common';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes, setHours, setMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    let previous_time = form.value.date;\n    let previous_duration = form.value.duration;\n    let previous_all_day = form.value.all_day;\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (!('all_day' in v)) {\n            previous_time = v.date || previous_time;\n            previous_duration = v.duration || previous_duration;\n        }\n        previous_all_day = v.all_day ?? previous_all_day;\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) {\n            previous_time = form.value.date;\n            previous_duration = form.value.duration;\n            form.patchValue({\n                date: setHours(setMinutes(previous_time, 0), 6).valueOf(),\n                duration: 12 * 60,\n            });\n            form.controls.duration.disable();\n        } else if (previous_all_day && !all_day) {\n            form.controls.duration.enable();\n            form.patchValue({\n                date: Math.max(Date.now() - 1, previous_time),\n                duration: previous_duration,\n            });\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"active = !active\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, AsyncHandler } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: 'shortTime' }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event).toPromise();\n        this._poll.next(Date.now());\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, endOfDay, format, startOfDay } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day ? startOfDay(event.date) : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? endOfDay(event.date)\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"90790e6\",\n    \"hash\": \"90790e6\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"90790e6\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1694412496584\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 overflow-hidden dark:bg-neutral-700 dark:text-white\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"applySetting('dark_mode', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div\n                    class=\"px-8 py-4 bg-gray-200 dark:bg-neutral-600 text-center\"\n                    i18n\n                >\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-gray-700 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return !!this._settings.get('dark_mode');\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-gray-300 divide-y divide-gray-300 dark:border-neutral-500 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-black/5 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column]\n                            }}<span\n                                *ngIf=\"\n                                    row[column] == null || row[column] === ''\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                N/A\n                            </span></ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column,\n                                        name: display_column[i] || column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 divide-x divide-gray-300\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (token()) {\n                    this.loading = false;\n                    this.clearInterval('has_token');\n                }\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white divide-y divide-gray-300 dark:divide-neutral-500\"\n            (click)=\"close()\"\n        >\n            <div\n                class=\"flex items-center space-x-2 p-2 border-b dark:border-neutral-500\"\n            >\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 dark:text-white py-2 w-full\"\n                >\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-gray-200 dark:border-neutral-500 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-white dark:bg-neutral-700 dark:text-white shadow mt-1 flex flex-col relative divide-y divide-gray-300 dark:divide-neutral-500\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2 dark:text-white\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                asset\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">\n                                        {{ item.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, getUnixTime, isBefore, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { filterSpacesFromRules } from './helpers';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration } = this._form.getRawValue();\n            list = filterSpacesFromRules(\n                list,\n                { date, duration, space: null, host: currentUser() },\n                this._org.building.booking_rules\n            );\n            return (list || [])\n                .filter((_, idx) =>\n                    periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    )\n                )\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterSpacesFromRules(\n                    spaces,\n                    { date, duration, space: null, host: currentUser() },\n                    this._org.building.booking_rules\n                );\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterSpacesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                space: null,\n                                host: currentUser(),\n                            },\n                            this._org.building.booking_rules\n                        );\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup || setup;\n                (value as any).breakdown = value.breakdown || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(async (e) => {\n                    if (!this.form.value.id) {\n                        await removeEvent(result.id).toPromise();\n                    }\n                    throw e;\n                });\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport interface LinkedBooking {\n    id: string;\n    asset_id: string;\n    asset_name: string;\n    user_id: string;\n    user_name: string;\n    description: string;\n    booking_type: string;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly update_master: boolean;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n        }\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            delete obj.extension_data.setup;\n            delete obj.extension_data.breakdown;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() >= conditions.is_between[0] &&\n        date_obj.getHours() < conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.ext('setup') || 0),\n        breakdown: new FormControl(this._event.ext('breakdown') || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        const event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...this.form.value,\n                },\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup: new FormControl(event.extension_data?.setup || 0),\n        breakdown: new FormControl(event.extension_data?.breakdown || 0),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    let previous_time = form.value.date;\n    let previous_duration = form.value.duration;\n    let previous_all_day = form.value.all_day;\n    form.valueChanges.subscribe((v) => {\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (!('all_day' in v)) {\n            previous_time = v.date || previous_time;\n            previous_duration = v.duration || previous_duration;\n        }\n        previous_all_day = v.all_day ?? previous_all_day;\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) {\n            previous_time = form.value.date;\n            previous_duration = form.value.duration;\n            form.patchValue({\n                date: setHours(setMinutes(previous_time, 0), 6).valueOf(),\n                duration: 12 * 60,\n            });\n            form.controls.duration.disable();\n        } else if (previous_all_day && !all_day) {\n            form.controls.duration.enable();\n            form.patchValue({\n                date: Math.max(Date.now() - 1, previous_time),\n                duration: previous_duration,\n            });\n        }\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of, timer } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AssetRestriction,\n    BookingFormService,\n} from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this._org.active_building.pipe(\n            debounceTime(50),\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            console.log('On Level update bindings:', system_id);\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.restrictions,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs, restrictions]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in =\n                    checked_in.some((i) => id === i) ||\n                    (is_used && this._settings.get(`app.desk.auto_checkin`));\n                const restriction_list = restrictions.filter((_) =>\n                    _.assets.includes(id)\n                );\n                const is_restricted = restriction_list.find(\n                    ({ start, end }) => Date.now() >= start && Date.now() < end\n                );\n                this._statuses[id] =\n                    bookable && !is_restricted\n                        ? !is_used && !has_presence && !is_checked_in\n                            ? has_signs\n                                ? 'signs-of-life'\n                                : 'free'\n                            : !has_presence && !is_checked_in\n                            ? 'pending'\n                            : 'busy'\n                        : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('restrictions', this.restrictions.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    humanReadableByteCount,\n    Upload,\n    uploadFiles,\n} from '@placeos/cloud-uploads';\nimport { AsyncHandler, notifyInfo, randomInt, unique } from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(file: File): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload: null,\n            };\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            upload_details.upload = upload;\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe(\n                    (state) => {\n                        if (upload.access_url)\n                            upload_details.link = upload.access_url;\n                        upload_details.progress = state.progress;\n                        observer.next(upload_details);\n                        if (state.status === 'error')\n                            observer.error({\n                                ...upload_details,\n                                error: state.error,\n                            });\n                        if (state.status === 'complete') observer.complete();\n                    },\n                    (e) => (upload_details.error = e)\n                );\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [style.background-image]=\"'url(' + url + ')'\"\n            >\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeItem(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(private _clipboard: Clipboard) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file).subscribe(update_fn, update_fn, () => {\n                this._updateUploadHistory();\n            });\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-gray-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            const buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        console.log('Building:', this.building);\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n        console.log('Building:', this.building);\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button\n                btn\n                matRipple\n                class=\"w-32\"\n                [class.request]=\"space.by_request\"\n            >\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button icon mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button btn matRipple (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends AsyncHandler {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceCalendarAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [disabled]=\"form.value.all_day\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-hidden divide-x divide-y divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-gray-300\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-gray-300 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-gray-300\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: #eee !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-gray-300 dark:border-neutral-500 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-red-600 text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}